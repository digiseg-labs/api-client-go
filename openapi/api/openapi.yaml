openapi: 3.0.3
info:
  contact:
    email: support@digiseg.io
  description: |
    ### Digiseg API documentation

    # Introduction

    This API let you harness the power of Digisegs powerful and tracking-free segmentation
    engine.

    Audiences by Digiseg are available in 50+ countries, probablistically mapping
    neighborhood characteristics to the IP addresses observed on the internet -
    Household targeting & measurement for the post-cookie world.

    ## Developer SDKs

    In addition to using these APIs directly through any HTTP client, we provide a set
    of API client SDKs for popular programming languages:

    <div class="api-clients">
      <a class="api-client-box" href="https://github.com/digiseg-labs/api-client-python">
        <i class="api-client-sdk-logo devicon-python-plain"></i>
        <p>API client for Python</p>
      </a>
      <a class="api-client-box" href="https://github.com/digiseg-labs/api-client-ts">
        <i class="api-client-sdk-logo devicon-typescript-plain"></i>
        <p>API client for TypeScript</p>
      </a>
      <a class="api-client-box" href="https://github.com/digiseg-labs/api-client-go">
        <i class="api-client-sdk-logo devicon-go-original-wordmark"></i>
        <p>API client for Go</p>
      </a>
    </div>
    <div class="api-clients-breaker" />

    ## Audience taxonomy

    Digiseg audiences are grouped into private and business audiences. In each group
    there are categories that then contain the audiences. The API endpoints that
    communicate audiences and household characteristics, audience codes are being used.

    The following table can be used as a reference for audience codes. Note that Digiseg
    will at times update names of audiences for purposes of internationalization, clarity
    or other such purposes - but the codes will remain as-is and should be considered a
    stable point of reference for the audience.

    | Group | Category | Audience Code | Audience Name |
    |-------|----------|---------------|---------------|
    | private | home_type | a1 | Apartment |
    |  |  | a2 | House |
    |  | savings | b1 | No Savings |
    |  |  | b2 | Smaller Savings |
    |  |  | b3 | Larger Savings |
    |  | lifecycle | c1 | Young couples and singles |
    |  |  | c2 | Early family life |
    |  |  | c3 | Middle-aged families |
    |  |  | c4 | Mature families |
    |  |  | c5 | Pensioners / Retirees |
    |  | cars | d1 | No cars |
    |  |  | d2 | 1 car |
    |  |  | d3 | 2 or more cars |
    |  | children | e1 | No children |
    |  |  | e2 | 1 child |
    |  |  | e3 | 2 or more children |
    |  | education | f1 | Basic |
    |  |  | f2 | Medium |
    |  |  | f3 | Higher |
    |  | neighbourhood_type | g1 | Countryside |
    |  |  | g2 | Village |
    |  |  | g3 | Suburban |
    |  |  | g4 | City |
    |  | income | h1 | Lowest 20% |
    |  |  | h2 | Lowest 20-40% |
    |  |  | h3 | Middle 40-60% |
    |  |  | h4 | Highest 60-80% |
    |  |  | h5 | Top 20% |
    |  | home_ownership | j1 | Rent |
    |  |  | j2 | Own |
    |  | building_age | k1 | Pre 1945 |
    |  |  | k2 | 1945-1989 |
    |  |  | k3 | 1990 until today |
    |  | living_space | l1 | Small |
    |  |  | l2 | Medium |
    |  |  | l3 | Large |
    |  | tech_level | n1 | Basic |
    |  |  | n2 | Medium |
    |  |  | n3 | High |
    | business | size | ba1 | Small Business |
    |  |  | ba2 | Medium Business |
    |  |  | ba3 | Larger Business |

    There is also an interactive
    [Audience builder](https://digiseg.io/cookieless-audience-builder/)
    which lets you discover the targeting reach and power of combining
    various household characteristics into composite audiences.
  title: Digiseg API
  version: 1.0.0
  x-logo:
    url: ./Digiseg-Logo.svg
    altText: Digiseg
servers:
- description: Digiseg API - production
  url: https://api.digiseg.net
security:
- bearerAuth: []
- apiKeyHeaderAuth: []
- apiKeyQueryParamAuth: []
- oAuth: []
tags:
- description: |
    Authentication with Digiseg APIs can be done in various ways. If you have received an
    API key from Digiseg, the simplest way to authenticate is simply to place it in
    the `X-API-KEY` header of your API requests, like this:

    ```bash
    curl -H "X-API-KEY: $APIKEY" https://api.digiseg.net/user
    ```

    If you do not have an API key, you need an _access token_. These are temporary
    tokens that are placed as a bearer token in the `Authorization` header. You obtain
    an access token through the `/auth/token` /
    [Create Access token](#tag/auth/operation/createAccessToken)
    endpoint, described in this section.
  name: auth
  x-displayName: Authentication
- description: |
    Services for managing users within your account. Access to user data
    depends on your user role, and may therefore be restricted.
  name: users
  x-displayName: User management
- description: |
    Services for managing your account. Access to account and user data
    depends on your user role, and may therefore be restricted.
  name: accounts
  x-displayName: Accounts management
- description: |
    Audiences are segments of households that you can target and measure. Use
    the Audience API to identify specific segments that you wish to initiate
    certain behaviour or actions from.
  name: audiences
  x-displayName: Audiences
- description: |
    Measurement studies are instrumented in online ad campaigns or websites in
    order to evaluate the performance, reach and targeting power of various audiences.
    Use the studies API to create studies, instrument them in your campaign creatives
    or on a webpage, and access statistics about the impressions, actions and other
    events.
  name: studies
  x-displayName: Studies
- description: |
    Measurement labels can be used for categorization and filtering across all
    measurement activities. At the core, the labels are simple text strings that
    can be tagged upon e.g. a study. By labeling measurement activities, it
    grants accounts the ability to compare activities with other activities that
    are categorized in similar ways.
  name: measurement_labels
  x-displayName: Labels
- description: |
    In your Digiseg account you can register measurement clients.
    A measurement clients could be a customer, a brand or any other type
    of client. This is typically useful when running measurement studies or
    other measurement activity in service of someone else.
  name: measurement_clients
  x-displayName: Clients / customers
- description: |
    Populations represent benchmark numbers that can be used to compare your
    audience profile with. Digiseg produces a large set of populations called the
    Average Internet Population, made available in the population category `aip`.
  name: populations
  x-displayName: Populations
- name: usage
  x-displayName: Usage statistics
paths:
  /accounts/{account_id}:
    get:
      operationId: getAccountById
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountById_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get account
      tags:
      - accounts
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n\
          }).then(response => {\n  console.log(response);\n})"
    put:
      operationId: updateAccountById
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AccountUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountById_200_response'
          description: OK
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Update account
      tags:
      - accounts
  /accounts/{account_id}/assets/logo:
    delete:
      description: |
        Deletes the logo for an account
      operationId: deleteAccountLogo
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete account logo
      tags:
      - accounts
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X DELETE \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/assets/logo
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/assets/logo\"\
          , {\n  \"method\": \"DELETE\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    get:
      description: |
        Gets the account logo, if the image is hosted on the Digiseg platform.
        Refer to the account's `logo_url` to get a non-authenticated and shareable URL for the logo.
      operationId: getAccountLogo
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: Not found
      summary: Get account logo
      tags:
      - accounts
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/assets/logo
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/assets/logo\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    put:
      description: |
        Upload a logo for an account
      operationId: uploadAccountLogo
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageUploadRequest'
      responses:
        "204":
          description: OK
      summary: Upload account logo
      tags:
      - accounts
  /accounts/{account_id}/subscriptions:
    get:
      description: Get a summary of subscriptions for an account
      operationId: getAccountSubscriptions
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountSubscriptions_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get account subscriptions summary
      tags:
      - accounts
      - subscriptions
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/subscriptions
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/subscriptions\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
  /accounts/{account_id}/subscriptions/{subscription_id}:
    get:
      description: Gets a specific subscription for an account
      operationId: getAccountSubscriptionById
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: subscription_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountSubscriptionById_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get account subscription
      tags:
      - accounts
      - subscriptions
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/subscriptions/$SUBSCRIPTION_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/subscriptions/\"\
          +subscription_id, {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\"\
          : \"Bearer \" + token},\n}).then(response => {\n  console.log(response);\n\
          })"
  /accounts/{account_id}/users:
    get:
      operationId: listUsersByAccountId
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Filter based on platform roles, e.g. super_admin"
        explode: true
        in: query
        name: "filter[platform_roles]"
        required: false
        schema:
          $ref: '#/components/schemas/UserPlatformRole'
        style: form
      - description: Optional parameter used to search for users where the name contains
          a substring (case insensitive)
        example: Doe
        explode: true
        in: query
        name: "filter[name][contains]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Defines the field to sort the result items by.
          Ascending order is applied by default, but the minus character
          can be used to indicate descending order instead.
        example: -created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/UserSortOption'
        style: form
      - description: The desired page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional pagination parameter, indicating the previous cursor value to paginate beyond.
          The value to provide here is opaque, but can be found in previous requests in the `meta.page.last_cursor` field.
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUsersByAccountId_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: List users for account
      tags:
      - accounts
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/users
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/users\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    post:
      description: |
        Create a user within the referenced account.
      operationId: createUserInAccount
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Create user
      tags:
      - accounts
      - users
  /accounts/{account_id}/apikeys:
    get:
      operationId: listApiKeysByAccountId
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApiKeysByAccountId_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: List API keys for account
      tags:
      - accounts
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/apikeys
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/apikeys\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
  /subscription_plans:
    get:
      operationId: listSubscriptionPlans
      parameters:
      - description: The desired page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional pagination parameter, indicating the previous cursor value to paginate beyond.
          The value to provide here is opaque, but can be found in previous requests in the `meta.page.last_cursor` field.
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      - description: Optional parameter used to filter on the `is_public` field
        explode: true
        in: query
        name: "filter[is_public]"
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional parameter used to filter on the `product_type` field
        explode: true
        in: query
        name: "filter[product_type]"
        required: false
        schema:
          $ref: '#/components/schemas/SubscriptionProductType'
        style: form
      - description: Optional parameter used to filter on the list price's currency
        explode: true
        in: query
        name: "filter[list_price.currency]"
        required: false
        schema:
          $ref: '#/components/schemas/SubscriptionPriceCurrency'
        style: form
      - description: Optional parameter used to filter on the list price's interval
        explode: true
        in: query
        name: "filter[list_price.interval]"
        required: false
        schema:
          $ref: '#/components/schemas/SubscriptionPriceInterval'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSubscriptionPlans_200_response'
          description: OK
      summary: List subscription plans
      tags:
      - subscriptions
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/subscription_plans
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/subscription_plans\", {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response =>\
          \ {\n  console.log(response);\n})"
  /users/{user_id}/apikeys:
    get:
      operationId: listApiKeysByUserId
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApiKeysByAccountId_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: List API keys for user
      tags:
      - users
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID/apikeys
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/apikeys\", {\n\
          \  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer \"\
          \ + token},\n}).then(response => {\n  console.log(response);\n})"
    post:
      description: |
        Create API key for the given user.
        When an API key is created, the `token` value will be exposed
        in the response. This token can be passed as the `X-API-KEY`
        header value for future requests. It is not obtainable in other
        API requests (ie. the client must decide how to keep the API key
        token in e.g. a vault or similar).
      operationId: createApiKey
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ApiKeyCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createApiKey_201_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Create API key
      tags:
      - users
      - auth
  /users/{user_id}/apikeys/{key_id}:
    delete:
      operationId: deleteApiKeyById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Delete API key
      tags:
      - users
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X DELETE \
          https://api.digiseg.net/users/$USER_ID/apikeys/$KEY_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/apikeys/\"+key_id,\
          \ {\n  \"method\": \"DELETE\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    get:
      operationId: getApiKeyById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getApiKeyById_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get API key
      tags:
      - users
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID/apikeys/$KEY_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/apikeys/\"+key_id,\
          \ {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    put:
      operationId: updateApiKeyById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ApiKeyUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getApiKeyById_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Update API key
      tags:
      - users
      - auth
  /user:
    get:
      description: Get information about the currently authenticated user
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "403":
          description: Forbidden
      summary: Get current user
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/user
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/user\", {\n  \"method\": \"GET\"\
          , \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n}).then(response\
          \ => {\n  console.log(response);\n})"
  /users/{user_id}:
    delete:
      operationId: deleteUserById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Delete user
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X DELETE \
          https://api.digiseg.net/users/$USER_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id, {\n  \"method\"\
          : \"DELETE\", \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n\
          }).then(response => {\n  console.log(response);\n})"
    get:
      operationId: getUserById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get user
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n\
          }).then(response => {\n  console.log(response);\n})"
    put:
      operationId: updateUserById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Update user
      tags:
      - users
  /users/{user_id}/assets/avatar:
    delete:
      description: |
        Deletes the avatar for a user
      operationId: deleteUserAvatar
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete user avatar
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X DELETE \
          https://api.digiseg.net/users/$USER_ID/assets/avatar
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/assets/avatar\"\
          , {\n  \"method\": \"DELETE\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    get:
      description: |
        Gets the user avatar, if the image is hosted on the Digiseg platform.
        Refer to the user's `avatar_url` to get a non-authenticated and shareable URL for the avatar.
      operationId: getUserAvatar
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: Not found
      summary: Get user avatar
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: Bearer $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID/assets/avatar
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/assets/avatar\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    put:
      description: |
        Upload a avatar for a user
      operationId: uploadUserAvatar
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageUploadRequest'
      responses:
        "204":
          description: OK
      summary: Upload user avatar
      tags:
      - users
  /auth/token:
    post:
      operationId: createAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
          description: OK
      security: []
      summary: Authenticate and create access token
      tags:
      - auth
  /audiences:
    get:
      operationId: resolveAudiencesOfClient
      parameters:
      - description: |
          Optional parameter used to specify which audience information to be returned.
          The value is comprised of comma-separated values, each indicating a set of
          audiences:

            * `core` represents the core audiences that are directly linked to household characteristics
            * `composite` represents the composite audiences, used to model likely behaviours or buying
              needs associated with the household characteristics.
            * `name` and `category` refer to the fields of the same names in the returned Audience
              objects. There is a slight performance gain in leaving these out when they are not needed.
        explode: true
        in: query
        name: include
        required: false
        schema:
          default: "core,name,category"
          type: string
        style: form
      - description: Optional parameter to set to `jsonp` if a JSONP response format
          is needed.
        explode: true
        in: query
        name: type
        required: false
        schema:
          example: jsonp
          pattern: ^(jsonp)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get audiences of the API client
      tags:
      - audiences
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/audiences
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/audiences\", {\n  \"method\": \"\
          GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response => {\n\
          \  console.log(response);\n})"
    post:
      operationId: resolveAudiencesOfMultiple
      parameters:
      - description: |
          Optional parameter used to specify which audience information to be returned.
          The value is comprised of comma-separated values, each indicating a set of
          audiences:

            * `core` represents the core audiences that are directly linked to household characteristics
            * `composite` represents the composite audiences, used to model likely behaviours or buying
              needs associated with the household characteristics.
            * `name` and `category` refer to the fields of the same names in the returned Audience
              objects. There is a slight performance gain in leaving these out when they are not needed.
        explode: true
        in: query
        name: include
        required: false
        schema:
          default: "core,name,category"
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/ResolveAudiencesOfMultipleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveAudiencesOfMultipleResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get audiences for multiple IP addresses
      tags:
      - audiences
  /audiences/{user_ip}:
    get:
      operationId: resolveAudiencesOfSingle
      parameters:
      - description: |
          Optional parameter used to specify which audience information to be returned.
          The value is comprised of comma-separated values, each indicating a set of
          audiences:

            * `core` represents the core audiences that are directly linked to household characteristics
            * `composite` represents the composite audiences, used to model likely behaviours or buying
              needs associated with the household characteristics.
            * `name` and `category` refer to the fields of the same names in the returned Audience
              objects. There is a slight performance gain in leaving these out when they are not needed.
        explode: true
        in: query
        name: include
        required: false
        schema:
          default: "core,name,category"
          type: string
        style: form
      - description: The IP address to look up.
        example: 1.1.1.1
        explode: false
        in: path
        name: user_ip
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get audiences for a given IP address
      tags:
      - audiences
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/audiences/$USER_IP
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/audiences/\"+user_ip, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response =>\
          \ {\n  console.log(response);\n})"
  /studies:
    get:
      description: |
        List studies that the user has access to
      operationId: listStudies
      parameters:
      - description: |
          Defines the field to sort the result items by.
          Ascending order is applied by default, but the minus character
          can be used to indicate descending order instead.
        example: -created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - -created_at
          - name
          - -name
          type: string
        style: form
      - description: Optional parameter used to filter for example studies
        explode: true
        in: query
        name: "filter[is_example]"
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Optional parameter used to filter by study label
        example: CTV
        explode: true
        in: query
        name: "filter[label]"
        required: false
        schema:
          type: string
        style: form
      - description: Optional parameter used to search for studies where the name
          contains a substring (case insensitive)
        example: acme
        explode: true
        in: query
        name: "filter[name][contains]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Optional parameter used to query studies by specific account IDs (only available to super admins).
          The value `*` is synonymous for "all accounts".
        examples:
          single:
            description: A specific account ID
            value: 4k3jKJ9D12kj0S4c
          multiple:
            description: Multiple accounts
            value: "4k3jKJ9D12kj0S4c,5k3jKJ9D12kj0S4c,6k3jKJ9D12kj0S4c"
          all:
            description: All accounts
            value: '*'
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          default: The user's account ID
          type: string
        style: form
      - description: The desired page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional pagination parameter, indicating the previous cursor value to paginate beyond.
          The value to provide here is opaque, but can be found in previous requests in the `meta.page.last_cursor` field.
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listStudies_200_response'
          description: OK
      summary: List studies
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies\", {\n  \"method\": \"GET\"\
          , \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response => {\n  console.log(response);\n\
          })"
    post:
      description: Create a new study
      operationId: createStudy
      requestBody:
        $ref: '#/components/requestBodies/StudyCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createStudy_201_response'
          description: OK
      summary: Create study
      tags:
      - studies
  /measurement/labels:
    get:
      description: |
        List measurement labels that the user has access to
      operationId: listMeasurementLabels
      parameters:
      - description: |
          Optional parameter used to query measurement labels by specific account IDs
          (only available to super admins).
          The value `*` is synonymous for "all accounts".
        examples:
          single:
            description: A specific account ID
            value: 4k3jKJ9D12kj0S4c
          all:
            description: All accounts
            value: '*'
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          default: The user's account ID
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMeasurementLabels_200_response'
          description: OK
      summary: List measurement labels
      tags:
      - measurement_labels
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/measurement/labels
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/measurement/labels\", {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response =>\
          \ {\n  console.log(response);\n})"
  /measurement/clients:
    get:
      description: |
        List measurement clients that the user has access to
      operationId: listMeasurementClients
      parameters:
      - description: |
          Optional parameter used to query measurement clients by specific account IDs
          (only available to super admins).
          The value `*` is synonymous for "all accounts".
        examples:
          single:
            description: A specific account ID
            value: 4k3jKJ9D12kj0S4c
          all:
            description: All accounts
            value: '*'
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          default: The user's account ID
          type: string
        style: form
      - description: Optional parameter used to search for clients where the name
          contains a substring (case insensitive)
        example: acme
        explode: true
        in: query
        name: "filter[name][contains]"
        required: false
        schema:
          type: string
        style: form
      - description: The desired page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional pagination parameter, indicating the previous cursor value to paginate beyond.
          The value to provide here is opaque, but can be found in previous requests in the `meta.page.last_cursor` field.
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMeasurementClients_200_response'
          description: OK
      summary: List measurement clients
      tags:
      - measurement_clients
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/measurement/clients
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/measurement/clients\", {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response =>\
          \ {\n  console.log(response);\n})"
    post:
      description: |
        Create a measurement client in the account of the user
      operationId: createMeasurementClient
      requestBody:
        $ref: '#/components/requestBodies/MeasurementClientCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMeasurementClient_201_response'
          description: OK
      summary: Create measurement client
      tags:
      - measurement_clients
  /measurement/clients/{client_id}:
    delete:
      description: |
        Deletes a measurement client
      operationId: deleteMeasurementClientById
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete measurement client
      tags:
      - measurement_clients
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X DELETE \
          https://api.digiseg.net/measurement/clients/$CLIENT_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/measurement/clients/\"+client_id,\
          \ {\n  \"method\": \"DELETE\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
    get:
      description: |
        Get information for a specific measurement client
      operationId: getMeasurementClientById
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMeasurementClient_201_response'
          description: OK
      summary: Get measurement client
      tags:
      - measurement_clients
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/measurement/clients/$CLIENT_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/measurement/clients/\"+client_id,\
          \ {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
    put:
      description: |
        Updates properties of a measurement client
      operationId: updateMeasurementClientById
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/MeasurementClientUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMeasurementClient_201_response'
          description: OK
      summary: Update measurement client
      tags:
      - measurement_clients
  /measurement/clients/{client_id}/assets/logo:
    delete:
      description: |
        Deletes the logo for a client
      operationId: deleteClientLogo
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete measurement client logo
      tags:
      - measurement_clients
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X DELETE \
          https://api.digiseg.net/measurement/clients/$CLIENT_ID/assets/logo
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/measurement/clients/\"+client_id+\"\
          /assets/logo\", {\n  \"method\": \"DELETE\", \n  \"headers\": {\"X-API-KEY\"\
          : apikey},\n}).then(response => {\n  console.log(response);\n})"
    get:
      description: |
        Gets the client logo, if the image is hosted on the Digiseg platform.
        Refer to the clients's `logo_url` to get a non-authenticated and shareable URL for the logo.
      operationId: getClientLogo
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: Not found
      summary: Get measurement client logo
      tags:
      - measurement_clients
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/measurement/clients/$CLIENT_ID/assets/logo
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/measurement/clients/\"+client_id+\"\
          /assets/logo\", {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\"\
          : apikey},\n}).then(response => {\n  console.log(response);\n})"
    put:
      description: |
        Upload a logo for a client
      operationId: uploadClientLogo
      parameters:
      - explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageUploadRequest'
      responses:
        "204":
          description: OK
      summary: Upload measurement client logo
      tags:
      - measurement_clients
  /studies/{study_id}:
    delete:
      description: |
        Deletes a study
      operationId: deleteStudyById
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete study
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X DELETE \
          https://api.digiseg.net/studies/$STUDY_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id, {\n  \"method\"\
          : \"DELETE\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
    get:
      description: |
        Get study information for a specific study
      operationId: getStudyById
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createStudy_201_response'
          description: OK
      summary: Get study
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies/$STUDY_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response =>\
          \ {\n  console.log(response);\n})"
    put:
      description: |
        Updates properties of a study
      operationId: updateStudyById
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/StudyUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createStudy_201_response'
          description: OK
      summary: Update study
      tags:
      - studies
  /studies/{study_id}/assets/banner_image:
    delete:
      description: |
        Deletes the banner image for a study
      operationId: deleteStudyBannerImage
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete study banner image logo
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X DELETE \
          https://api.digiseg.net/studies/$STUDY_ID/assets/banner_image
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id+\"/assets/banner_image\"\
          , {\n  \"method\": \"DELETE\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
    get:
      description: |
        Gets the study banner image, if the image is hosted on the Digiseg platform.
        Refer to the study's `banner_image_url` to get a non-authenticated and shareable URL for the logo.
      operationId: getStudyBannerImage
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: Not found
      summary: Get study banner image
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies/$STUDY_ID/assets/banner_image
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id+\"/assets/banner_image\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
    put:
      description: |
        Upload a banner image for a study
      operationId: uploadStudyBannerImage
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageUploadRequest'
      responses:
        "204":
          description: OK
      summary: Upload study banner image
      tags:
      - studies
  /studies/{study_id}/stats/audiences:
    get:
      description: |
        Query the audience statistics for a study, enabling the user
        to see the representation of matched household characteristics
        to impressions and clicks. These statistics can be compared to
        the Average Internet Population (globally or for a specific country),
        or to the audience stats of other studies.
      operationId: queryStudyAudienceStats
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryStudyAudienceStats_200_response'
          description: OK
      summary: Audience statistics for study
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies/$STUDY_ID/stats/audiences
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id+\"/stats/audiences\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
  /studies/{study_id}/stats/countries:
    get:
      description: |
        Query the country statistics for a study, enabling the user
        to see where the study is being delivered.
      operationId: queryStudyCountryStats
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryStudyCountryStats_200_response'
          description: OK
      summary: Country statistics for study
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies/$STUDY_ID/stats/countries
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id+\"/stats/countries\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
  /studies/{study_id}/stats/timing:
    get:
      description: |
        Query the timing statistics for a study, enabling the user
        to see performance and delivery figures at different
        times of day, days of the week and days of the month.
      operationId: queryStudyTimingStats
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryStudyTimingStats_200_response'
          description: OK
      summary: Timing statistics for study
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies/$STUDY_ID/stats/timing
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id+\"/stats/timing\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
  /studies/{study_id}/stats/frequencies:
    get:
      description: |
        Query the frequency statistics for a study. Frequency
        statistics are helpful to identify the frequency of impressions
        per user, or distinct reach of a study. It can also be helpful
        to identify how multiple impressions for the same users may or
        may not generate more clicks.
      operationId: queryStudyFrequencyStats
      parameters:
      - explode: false
        in: path
        name: study_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryStudyFrequencyStats_200_response'
          description: OK
      summary: Frequency statistics for study
      tags:
      - studies
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/studies/$STUDY_ID/stats/frequencies
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/studies/\"+study_id+\"/stats/frequencies\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
  /populations/{category_key}:
    get:
      description: List all populations within a category
      operationId: listPopuplations
      parameters:
      - description: An identifier for the category
        explode: false
        in: path
        name: category_key
        required: true
        schema:
          example: aip
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPopuplations_200_response'
          description: OK
      summary: List populations of category
      tags:
      - populations
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/populations/$CATEGORY_KEY
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/populations/\"+category_key, {\n\
          \  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
  /populations/{category_key}/{population_key}:
    get:
      description: Get population data referenced by a specific key.
      operationId: getPopuplationByKey
      parameters:
      - description: An identifier for the category
        explode: false
        in: path
        name: category_key
        required: true
        schema:
          example: aip
          type: string
        style: simple
      - description: An identifier for the population
        explode: false
        in: path
        name: population_key
        required: true
        schema:
          example: dk
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPopuplationByKey_200_response'
          description: OK
      summary: Get Population by key
      tags:
      - populations
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/populations/$CATEGORY_KEY/$POPULATION_KEY
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/populations/\"+category_key+\"/\"\
          +population_key, {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\"\
          : apikey},\n}).then(response => {\n  console.log(response);\n})"
  /usage/audience_data/monthly:
    get:
      description: Provides usage stats on a monthly basis.
      operationId: listAudienceDataMonthlyUsage
      parameters:
      - description: Year to filter by
        explode: true
        in: query
        name: "filter[year]"
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Optional parameter used to query usage of specific account IDs (only available to super admins).
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAudienceDataMonthlyUsage_200_response'
          description: OK
      summary: List monthly usage of Audience Data
      tags:
      - usage
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/usage/audience_data/monthly
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/usage/audience_data/monthly\", {\n\
          \  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
  /usage/audience_data/daily:
    get:
      description: Provides usage stats on a daily basis. Results available for the
        last 2 months.
      operationId: listAudienceDataDailyUsage
      parameters:
      - description: Date to query from
        explode: true
        in: query
        name: "filter[date][from]"
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Date to query to
        explode: true
        in: query
        name: "filter[date][to]"
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: |
          Optional parameter used to query usage of specific account IDs (only available to super admins).
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAudienceDataDailyUsage_200_response'
          description: OK
      summary: List daily usage of Audience Data
      tags:
      - usage
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/usage/audience_data/daily
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/usage/audience_data/daily\", {\n\
          \  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
  /usage/audience_data/realtime:
    get:
      description: "Provides usage stats on a near-realtime basis. Results available\
        \ for the last 24 hours, provided with as short delay as possible."
      operationId: listAudienceDataRealtimeUsage
      parameters:
      - description: |
          Optional parameter used to query usage of specific account IDs (only available to super admins).
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAudienceDataRealtimeUsage_200_response'
          description: OK
      summary: List realtime usage of Audience Data
      tags:
      - usage
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/usage/audience_data/realtime
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/usage/audience_data/realtime\", {\n\
          \  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
components:
  requestBodies:
    AccountCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountCreation'
      required: true
    AccountUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountMutation'
      required: true
    ApiKeyCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiKeyCreation'
      required: true
    UserCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreation'
      required: true
    UserUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserMutation'
      required: true
    AccountSubscriptionCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountSubscriptionCreation'
      required: true
    SubscriptionPlanCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionPlanFull'
      required: true
    ApiKeyUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiKeyMutation'
      required: true
    ImageUploadRequest:
      content:
        image/gif:
          schema:
            format: binary
            type: string
        image/png:
          schema:
            format: binary
            type: string
        image/jpeg:
          schema:
            format: binary
            type: string
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/uploadAccountLogo_request'
      required: true
    ResolveAudiencesOfMultipleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResolveAudiencesOfMultipleRequest'
      required: true
    StudyCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StudyCreation'
      required: true
    StudyUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StudyMutation'
      required: true
    MeasurementClientCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeasurementClientMutation'
      required: true
    MeasurementClientUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MeasurementClientMutation'
      required: true
    KeyValuesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeyValues'
      required: true
  responses:
    RegistrationCreationResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/RegistrationCreationResponseData'
            type: object
      description: Created
    RegistrationVerificationResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/RegistrationVerificationResponseData'
              links:
                $ref: '#/components/schemas/RegistrationVerificationResponseLinks'
            type: object
      description: OK
    RegistrationByIdResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/RegistrationByIdResponseData'
            type: object
      description: OK
    AccountSubscriptionsSummaryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getAccountSubscriptions_200_response'
      description: OK
    ListSubscriptionPlansResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listSubscriptionPlans_200_response'
      description: OK
    AccountSubscriptionByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getAccountSubscriptionById_200_response'
      description: OK
    SubscriptionPlanByIdResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/SubscriptionPlanFull'
            type: object
      description: OK
    AccountByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getAccountById_200_response'
      description: OK
    AccountListResponse:
      content:
        application/json:
          schema:
            properties:
              meta:
                $ref: '#/components/schemas/ListPaginationMeta'
              links:
                $ref: '#/components/schemas/ListPaginationLinks'
              data:
                items:
                  $ref: '#/components/schemas/AccountItem'
                type: array
            type: object
      description: OK
    ApiKeyByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getApiKeyById_200_response'
      description: OK
    ApiKeyCreationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createApiKey_201_response'
      description: OK
    ApiKeyListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listApiKeysByAccountId_200_response'
      description: OK
    UserByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createUserInAccount_201_response'
      description: OK
    CurrentUserResponse:
      $ref: '#/components/responses/UserByIdResponse'
    UserListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listUsersByAccountId_200_response'
      description: OK
    ForbiddenError:
      description: Forbidden
    NotFoundError:
      description: Not found
    BadRequestError:
      description: Bad request
    ObjectDeletedResponse:
      description: Object deleted
    StudyListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listStudies_200_response'
      description: OK
    StudyByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createStudy_201_response'
      description: OK
    MeasurementLabelsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listMeasurementLabels_200_response'
      description: OK
    MeasurementClientsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listMeasurementClients_200_response'
      description: OK
    MeasurementClientByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createMeasurementClient_201_response'
      description: OK
    StudyAudienceStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryStudyAudienceStats_200_response'
      description: OK
    StudyCountryStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryStudyCountryStats_200_response'
      description: OK
    StudyTimingStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryStudyTimingStats_200_response'
      description: OK
    StudyFrequencyStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryStudyFrequencyStats_200_response'
      description: OK
    ListPopulationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listPopuplations_200_response'
      description: OK
    PopulationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getPopuplationByKey_200_response'
      description: OK
    PopulationSourceResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/PopulationSource'
            type: object
      description: OK
    ListAudienceDataMonthlyUsageResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAudienceDataMonthlyUsage_200_response'
      description: OK
    ListAudienceDataDailyUsageResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAudienceDataDailyUsage_200_response'
      description: OK
    ListAudienceDataRealtimeUsageResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAudienceDataRealtimeUsage_200_response'
      description: OK
    KeyValuesResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/KeyValues'
            type: object
      description: OK
  schemas:
    PasswordlessAuthRequest:
      properties:
        email:
          description: The email of the user
          format: email
          type: string
      required:
      - email
      type: object
    RegistrationRequest:
      properties:
        account_name:
          description: The name of the account to create
          type: string
        owner_email:
          description: The email of the account owner
          format: email
          type: string
        owner_name:
          description: The name of the account owner
          type: string
      required:
      - account_name
      - owner_email
      - owner_name
      type: object
    RegistrationByIdResponseData:
      properties:
        id:
          description: The ID of the registration
          type: string
        request:
          $ref: '#/components/schemas/RegistrationRequest'
        expires_at:
          description: Date and time of the registration expiry
          format: date-time
          type: string
        verified_at:
          description: "Date and time of the verification, if verified"
          format: date-time
          type: string
        verification_code:
          description: The code needed to verify this registration
          type: string
      type: object
    RegistrationCreationResponseData:
      properties:
        id:
          type: string
        email_sent:
          type: boolean
      type: object
    ListPaginationLinks:
      example:
        next: /path/to/next_page
        first: /path/to/first_page
      properties:
        first:
          description: Link to the first page of the list
          example: /path/to/first_page
          format: uri
          type: string
        next:
          description: Link to the next page of the list
          example: /path/to/next_page
          format: uri
          type: string
      type: object
    ListPaginationMeta:
      example:
        page:
          first_cursor: first_cursor
          total: 238
          last_cursor: last_cursor
          rangeTruncated: true
      properties:
        page:
          $ref: '#/components/schemas/ListPaginationMetaPage'
      type: object
    ListPaginationMetaPage:
      example:
        first_cursor: first_cursor
        total: 238
        last_cursor: last_cursor
        rangeTruncated: true
      properties:
        total:
          description: The total amount of elements in the list (the returned `data`
            may be paginated)
          example: 238
          type: integer
        first_cursor:
          type: string
        last_cursor:
          description: "Indicates the cursor value to use in `page[after]`, when paginating\
            \ to the next page"
          type: string
        rangeTruncated:
          description: Indicates whether the list has been truncated (ie. more items
            can be queried using pagination)
          type: boolean
      required:
      - rangeTruncated
      type: object
    UserSortOption:
      default: created_at
      enum:
      - created_at
      - -created_at
      - name
      - -name
      - logged_in_at
      - -logged_in_at
      type: string
    IdentifyableObject:
      properties:
        id:
          description: Unique ID for the object
          example: 4k3jKJ9D12kj0S4c
          readOnly: true
          type: string
      type: object
    TimestampedObject:
      properties:
        created_at:
          description: Date and time of the object creation
          format: date-time
          readOnly: true
          type: string
        created_by:
          description: ID of the user who created the object
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the latest update to the object
          format: date-time
          readOnly: true
          type: string
        updated_by:
          description: ID of the user who last updated the object
          readOnly: true
          type: string
      type: object
    CompanyType:
      description: A type of company that an account can represent
      enum:
      - advertiser
      - agency
      - publisher
      - technology_provider
      - other
      type: string
    CompanySize:
      description: Describes the size of a company
      enum:
      - Self-employed
      - 1-10 employees
      - 11-50 employees
      - 51-200 employees
      - 201-500 employees
      - 501-1000 employees
      - 1001-5000 employees
      - "5001-10,000 employees"
      - "10,001+ employees"
      type: string
    AccountBase:
      properties:
        name:
          description: Human readable name of the account
          example: Example Co.
          type: string
        logo_url:
          description: The URL to the logo of the account
          example: https://api.digiseg.net/assets/account/ioi4324i2309das/logo?vrft=csdkl232l4pod4
          format: uri
          type: string
        website_url:
          description: URL of the account's primary website
          format: uri
          type: string
        billing_country:
          description: Country code of the account. Requires `owner` role to change.
          example: DK
          maxLength: 2
          type: string
        company_type:
          description: |
            The type of company that the account represents.
            Note that for forward-compatibility the data type here is simply a string.
            The values, if present, will however typically originate from the `CompanyType` enum.
          example: "[\"agency\"]"
          maxLength: 64
          type: string
        company_size:
          $ref: '#/components/schemas/CompanySize'
        has_clients:
          description: "Determines whether the account has clients that they work\
            \ for, or if their activities are for themselves."
          type: boolean
        slug:
          deprecated: true
          description: A short human-readable name to identify the account. Must be
            lower-case and between 4 and 16 characters.
          maxLength: 12
          minLength: 4
          pattern: "^[a-z]{4,16}$"
          type: string
      type: object
    AccountMutationAux:
      properties:
        company_type:
          $ref: '#/components/schemas/CompanyType'
      type: object
    AccountCreationAux:
      properties:
        owner:
          $ref: '#/components/schemas/AccountOwnerCreation'
      type: object
    AccountOwnerCreation:
      properties:
        name:
          description: The account owner's name
          type: string
        email:
          description: The account owner's email
          example: casey.doe@example.com
          format: email
          type: string
        password:
          description: The account owner's password
          type: string
      required:
      - email
      - name
      type: object
    UserCreationNotification:
      properties:
        notify_user:
          default: true
          description: Whether or not to notify the user that they have been registered
          type: boolean
      type: object
    PostalAddress:
      example:
        line1: Gl Kongevej 3B
        city: Copenhagen
        postal_code: "1610"
      properties:
        line1:
          description: The first line of the postal address
          maxLength: 255
          type: string
        line2:
          description: The second line of the postal address
          maxLength: 255
          type: string
        city:
          description: The city of the billing address
          maxLength: 128
          type: string
        postal_code:
          description: The postal code of the billing address
          maxLength: 16
          type: string
        state:
          description: The state of the billing address
          maxLength: 64
          type: string
      type: object
    AccountAux:
      properties:
        owner_id:
          deprecated: true
          description: ID of the user who is the ultimate owner of the account. Deprecated
            in favor of the `owner` role of the user's account membership.
          type: string
        billing_email:
          description: The email address to send billing information to. Requires
            `owner` role to change.
          format: email
          type: string
        billing_address:
          $ref: '#/components/schemas/PostalAddress'
        stripe_customer_id:
          readOnly: true
          type: string
      type: object
    AccountItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/AccountBase'
    AccountCreation:
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - $ref: '#/components/schemas/AccountAux'
      - $ref: '#/components/schemas/AccountMutationAux'
      - $ref: '#/components/schemas/AccountCreationAux'
      - $ref: '#/components/schemas/UserCreationNotification'
    AccountMutation:
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - $ref: '#/components/schemas/AccountAux'
      - $ref: '#/components/schemas/AccountMutationAux'
      example:
        company_type: advertiser
        stripe_customer_id: stripe_customer_id
        website_url: https://openapi-generator.tech
        logo_url: https://api.digiseg.net/assets/account/ioi4324i2309das/logo?vrft=csdkl232l4pod4
        has_clients: true
        owner_id: owner_id
        billing_email: billing_email
        name: Example Co.
        billing_country: DK
        billing_address:
          line1: Gl Kongevej 3B
          city: Copenhagen
          postal_code: "1610"
        slug: slug
        company_size: Self-employed
    AccountFull:
      allOf:
      - $ref: '#/components/schemas/AccountItem'
      - $ref: '#/components/schemas/AccountAux'
      - $ref: '#/components/schemas/TimestampedObject'
      example:
        company_type: "[\"agency\"]"
        logo_url: https://api.digiseg.net/assets/account/ioi4324i2309das/logo?vrft=csdkl232l4pod4
        owner_id: owner_id
        billing_country: DK
        created_at: 2000-01-23T04:56:07.000+00:00
        billing_address:
          line1: Gl Kongevej 3B
          city: Copenhagen
          postal_code: "1610"
        created_by: created_by
        stripe_customer_id: stripe_customer_id
        website_url: https://openapi-generator.tech
        updated_at: 2000-01-23T04:56:07.000+00:00
        has_clients: true
        billing_email: billing_email
        name: Example Co.
        updated_by: updated_by
        id: 4k3jKJ9D12kj0S4c
        slug: slug
        company_size: Self-employed
    AccountLinks:
      example:
        users: /accounts/4k3jKJ9D12kj0S4c/users
      properties:
        users:
          description: Link for getting to the account's users
          example: /accounts/4k3jKJ9D12kj0S4c/users
          format: uri
          type: string
      type: object
    LimitedOrFullFeature:
      enum:
      - full
      - limited
      type: string
    PlanFeatureSet:
      example:
        has_report_customization: true
        study_event_set: null
        max_audience_lookups_per_month: 2
        study_audience_set: full
        has_audience_recommendations: true
        max_active_studies: 5
        max_events_per_study: 5
        has_report_sharing_clients: true
        max_users: 6
        max_clients: 1
        has_report_sharing_public: true
      properties:
        max_users:
          type: integer
        max_clients:
          type: integer
        max_active_studies:
          type: integer
        max_events_per_study:
          type: integer
        max_audience_lookups_per_month:
          type: integer
        study_audience_set:
          $ref: '#/components/schemas/LimitedOrFullFeature'
        study_event_set:
          $ref: '#/components/schemas/LimitedOrFullFeature'
        has_audience_recommendations:
          type: boolean
        has_report_customization:
          type: boolean
        has_report_sharing_clients:
          type: boolean
        has_report_sharing_public:
          type: boolean
      required:
      - has_audience_recommendations
      - has_report_customization
      - has_report_sharing_clients
      - has_report_sharing_public
      - max_active_studies
      - max_audience_lookups_per_month
      - max_clients
      - max_events_per_study
      - max_users
      - study_audience_set
      - study_event_set
      type: object
    AccountSubscriptionsSummary:
      description: Summarizes an account's current subscription(s) and the feature
        set available
      example:
        subscriptions:
        - end_date: 2000-01-23
          is_active: true
          actual_price:
            amount: 0
            currency: EUR
            interval: monthly
          id: id
          plan:
            code: code
            product_type: base
            stripe_product_id: stripe_product_id
            is_public: true
            id: 4k3jKJ9D12kj0S4c
            list_price:
              amount: 0
              currency: EUR
              interval: monthly
            display_name: display_name
            stripe_price_id: stripe_price_id
          start_date: 2000-01-23
          payment_configuration:
            stripe_subscription_item_id: stripe_subscription_item_id
            timing: pre
            stripe_subscription_id: stripe_subscription_id
            platform: stripe
        - end_date: 2000-01-23
          is_active: true
          actual_price:
            amount: 0
            currency: EUR
            interval: monthly
          id: id
          plan:
            code: code
            product_type: base
            stripe_product_id: stripe_product_id
            is_public: true
            id: 4k3jKJ9D12kj0S4c
            list_price:
              amount: 0
              currency: EUR
              interval: monthly
            display_name: display_name
            stripe_price_id: stripe_price_id
          start_date: 2000-01-23
          payment_configuration:
            stripe_subscription_item_id: stripe_subscription_item_id
            timing: pre
            stripe_subscription_id: stripe_subscription_id
            platform: stripe
        account_id: account_id
        feature_set:
          has_report_customization: true
          study_event_set: null
          max_audience_lookups_per_month: 2
          study_audience_set: full
          has_audience_recommendations: true
          max_active_studies: 5
          max_events_per_study: 5
          has_report_sharing_clients: true
          max_users: 6
          max_clients: 1
          has_report_sharing_public: true
      properties:
        account_id:
          description: The ID of the account
          readOnly: true
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/AccountSubscriptionItem'
          type: array
        feature_set:
          $ref: '#/components/schemas/PlanFeatureSet'
      required:
      - account_id
      - feature_set
      - subscriptions
      type: object
    AccountSubscriptionItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/AccountSubscriptionBase'
      - $ref: '#/components/schemas/AccountSubscriptionItemAux'
      example:
        end_date: 2000-01-23
        is_active: true
        actual_price:
          amount: 0
          currency: EUR
          interval: monthly
        id: id
        plan:
          code: code
          product_type: base
          stripe_product_id: stripe_product_id
          is_public: true
          id: 4k3jKJ9D12kj0S4c
          list_price:
            amount: 0
            currency: EUR
            interval: monthly
          display_name: display_name
          stripe_price_id: stripe_price_id
        start_date: 2000-01-23
        payment_configuration:
          stripe_subscription_item_id: stripe_subscription_item_id
          timing: pre
          stripe_subscription_id: stripe_subscription_id
          platform: stripe
    AccountSubscriptionFull:
      allOf:
      - $ref: '#/components/schemas/AccountSubscriptionItem'
      - $ref: '#/components/schemas/AccountSubscriptionFullAux'
      - $ref: '#/components/schemas/TimestampedObject'
      example:
        end_date: 2000-01-23
        is_active: true
        account_id: account_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        actual_price:
          amount: 0
          currency: EUR
          interval: monthly
        updated_by: updated_by
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        plan:
          code: code
          stripe_product_id: stripe_product_id
          created_at: 2000-01-23T04:56:07.000+00:00
          list_price:
            amount: 0
            currency: EUR
            interval: monthly
          display_name: display_name
          created_by: created_by
          stripe_price_id: stripe_price_id
          product_type: base
          updated_at: 2000-01-23T04:56:07.000+00:00
          feature_set:
            has_report_customization: true
            study_event_set: null
            max_audience_lookups_per_month: 2
            study_audience_set: full
            has_audience_recommendations: true
            max_active_studies: 5
            max_events_per_study: 5
            has_report_sharing_clients: true
            max_users: 6
            max_clients: 1
            has_report_sharing_public: true
          updated_by: updated_by
          is_public: true
          id: id
        created_by: created_by
        start_date: 2000-01-23
        payment_configuration:
          stripe_subscription_item_id: stripe_subscription_item_id
          timing: pre
          stripe_subscription_id: stripe_subscription_id
          platform: stripe
    AccountSubscriptionCreation:
      allOf:
      - $ref: '#/components/schemas/AccountSubscriptionBase'
      - properties:
          plan_id:
            description: The ID of the plan to subscribe to
            type: string
        type: object
    AccountSubscriptionBase:
      properties:
        id:
          description: The ID of the subscription
          readOnly: true
          type: string
        start_date:
          format: date
          type: string
        end_date:
          format: date
          type: string
        is_active:
          description: Is the subscription currently active or not?
          readOnly: true
          type: boolean
        actual_price:
          $ref: '#/components/schemas/SubscriptionPrice'
        payment_configuration:
          $ref: '#/components/schemas/AccountSubscriptionPaymentConfiguration'
      required:
      - id
      - is_active
      - start_date
      type: object
    AccountSubscriptionPaymentConfiguration:
      description: Describes the payment configuration of an account subscription
      example:
        stripe_subscription_item_id: stripe_subscription_item_id
        timing: pre
        stripe_subscription_id: stripe_subscription_id
        platform: stripe
      properties:
        platform:
          enum:
          - stripe
          - manual
          type: string
        timing:
          description: Is the subscription pre-paid or post-paid?
          enum:
          - pre
          - post
          type: string
        stripe_subscription_id:
          readOnly: true
          type: string
        stripe_subscription_item_id:
          readOnly: true
          type: string
      required:
      - platform
      - timing
      type: object
    AccountSubscriptionItemAux:
      properties:
        plan:
          $ref: '#/components/schemas/SubscriptionPlanItem'
      type: object
    AccountSubscriptionFullAux:
      properties:
        account_id:
          description: The ID of the account
          readOnly: true
          type: string
        plan:
          $ref: '#/components/schemas/SubscriptionPlanFull'
      required:
      - account_id
      - plan
      type: object
    SubscriptionPlanItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/SubscriptionPlanBase'
      example:
        code: code
        product_type: base
        stripe_product_id: stripe_product_id
        is_public: true
        id: 4k3jKJ9D12kj0S4c
        list_price:
          amount: 0
          currency: EUR
          interval: monthly
        display_name: display_name
        stripe_price_id: stripe_price_id
    SubscriptionPlanFull:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/TimestampedObject'
      - $ref: '#/components/schemas/SubscriptionPlanBase'
      - $ref: '#/components/schemas/SubscriptionPlanAux'
      example:
        code: code
        stripe_product_id: stripe_product_id
        created_at: 2000-01-23T04:56:07.000+00:00
        list_price:
          amount: 0
          currency: EUR
          interval: monthly
        display_name: display_name
        created_by: created_by
        stripe_price_id: stripe_price_id
        product_type: base
        updated_at: 2000-01-23T04:56:07.000+00:00
        feature_set:
          has_report_customization: true
          study_event_set: null
          max_audience_lookups_per_month: 2
          study_audience_set: full
          has_audience_recommendations: true
          max_active_studies: 5
          max_events_per_study: 5
          has_report_sharing_clients: true
          max_users: 6
          max_clients: 1
          has_report_sharing_public: true
        updated_by: updated_by
        is_public: true
        id: id
    SubscriptionPlanBase:
      properties:
        display_name:
          description: The display name of the price/plan
          type: string
        code:
          description: "An optional code, typically provided if the plan/price is\
            \ public and advertised"
          type: string
        is_public:
          description: Is the plan/price a public price or custom?
          type: boolean
        product_type:
          $ref: '#/components/schemas/SubscriptionProductType'
        list_price:
          $ref: '#/components/schemas/SubscriptionPrice'
        stripe_product_id:
          readOnly: true
          type: string
        stripe_price_id:
          readOnly: true
          type: string
      required:
      - is_public
      - product_type
      type: object
    SubscriptionPrice:
      example:
        amount: 0
        currency: EUR
        interval: monthly
      properties:
        amount:
          minimum: 0
          type: integer
        currency:
          $ref: '#/components/schemas/SubscriptionPriceCurrency'
        interval:
          $ref: '#/components/schemas/SubscriptionPriceInterval'
      required:
      - amount
      - currency
      - interval
      type: object
    SubscriptionPriceInterval:
      enum:
      - monthly
      - annually
      type: string
    SubscriptionPriceCurrency:
      default: EUR
      description: Currency code for the price
      enum:
      - EUR
      - USD
      - DKK
      type: string
    SubscriptionProductType:
      enum:
      - base
      - add-on
      type: string
    SubscriptionPlanAux:
      description: Defines a subscription plan (a feature set at a given pricing configuration)
      properties:
        id:
          description: The ID of the plan/price that the account is subscribed to
          readOnly: true
          type: string
        feature_set:
          $ref: '#/components/schemas/PlanFeatureSet'
      required:
      - feature_set
      type: object
    PermissionScopes:
      description: "Defines the scopes of a token or API key. If omitted, the default\
        \ set of grants that are available to non-admin and non-owner users of the\
        \ account will be added."
      example:
        country_data:
        - '*'
        - DE
        - DK
        - GB
        - SE
        origin_domains:
        - '*'
        - https://example.com
        service_grants:
        - audience-lookup
        - analytics-impression
        - analytics-click
        - '*'
      properties:
        origin_domains:
          description: "A list of origin domains that will be allowed access through\
            \ CORS and Referrer checks with the token or API key. A missing value,\
            \ empty array or the value `*` grants access from any domain."
          example:
          - '*'
          - https://example.com
          items:
            description: Domain name or `*`
            type: string
          type: array
        service_grants:
          description: "A list of service grants to allow access to use. A missing\
            \ value, empty array or the value `*` grants access to all of the services\
            \ that are available to non-admin and non-owner users of the account."
          example:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
          items:
            description: Service name
            type: string
          type: array
        country_data:
          description: "A list of country-specific data sources to allow access to.\
            \ A missing value, empty array or the value `*` grants access to any data\
            \ source."
          example:
          - '*'
          - DE
          - DK
          - GB
          - SE
          items:
            description: 2-letter country code or `*`
            type: string
          type: array
      type: object
    ApiKeyToken:
      description: Contains the generated API key which is only revealed right after
        generation
      properties:
        token:
          description: The actual API key token to use with the `X-API-KEY` header
            to authenticate with the key
          example: 3j51ds3kn4234m23l24km23
          type: string
      type: object
    ApiKeyStatus:
      description: |
        Describes the status of the API key.
        The status can be set to active or disabled manually.
        It will become expired automatically, if the expiry date has been surpassed.
      enum:
      - enabled
      - disabled
      - expired
      type: string
    ApiKeyBase:
      properties:
        name:
          description: Human readable name of the API key
          example: CRM integration key
          type: string
        status:
          $ref: '#/components/schemas/ApiKeyStatus'
        expires_at:
          description: Optional date/time that the key will expire
          format: date-time
          type: string
        user_id:
          description: |
            The ID of the API key's user.
          readOnly: true
          type: string
        account_id:
          description: |
            The ID of account that the API key is associated with.
          type: string
        last_used_at:
          description: The approximate last time that the API key was used to authenticate
            API requests
          format: date-time
          readOnly: true
          type: string
        token_prefix:
          description: A prefix of the API key
          readOnly: true
          type: string
      type: object
    ApiKeyAux:
      properties:
        scopes:
          $ref: '#/components/schemas/PermissionScopes'
      type: object
    ApiKeyCreation:
      allOf:
      - $ref: '#/components/schemas/ApiKeyBase'
      - $ref: '#/components/schemas/ApiKeyAux'
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        account_id: account_id
        user_id: user_id
        name: CRM integration key
        token_prefix: token_prefix
        scopes:
          country_data:
          - '*'
          - DE
          - DK
          - GB
          - SE
          origin_domains:
          - '*'
          - https://example.com
          service_grants:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
        status: enabled
    ApiKeyItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/ApiKeyBase'
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        account_id: account_id
        user_id: user_id
        name: CRM integration key
        token_prefix: token_prefix
        id: 4k3jKJ9D12kj0S4c
        status: enabled
    ApiKeyMutation:
      allOf:
      - $ref: '#/components/schemas/ApiKeyBase'
      - $ref: '#/components/schemas/ApiKeyAux'
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        account_id: account_id
        user_id: user_id
        name: CRM integration key
        token_prefix: token_prefix
        scopes:
          country_data:
          - '*'
          - DE
          - DK
          - GB
          - SE
          origin_domains:
          - '*'
          - https://example.com
          service_grants:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
        status: enabled
    ApiKeyFull:
      allOf:
      - $ref: '#/components/schemas/ApiKeyItem'
      - $ref: '#/components/schemas/ApiKeyAux'
      - $ref: '#/components/schemas/TimestampedObject'
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        created_by: created_by
        last_used_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        account_id: account_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        name: CRM integration key
        token_prefix: token_prefix
        updated_by: updated_by
        id: 4k3jKJ9D12kj0S4c
        scopes:
          country_data:
          - '*'
          - DE
          - DK
          - GB
          - SE
          origin_domains:
          - '*'
          - https://example.com
          service_grants:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
        status: enabled
    ApiKeyFullWithToken:
      allOf:
      - $ref: '#/components/schemas/ApiKeyToken'
      - $ref: '#/components/schemas/ApiKeyFull'
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        created_by: created_by
        token: 3j51ds3kn4234m23l24km23
        last_used_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        account_id: account_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        name: CRM integration key
        token_prefix: token_prefix
        updated_by: updated_by
        id: 4k3jKJ9D12kj0S4c
        scopes:
          country_data:
          - '*'
          - DE
          - DK
          - GB
          - SE
          origin_domains:
          - '*'
          - https://example.com
          service_grants:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
        status: enabled
    ApiKeyLinks:
      example:
        user: /user/4k3jKJ9D12kj0S4c
      properties:
        user:
          description: Link for getting to the api key's user
          example: /user/4k3jKJ9D12kj0S4c
          format: uri
          type: string
      type: object
    UserAccountMembership:
      description: Describes a user's membership of an account
      example:
        account_id: account_id
        account_name: account_name
        roles:
        - null
        - null
      properties:
        account_id:
          description: The ID of the account
          type: string
        account_name:
          description: The name of the account
          type: string
        roles:
          description: The roles that the user has within the account
          items:
            $ref: '#/components/schemas/UserAccountRole'
          type: array
      required:
      - account_id
      - roles
      type: object
    UserPlatformRole:
      description: |
        Defines the role of the user in the Digiseg platform. Most users
        will not have any platform roles, since this is preserved for
        account-agnostic operational privileges.
      enum:
      - super_admin
      - dev_ops
      - customer_ops
      type: string
    UserAccountRole:
      description: |
        Determines the role of a user within an account. The permissions of each
        role are defined to fulfill the following use cases:
        * `user` is a basic role needed to make use of the platforms primary features.
        * `admin` is required to perform administrative functions on the account, such as adding members to it. Admin permissions does NOT include removing the account altogether or billing-related actions.
        * `owner` is required to make changes to account billing, or delete the account.
      enum:
      - owner
      - admin
      - user
      type: string
    UserBase:
      properties:
        email:
          description: The email of the user (used as username when authenticating
            with password)
          example: casey.doe@example.com
          format: email
          type: string
        name:
          description: Human readable name of the user
          example: Casey Doe
          type: string
        account_id:
          description: |
            ID of the account that this user pertains to. If the user has
            multiple account memberships, this account ID will represent
            the primary account of the user.
          type: string
        roles:
          description: The roles that the user has within the account
          items:
            $ref: '#/components/schemas/UserAccountRole'
          type: array
        avatar_url:
          description: The URL to an avatar of the user
          example: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
          format: uri
          type: string
        logged_in_at:
          description: The approximate last time that the user logged in
          format: date-time
          readOnly: true
          type: string
      type: object
    UserCredentials:
      properties:
        password:
          description: Password of the user
          type: string
      type: object
    UserAux:
      properties:
        account_memberships:
          items:
            $ref: '#/components/schemas/UserAccountMembership'
          readOnly: true
          type: array
        is_super_admin:
          deprecated: true
          description: Determines if the user is a super admin of Digiseg API services
          type: boolean
        platform_roles:
          items:
            $ref: '#/components/schemas/UserPlatformRole'
          type: array
      type: object
    UserCreation:
      allOf:
      - $ref: '#/components/schemas/UserMutation'
      - $ref: '#/components/schemas/UserCreationNotification'
      example:
        password: password
        account_id: account_id
        platform_roles:
        - super_admin
        - super_admin
        notify_user: true
        avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
        roles:
        - owner
        - owner
        account_memberships:
        - account_id: account_id
          account_name: account_name
          roles:
          - null
          - null
        - account_id: account_id
          account_name: account_name
          roles:
          - null
          - null
        name: Casey Doe
        is_super_admin: true
        logged_in_at: 2000-01-23T04:56:07.000+00:00
        email: casey.doe@example.com
    UserMutation:
      allOf:
      - $ref: '#/components/schemas/UserBase'
      - $ref: '#/components/schemas/UserAux'
      - $ref: '#/components/schemas/UserCredentials'
      example:
        password: password
        account_id: account_id
        platform_roles:
        - super_admin
        - super_admin
        avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
        roles:
        - owner
        - owner
        account_memberships:
        - account_id: account_id
          account_name: account_name
          roles:
          - null
          - null
        - account_id: account_id
          account_name: account_name
          roles:
          - null
          - null
        name: Casey Doe
        is_super_admin: true
        logged_in_at: 2000-01-23T04:56:07.000+00:00
        email: casey.doe@example.com
    UserItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/UserBase'
      example:
        account_id: account_id
        avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
        roles:
        - owner
        - owner
        name: Casey Doe
        id: 4k3jKJ9D12kj0S4c
        logged_in_at: 2000-01-23T04:56:07.000+00:00
        email: casey.doe@example.com
    UserFull:
      allOf:
      - $ref: '#/components/schemas/UserItem'
      - $ref: '#/components/schemas/UserAux'
      - $ref: '#/components/schemas/TimestampedObject'
      example:
        platform_roles:
        - super_admin
        - super_admin
        roles:
        - owner
        - owner
        created_at: 2000-01-23T04:56:07.000+00:00
        is_super_admin: true
        created_by: created_by
        account_id: account_id
        avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
        updated_at: 2000-01-23T04:56:07.000+00:00
        account_memberships:
        - account_id: account_id
          account_name: account_name
          roles:
          - null
          - null
        - account_id: account_id
          account_name: account_name
          roles:
          - null
          - null
        name: Casey Doe
        updated_by: updated_by
        id: 4k3jKJ9D12kj0S4c
        logged_in_at: 2000-01-23T04:56:07.000+00:00
        email: casey.doe@example.com
    UserLinks:
      example:
        apikeys: /users/4k3jKJ9D12kj0S4c/apikeys
        account: /accounts/4k3jKJ9D12kj0S4c
      properties:
        account:
          description: Link for getting to the user's account
          example: /accounts/4k3jKJ9D12kj0S4c
          format: uri
          type: string
        apikeys:
          description: Link for getting to the user's api keys
          example: /users/4k3jKJ9D12kj0S4c/apikeys
          format: uri
          type: string
      type: object
    AuthTokenRequest:
      example:
        refresh_token: refresh_token
        password: password
        otp: otp
        scopes:
          country_data:
          - '*'
          - DE
          - DK
          - GB
          - SE
          origin_domains:
          - '*'
          - https://example.com
          service_grants:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
        username: username
      properties:
        username:
          description: The username (typically an email address) of the user to authenticate
          type: string
        otp:
          description: A one-time password provided to perform passwordless auth
          type: string
        password:
          description: The password for the given username
          type: string
        refresh_token:
          description: A previously issued refresh token for the given username
          type: string
        scopes:
          $ref: '#/components/schemas/PermissionScopes'
      required:
      - username
      type: object
    AccessTokenData:
      properties:
        access_token:
          description: A short-lived token (usable for 1 hour) to be used in subsequent
            requests
          example: 5k32n423kn4234m23l24km23
          type: string
        token_type:
          description: The type of access token returned
          example: Bearer
          type: string
        expires_in:
          description: The duration of time (in seconds) the access token is granted
            for
          example: 3600
          type: integer
        refresh_token:
          description: A long-lived token that can be used to generate new access
            tokens even after the returned access token expires.
          example: IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk
          type: string
      required:
      - access_token
      - expires_in
      - token_type
      type: object
    AuthTokenResponse:
      allOf:
      - $ref: '#/components/schemas/AccessTokenData'
      example:
        access_token: 5k32n423kn4234m23l24km23
        refresh_token: IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk
        token_type: Bearer
        expires_in: 3600
    RegistrationVerificationResponseData:
      allOf:
      - $ref: '#/components/schemas/AccessTokenData'
    RegistrationVerificationResponseLinks:
      properties:
        user:
          description: Link of the created user
          example: /user/4k3jKJ9D12kj0S4c
          format: uri
          type: string
        account:
          description: Link of the created account
          example: /accounts/4k3jKJ9D12kj0S4c
          format: uri
          type: string
      type: object
    AudienceExampleInputsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AudienceExampleInput'
          type: array
      required:
      - data
      type: object
    AudienceExampleInput:
      properties:
        ip_address:
          description: The IP address to resolve audiences for
          example: 1.1.1.1
          type: string
      type: object
    ResolveAudiencesOfMultipleRequest:
      example:
        queries:
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
      properties:
        queries:
          items:
            $ref: '#/components/schemas/ResolveAudiencesOfMultipleRequestItem'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - queries
      type: object
    ResolveAudiencesOfMultipleRequestItem:
      example:
        id: kbj423lt439hcdsijh432i
        ip_address: 1.1.1.1
      properties:
        id:
          description: An optional identifier for the item. The identifier will also
            be available in the response.
          example: kbj423lt439hcdsijh432i
          type: string
        ip_address:
          description: The IP address to resolve audiences for
          example: 1.1.1.1
          type: string
      required:
      - ip_address
      type: object
    ResolveAudiencesOfMultipleResponse:
      example:
        results:
        - audiences:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: tech_level
            code: n1
            name: Tech-Level in Household > Basic
          id: kbj423lt439hcdsijh432i
          status: resolved
        - audiences:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: tech_level
            code: n1
            name: Tech-Level in Household > Basic
          id: kbj423lt439hcdsijh432i
          status: resolved
      properties:
        results:
          items:
            $ref: '#/components/schemas/ResolveAudiencesOfMultipleResponseItem'
          type: array
      type: object
    ResolveAudiencesOfMultipleResponseItem:
      example:
        audiences:
        - category: home_type
          code: a2
          name: Home Type > House
        - category: children
          code: e1
          name: Children in the Household > No children
        - category: education
          code: f1
          name: Education > Basic
        - category: neighbourhood_type
          code: g1
          name: Neighbourhood Type > Countryside
        - category: income
          code: h1
          name: Household Income > Lowest 20%
        - category: building_age
          code: k1
          name: Building Age > Pre 1945
        - category: tech_level
          code: n1
          name: Tech-Level in Household > Basic
        id: kbj423lt439hcdsijh432i
        status: resolved
      properties:
        id:
          description: The identifier (if provided) of the item as it was provided
            in the request.
          example: kbj423lt439hcdsijh432i
          type: string
        audiences:
          example:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: tech_level
            code: n1
            name: Tech-Level in Household > Basic
          items:
            $ref: '#/components/schemas/Audience'
          type: array
        status:
          $ref: '#/components/schemas/AudienceResponseStatus'
      required:
      - status
      type: object
    AudienceResponse:
      example:
        audiences:
        - category: home_type
          code: a2
          name: Home Type > House
        - category: children
          code: e1
          name: Children in the Household > No children
        - category: education
          code: f1
          name: Education > Basic
        - category: neighbourhood_type
          code: g1
          name: Neighbourhood Type > Countryside
        - category: income
          code: h1
          name: Household Income > Lowest 20%
        - category: building_age
          code: k1
          name: Building Age > Pre 1945
        - category: tech_level
          code: n1
          name: Tech-Level in Household > Basic
        status: resolved
      properties:
        audiences:
          example:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: tech_level
            code: n1
            name: Tech-Level in Household > Basic
          items:
            $ref: '#/components/schemas/Audience'
          type: array
        status:
          $ref: '#/components/schemas/AudienceResponseStatus'
      required:
      - status
      type: object
    AudienceResponseStatus:
      description: |
        Describes the result of resolving the audiences of an IP address.
        `resolved` means that the IP was resolved and audiences are returned.
        `unresolved` means that the IP could not be resolved and no audiences are returned.
        `forbidden` means that the authenticated user did not have grants to resolve audiences in the country of the IP.
      enum:
      - resolved
      - unresolved
      - forbidden
      type: string
    ErrorResponse:
      example:
        code: 0
        message: message
      properties:
        code:
          type: integer
        message:
          description: A human-readable error message
          type: string
      required:
      - code
      - message
      type: object
    AudienceArray:
      example:
      - category: home_type
        code: a2
        name: Home Type > House
      - category: children
        code: e1
        name: Children in the Household > No children
      - category: education
        code: f1
        name: Education > Basic
      - category: neighbourhood_type
        code: g1
        name: Neighbourhood Type > Countryside
      - category: income
        code: h1
        name: Household Income > Lowest 20%
      - category: building_age
        code: k1
        name: Building Age > Pre 1945
      - category: tech_level
        code: n1
        name: Tech-Level in Household > Basic
      items:
        $ref: '#/components/schemas/Audience'
      type: array
    Audience:
      description: An object that represents an audience matched to the request
      properties:
        category:
          description: The audience category
          example: lifecycle
          type: string
        code:
          description: The unique audience code
          example: c5
          type: string
        name:
          description: "The name of the audience, typically of the form \"{category\
            \ name} > {audience name}\""
          example: Lifecycle > Pensioners
          type: string
      type: object
    StudyMeta:
      example:
        permissions:
          get: true
          delete: true
          put: true
      properties:
        permissions:
          $ref: '#/components/schemas/StudyPermissions'
      type: object
    StudyPermissions:
      description: Provides information about the current user's permissions of a
        study
      example:
        get: true
        delete: true
        put: true
      properties:
        get:
          description: Can the current user GET (read) study information?
          type: boolean
        put:
          description: Can the current user PUT (update) study information?
          type: boolean
        delete:
          description: Can the current user DELETE the study?
          type: boolean
      required:
      - delete
      - get
      - put
      type: object
    StudyLinks:
      example:
        stats_timing: /studies/2c9jKJ9D12kj0S4c/stats/timing
        stats_frequencies: /studies/2c9jKJ9D12kj0S4c/stats/frequencies
        stats_countries: /studies/2c9jKJ9D12kj0S4c/stats/countries
        stats_audiences: /studies/2c9jKJ9D12kj0S4c/stats/audiences
      properties:
        stats_countries:
          description: Link to the country statistics for the study
          example: /studies/2c9jKJ9D12kj0S4c/stats/countries
          format: uri
          type: string
        stats_audiences:
          description: Link to the audience statistics for the study
          example: /studies/2c9jKJ9D12kj0S4c/stats/audiences
          format: uri
          type: string
        stats_timing:
          description: Link to the timing statistics for the study
          example: /studies/2c9jKJ9D12kj0S4c/stats/timing
          format: uri
          type: string
        stats_frequencies:
          description: Link to the frequency statistics for the study
          example: /studies/2c9jKJ9D12kj0S4c/stats/frequencies
          format: uri
          type: string
      type: object
    IdentifyableObject1:
      properties:
        id:
          description: Unique ID for the object
          example: 2c9jKJ9D12kj0S4c
          type: string
      required:
      - id
      type: object
    TimestampedObject1:
      properties:
        created_at:
          description: Date and time of the object creation
          format: date-time
          type: string
        created_by:
          description: ID of the user who created the object
          example: 3u1jKJ9D12kj0S4c
          type: string
        updated_at:
          description: Date and time of the latest update to the object
          format: date-time
          type: string
        updated_by:
          description: ID of the user who last updated the object
          example: 3u1jKJ9D12kj0S4c
          type: string
      required:
      - created_at
      - created_by
      type: object
    MeasurementEventLinks:
      additionalProperties:
        $ref: '#/components/schemas/MeasurementEventLink'
      description: |
        Links to trigger activity and events in this study.
        Two events are well-known and available in every study: impression and click.
      example:
        impression:
          link: //subdomain.digiseg.net/path/to/pix.gif
        click:
          link: //subdomain.digiseg.net/path/to/action
          parameters:
            destination:
              description: URL to redirect to
      properties:
        impression:
          $ref: '#/components/schemas/MeasurementEventLink'
        click:
          $ref: '#/components/schemas/MeasurementEventLink'
      readOnly: true
      type: object
    MeasurementEventLink:
      properties:
        link:
          description: The base URI of the link to an event
          format: uri
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/MeasurementEventLinkParameterInfo'
          description: Describes any parameters that can be added to the event link
          type: object
      type: object
    MeasurementEventLinkParameterInfo:
      properties:
        description:
          description: A description of what the parameter is used for
          type: string
      type: object
    MeasurementClientBase:
      properties:
        name:
          description: The name of the measurement client
          example: Acme Ltd
          type: string
        account_id:
          description: The ID of the account that owns this client
          example: 4k3jKJ9D12kj0S4c
          readOnly: true
          type: string
        logo_url:
          description: The URL of an image representing the measurement client
          example: https://api.digiseg.net/assets/measurement/clients/t4387kdfjn2r3lk/logo?vrft=dsk4j23k4osdk243
          format: uri
          readOnly: true
          type: string
      type: object
    MeasurementClientMutation:
      allOf:
      - $ref: '#/components/schemas/MeasurementClientBase'
      example:
        account_id: 4k3jKJ9D12kj0S4c
        logo_url: https://api.digiseg.net/assets/measurement/clients/t4387kdfjn2r3lk/logo?vrft=dsk4j23k4osdk243
        name: Acme Ltd
    MeasurementClientFull:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject1'
      - $ref: '#/components/schemas/MeasurementClientBase'
      - $ref: '#/components/schemas/TimestampedObject1'
      example:
        account_id: 4k3jKJ9D12kj0S4c
        updated_at: 2000-01-23T04:56:07.000+00:00
        logo_url: https://api.digiseg.net/assets/measurement/clients/t4387kdfjn2r3lk/logo?vrft=dsk4j23k4osdk243
        name: Acme Ltd
        updated_by: 3u1jKJ9D12kj0S4c
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 2c9jKJ9D12kj0S4c
        created_by: 3u1jKJ9D12kj0S4c
    MeasurementClientItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject1'
      - $ref: '#/components/schemas/MeasurementClientBase'
      example:
        id: 7c9jKJ9D12kj0S4d
        name: Acme Ltd
        logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
      readOnly: true
    MeasurementLabels:
      description: |
        A set of labels that users can use to categorize their measurements.
        Can be used to indicate type of study, customer names or other
        traits.
      example:
      - Acme
      - CTV
      - Seasonal
      items:
        type: string
      type: array
    StudyBase:
      properties:
        name:
          example: Acme Summer 2024 brand awareness
          type: string
        labels:
          description: |
            A set of labels that users can use to categorize their measurements.
            Can be used to indicate type of study, customer names or other
            traits.
          example:
          - Acme
          - CTV
          - Seasonal
          items:
            type: string
          type: array
        account_id:
          description: The ID of the account that owns this study
          example: 4k3jKJ9D12kj0S4c
          readOnly: true
          type: string
        start_date:
          description: The date for which the study and its data ingestion will start
          format: date-time
          type: string
        end_date:
          description: The date for which the study and its data ingestion will end
          format: date-time
          type: string
        life_cycle_stage:
          $ref: '#/components/schemas/StudyLifecycleStage'
        ingestion_status:
          $ref: '#/components/schemas/StudyIngestionStatus'
        summary_stats:
          $ref: '#/components/schemas/StudySummaryStats'
        client:
          $ref: '#/components/schemas/MeasurementClientItem'
      type: object
    StudyIngestionStatus:
      description: |
        The status of the data collection of the study, indicating whether stats are available and representative.

        * `no_data` means that the study has been created but no data has been received.
        * `active_ramping_up` means that data has been received, but not enough to provide meaningful stats yet.
        * `active_fulfilled` means that the study has received a good amount of data, but more data can still be added.
        * `paused_limited` means that the study was paused because of exceeded limits (typically when `event_cap` is exceeded)
        * `finished_complete` means that the study has finished and is no longer open to receive data.
        * `finished_expired` means that the study has finished but not enough data was collected to provide meaningful stats.
      enum:
      - no_data
      - active_ramping_up
      - active_fulfilled
      - paused_limited
      - finished_complete
      - finished_expired
      readOnly: true
      type: string
    StudyLifecycleStage:
      description: |
        The life cycle stage of the study.
      enum:
      - pending
      - active
      - paused
      - finished
      readOnly: true
      type: string
    StudySummaryStats:
      example:
        private:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
        business:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
        not_resolved:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
      properties:
        private:
          $ref: '#/components/schemas/MeasurementsContainer'
        business:
          $ref: '#/components/schemas/MeasurementsContainer'
        not_resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
      readOnly: true
      required:
      - business
      - not_resolved
      - private
      type: object
    StudyAux:
      properties:
        event_links:
          $ref: '#/components/schemas/MeasurementEventLinks'
        event_cap:
          description: "If present, an upper limit on the number of events that will\
            \ be processed in this study."
          type: integer
        banner_image_url:
          description: |
            The URL to a banner image for the study.
            Note that the banner image is used only for Digiseg study reporting and presentation,
            it does NOT represent any delivered banner ad creatives or similar.
          example: https://api.digiseg.net/assets/studies/7c9jKJ9D12kj0S4d/banner_image?vrft=dsk4j23k4osdk243
          format: uri
          readOnly: true
          type: string
        integration_platform:
          $ref: '#/components/schemas/MeasurementIntegrationPlatform'
        is_example:
          description: "Determines if the study is an example study, used to demonstrate\
            \ product capabilities"
          readOnly: true
          type: boolean
      type: object
    MeasurementIntegrationPlatform:
      description: |
        The integration/platform with which a study is being delivered
      example:
        id: adf
        name: Adform
      properties:
        id:
          description: |
            An ID for the integration platform, if the integration platform is a known platform.
            Note that integration platform ID uniqueness is a responsibility of the client since this is simply an optional reference point to keep.
            Can be null/omitted if the platform name is a one-off value with just a string.
          maxLength: 26
          type: string
        name:
          description: The name of the integration platform.
          maxLength: 200
          type: string
      type: object
    StudyCreationData:
      properties:
        event_set:
          $ref: '#/components/schemas/MeasurementEventSet'
        client_id:
          description: The ID of the measurement client that this study is for
          example: kfsdj423jkn243lml423
          type: string
      required:
      - event_set
      type: object
    MeasurementEventSet:
      description: |
        The set of events to create for the study.
      enum:
      - impressions_only
      - impressions_and_clicks
      type: string
    StudyItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject1'
      - $ref: '#/components/schemas/StudyBase'
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        account_id: 4k3jKJ9D12kj0S4c
        name: Acme Summer 2024 brand awareness
        summary_stats:
          private:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          business:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          not_resolved:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
        client:
          id: 7c9jKJ9D12kj0S4d
          name: Acme Ltd
          logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
        id: 2c9jKJ9D12kj0S4c
        life_cycle_stage: pending
        labels:
        - Acme
        - CTV
        - Seasonal
        start_date: 2000-01-23T04:56:07.000+00:00
        ingestion_status: no_data
    StudyFull:
      allOf:
      - $ref: '#/components/schemas/StudyItem'
      - $ref: '#/components/schemas/StudyAux'
      - $ref: '#/components/schemas/TimestampedObject1'
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        is_example: true
        integration_platform:
          id: adf
          name: Adform
        event_cap: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        created_by: 3u1jKJ9D12kj0S4c
        labels:
        - Acme
        - CTV
        - Seasonal
        ingestion_status: no_data
        account_id: 4k3jKJ9D12kj0S4c
        updated_at: 2000-01-23T04:56:07.000+00:00
        banner_image_url: https://api.digiseg.net/assets/studies/7c9jKJ9D12kj0S4d/banner_image?vrft=dsk4j23k4osdk243
        name: Acme Summer 2024 brand awareness
        summary_stats:
          private:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          business:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          not_resolved:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
        updated_by: 3u1jKJ9D12kj0S4c
        client:
          id: 7c9jKJ9D12kj0S4d
          name: Acme Ltd
          logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
        id: 2c9jKJ9D12kj0S4c
        life_cycle_stage: pending
        event_links:
          impression:
            link: //subdomain.digiseg.net/path/to/pix.gif
          click:
            link: //subdomain.digiseg.net/path/to/action
            parameters:
              destination:
                description: URL to redirect to
        start_date: 2000-01-23T04:56:07.000+00:00
    StudyCreation:
      allOf:
      - $ref: '#/components/schemas/StudyBase'
      - $ref: '#/components/schemas/StudyAux'
      - $ref: '#/components/schemas/StudyCreationData'
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        is_example: true
        integration_platform:
          id: adf
          name: Adform
        event_cap: 0
        client_id: kfsdj423jkn243lml423
        labels:
        - Acme
        - CTV
        - Seasonal
        ingestion_status: no_data
        account_id: 4k3jKJ9D12kj0S4c
        banner_image_url: https://api.digiseg.net/assets/studies/7c9jKJ9D12kj0S4d/banner_image?vrft=dsk4j23k4osdk243
        name: Acme Summer 2024 brand awareness
        summary_stats:
          private:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          business:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          not_resolved:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
        client:
          id: 7c9jKJ9D12kj0S4d
          name: Acme Ltd
          logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
        event_set: impressions_only
        life_cycle_stage: pending
        event_links:
          impression:
            link: //subdomain.digiseg.net/path/to/pix.gif
          click:
            link: //subdomain.digiseg.net/path/to/action
            parameters:
              destination:
                description: URL to redirect to
        start_date: 2000-01-23T04:56:07.000+00:00
      required:
      - name
    StudyMutation:
      allOf:
      - $ref: '#/components/schemas/StudyBase'
      - $ref: '#/components/schemas/StudyAux'
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        is_example: true
        integration_platform:
          id: adf
          name: Adform
        event_cap: 0
        labels:
        - Acme
        - CTV
        - Seasonal
        ingestion_status: no_data
        account_id: 4k3jKJ9D12kj0S4c
        banner_image_url: https://api.digiseg.net/assets/studies/7c9jKJ9D12kj0S4d/banner_image?vrft=dsk4j23k4osdk243
        name: Acme Summer 2024 brand awareness
        summary_stats:
          private:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          business:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
          not_resolved:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
        client:
          id: 7c9jKJ9D12kj0S4d
          name: Acme Ltd
          logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
        life_cycle_stage: pending
        event_links:
          impression:
            link: //subdomain.digiseg.net/path/to/pix.gif
          click:
            link: //subdomain.digiseg.net/path/to/action
            parameters:
              destination:
                description: URL to redirect to
        start_date: 2000-01-23T04:56:07.000+00:00
    FractionOfTotal:
      description: |
        The fraction of events that fall within this object compared to the total of the
        category or segment (usually represented by the measurement's parent's parent).
        For example, if the measurement is "impression" on the `home_type` "Apartment" object,
        then the `fraction_of_total` represents the number of impressions on apartments compared
        to impressions from other `home_type` values.
      example: 0.17
      format: double
      maximum: 1
      minimum: 0
      type: number
    Measurement:
      description: Represents a single measurement
      properties:
        event:
          description: "The event that triggered the measurement, typically `impression`\
            \ or `click`"
          example: impression
          type: string
        count:
          description: "The real value of the measurement, typically a counter value\
            \ (integer)"
          type: integer
        fraction_of_total:
          description: |
            The fraction of events that fall within this object compared to the total of the
            category or segment (usually represented by the measurement's parent's parent).
            For example, if the measurement is "impression" on the `home_type` "Apartment" object,
            then the `fraction_of_total` represents the number of impressions on apartments compared
            to impressions from other `home_type` values.
          example: 0.17
          format: double
          maximum: 1
          minimum: 0
          type: number
        conversion_rate:
          description: |
            The rate of conversion to this measurement. Typically applies to measurements like
            "click" where it will represent the rate of impressions that turn into a click.
          example: 0.0053
          format: double
          maximum: 1
          minimum: 0
          type: number
      readOnly: true
      required:
      - event
      type: object
    MeasurementsContainer:
      description: An object containing measurements
      example:
        measurements:
        - event: impression
          count: 7280791
          fraction_of_total: 0.54
        - event: click
          count: 23522
          fraction_of_total: 0.5
          conversion_rate: 0.00323
      properties:
        measurements:
          description: Measurements related to this object
          example:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
      required:
      - measurements
      type: object
    Comparison:
      description: Represents a comparison of measurements with another source
      properties:
        name:
          description: The name of the comparison source
          example: Average Internet Population
          type: string
        code:
          description: The code of the comparison source
          example: aip
          type: string
        fraction_of_total:
          description: |
            The "fraction of total" value that is being compared with.
          example: 0.16
          format: double
          maximum: 1
          minimum: 0
          type: number
        index:
          description: |
            The comparison index where 100 means that the measurement is completely
            aligned with the compared metric. Values below 100 means that the measurement
            is below the compared metric, and values above 100 means that the measurement
            is above the compared metric.
          example: 97
          minimum: 0
          type: integer
      required:
      - code
      - fraction_of_total
      - index
      - name
      type: object
    ComparisonsContainer:
      description: An object containing comparisons
      properties:
        comparisons:
          items:
            $ref: '#/components/schemas/Comparison'
          type: array
      type: object
    AudienceCategoryStats:
      properties:
        name:
          description: The name of the audience category
          type: string
        audiences:
          items:
            $ref: '#/components/schemas/AudienceStats'
          type: array
      required:
      - audiences
      - name
      type: object
    AudienceStats:
      allOf:
      - properties:
          code:
            description: The code of the audience
            example: a1
            type: string
          name:
            description: The name of the audience
            example: Apartment
            type: string
        required:
        - code
        - name
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
      - $ref: '#/components/schemas/ComparisonsContainer'
    BusinessAudienceStats:
      allOf:
      - properties:
          audience_categories:
            $ref: '#/components/schemas/BusinessAudienceStatsAudienceCategories'
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
      description: Measurements (overall and per audience) for traffic resolved as
        business users
      example:
        measurements:
        - event: impression
          count: 7280791
          fraction_of_total: 0.54
        - event: click
          count: 23522
          fraction_of_total: 0.5
          conversion_rate: 0.00323069292
        audience_categories:
          size:
            audiences:
            - code: ba1
              measurements:
              - event: impression
                count: 2877715
                fraction_of_total: 0.17
              - event: click
                count: 3917
                fraction_of_total: 0.17
                conversion_rate: 0.00136114938
            - code: ba2
              measurements:
              - event: impression
                count: 2962674
                fraction_of_total: 0.17
              - event: click
                count: 4016
                fraction_of_total: 0.17
                conversion_rate: 0.00135553219
            - code: ba3
              measurements:
              - event: impression
                count: 11181673
                fraction_of_total: 0.66
              - event: click
                count: 15589
                fraction_of_total: 0.66
                conversion_rate: 0.00139415631
    BusinessAudienceStatsAudienceCategories:
      properties:
        size:
          $ref: '#/components/schemas/AudienceCategoryStats'
      required:
      - size
      type: object
    PrivateAudienceStats:
      allOf:
      - properties:
          audience_categories:
            $ref: '#/components/schemas/PrivateAudienceStatsAudienceCategories'
        required:
        - audience_categories
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
      description: Measurements (overall and per audience) for traffic resolved as
        private users
      example:
        measurements:
        - event: impression
          count: 7327205
          fraction_of_total: 0.23
        - event: click
          count: 11024
          fraction_of_total: 0.23
          conversion_rate: 0.00150453
        audience_categories:
          home_type:
            audiences:
            - code: a1
              measurements:
              - event: impression
                count: 2401671
                fraction_of_total: 0.33
              - event: click
                count: 3449
                fraction_of_total: 0.31
                conversion_rate: 0.001436
              comparisons:
              - name: Average Internet Population
                code: aip
                compared_to: impression
                index: 90
                fraction_of_total: 0.41
            - code: a2
              measurements:
              - event: impression
                count: 4925534
                fraction_of_total: 0.67
              - event: click
                count: 7575
                fraction_of_total: 0.69
                conversion_rate: 0.0015379
              comparisons:
              - name: Average Internet Population
                code: aip
                compared_to: impression
                index: 104
                fraction_of_total: 0.59
          savings: {}
          lifecycle: {}
          cars: {}
          children: {}
          education: {}
          neighbourhood_type: {}
          income: {}
          home_ownership: {}
          building_age: {}
          living_space: {}
          tech_level: {}
    PrivateAudienceStatsAudienceCategories:
      properties:
        home_type:
          $ref: '#/components/schemas/AudienceCategoryStats'
        savings:
          $ref: '#/components/schemas/AudienceCategoryStats'
        lifecycle:
          $ref: '#/components/schemas/AudienceCategoryStats'
        cars:
          $ref: '#/components/schemas/AudienceCategoryStats'
        children:
          $ref: '#/components/schemas/AudienceCategoryStats'
        education:
          $ref: '#/components/schemas/AudienceCategoryStats'
        neighbourhood_type:
          $ref: '#/components/schemas/AudienceCategoryStats'
        income:
          $ref: '#/components/schemas/AudienceCategoryStats'
        home_ownership:
          $ref: '#/components/schemas/AudienceCategoryStats'
        building_age:
          $ref: '#/components/schemas/AudienceCategoryStats'
        living_space:
          $ref: '#/components/schemas/AudienceCategoryStats'
        tech_level:
          $ref: '#/components/schemas/AudienceCategoryStats'
      required:
      - building_age
      - cars
      - children
      - education
      - home_ownership
      - home_type
      - income
      - lifecycle
      - living_space
      - neighbourhood_type
      - savings
      - tech_level
      type: object
    StudyAudienceStats:
      example:
        private:
          measurements:
          - event: impression
            count: 7327205
            fraction_of_total: 0.23
          - event: click
            count: 11024
            fraction_of_total: 0.23
            conversion_rate: 0.00150453
          audience_categories:
            home_type:
              audiences:
              - code: a1
                measurements:
                - event: impression
                  count: 2401671
                  fraction_of_total: 0.33
                - event: click
                  count: 3449
                  fraction_of_total: 0.31
                  conversion_rate: 0.001436
                comparisons:
                - name: Average Internet Population
                  code: aip
                  compared_to: impression
                  index: 90
                  fraction_of_total: 0.41
              - code: a2
                measurements:
                - event: impression
                  count: 4925534
                  fraction_of_total: 0.67
                - event: click
                  count: 7575
                  fraction_of_total: 0.69
                  conversion_rate: 0.0015379
                comparisons:
                - name: Average Internet Population
                  code: aip
                  compared_to: impression
                  index: 104
                  fraction_of_total: 0.59
            savings: {}
            lifecycle: {}
            cars: {}
            children: {}
            education: {}
            neighbourhood_type: {}
            income: {}
            home_ownership: {}
            building_age: {}
            living_space: {}
            tech_level: {}
        business:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323069292
          audience_categories:
            size:
              audiences:
              - code: ba1
                measurements:
                - event: impression
                  count: 2877715
                  fraction_of_total: 0.17
                - event: click
                  count: 3917
                  fraction_of_total: 0.17
                  conversion_rate: 0.00136114938
              - code: ba2
                measurements:
                - event: impression
                  count: 2962674
                  fraction_of_total: 0.17
                - event: click
                  count: 4016
                  fraction_of_total: 0.17
                  conversion_rate: 0.00135553219
              - code: ba3
                measurements:
                - event: impression
                  count: 11181673
                  fraction_of_total: 0.66
                - event: click
                  count: 15589
                  fraction_of_total: 0.66
                  conversion_rate: 0.00139415631
        not_resolved:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
      properties:
        not_resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
        business:
          $ref: '#/components/schemas/BusinessAudienceStats'
        private:
          $ref: '#/components/schemas/PrivateAudienceStats'
      type: object
    StudyCountryStats:
      example:
        predominant_country: DK
        countries:
        - code: DK
          measurements:
          - event: impression
            count: 201732
            fraction_of_total: 0.84
          - event: click
            count: 2017
            conversion_rate: 0.009998
        - code: SE
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.9
        - code: "NO"
          measurements:
          - event: impression
            count: 9606
            fraction_of_total: 0.4
        - code: DE
          measurements:
          - event: impression
            count: 4803
            fraction_of_total: 0.2
        - code: GB
          measurements:
          - event: impression
            count: 2402
            fraction_of_total: 0.1
        resolved:
          measurements:
          - event: impression
            count: 240157
            fraction_of_total: 0.68
          - event: click
            count: 4102
            fraction_of_total: 0.63
            conversion_rate: 0.01708049317
        not_resolved:
          measurements:
          - event: impression
            count: 112192
            fraction_of_total: 0.32
          - event: click
            count: 2402
            fraction_of_total: 0.37
            conversion_rate: 0.02140972618
      properties:
        predominant_country:
          description: The country code of the predominant country of the study
          type: string
        countries:
          description: A listing of each countries observed and the relevant measurements
            for each
          items:
            $ref: '#/components/schemas/CountryStats'
          type: array
        resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
        not_resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    CountryStats:
      allOf:
      - properties:
          code:
            description: Country code of the country
            example: DK
            type: string
        required:
        - code
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
    StudyTimingStats:
      example:
        day_of_month:
          "4":
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.32
            - event: click
              count: 1823
              fraction_of_total: 0.27
              conversion_rate: 0.08434348107
          "5":
            measurements:
            - event: impression
              count: 27329
              fraction_of_total: 0.4
            - event: click
              count: 2931
              fraction_of_total: 0.44
              conversion_rate: 0.10724871016
          "6":
            measurements:
            - event: impression
              count: 19329
              fraction_of_total: 0.28
            - event: click
              count: 1920
              fraction_of_total: 0.29
              conversion_rate: 0.09933260903
        hour_of_day:
          "10":
            measurements:
            - event: impression
              count: 19329
              fraction_of_total: 0.28
            - event: click
              count: 1920
              fraction_of_total: 0.29
              conversion_rate: 0.09933260903
          "08":
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.32
            - event: click
              count: 1823
              fraction_of_total: 0.27
              conversion_rate: 0.08434348107
          "09":
            measurements:
            - event: impression
              count: 27329
              fraction_of_total: 0.4
            - event: click
              count: 2931
              fraction_of_total: 0.44
              conversion_rate: 0.10724871016
        day_of_week:
          Tuesday:
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.32
            - event: click
              count: 1823
              fraction_of_total: 0.27
              conversion_rate: 0.08434348107
          Wednesday:
            measurements:
            - event: impression
              count: 27329
              fraction_of_total: 0.4
            - event: click
              count: 2931
              fraction_of_total: 0.44
              conversion_rate: 0.10724871016
          Thursday:
            measurements:
            - event: impression
              count: 19329
              fraction_of_total: 0.28
            - event: click
              count: 1920
              fraction_of_total: 0.29
              conversion_rate: 0.09933260903
      properties:
        hour_of_day:
          $ref: '#/components/schemas/HourOfDayStats'
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekStats'
        day_of_month:
          $ref: '#/components/schemas/DayOfMonthStats'
      type: object
    HourOfDayStats:
      description: |
        Contains statistics about the time of day that study activity has been measured.
        The 24 hour time format is used to represent measurements for each hour.
        The time zone used to record these measurements is the time zone of the measured
        user, or UTC if the user's location cannot be resolved.
      example:
        "10":
          measurements:
          - event: impression
            count: 19329
            fraction_of_total: 0.28
          - event: click
            count: 1920
            fraction_of_total: 0.29
            conversion_rate: 0.09933260903
        "08":
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.32
          - event: click
            count: 1823
            fraction_of_total: 0.27
            conversion_rate: 0.08434348107
        "09":
          measurements:
          - event: impression
            count: 27329
            fraction_of_total: 0.4
          - event: click
            count: 2931
            fraction_of_total: 0.44
            conversion_rate: 0.10724871016
      properties:
        "10":
          $ref: '#/components/schemas/MeasurementsContainer'
        "11":
          $ref: '#/components/schemas/MeasurementsContainer'
        "12":
          $ref: '#/components/schemas/MeasurementsContainer'
        "13":
          $ref: '#/components/schemas/MeasurementsContainer'
        "14":
          $ref: '#/components/schemas/MeasurementsContainer'
        "15":
          $ref: '#/components/schemas/MeasurementsContainer'
        "16":
          $ref: '#/components/schemas/MeasurementsContainer'
        "17":
          $ref: '#/components/schemas/MeasurementsContainer'
        "18":
          $ref: '#/components/schemas/MeasurementsContainer'
        "19":
          $ref: '#/components/schemas/MeasurementsContainer'
        "20":
          $ref: '#/components/schemas/MeasurementsContainer'
        "21":
          $ref: '#/components/schemas/MeasurementsContainer'
        "22":
          $ref: '#/components/schemas/MeasurementsContainer'
        "23":
          $ref: '#/components/schemas/MeasurementsContainer'
        "00":
          $ref: '#/components/schemas/MeasurementsContainer'
        "01":
          $ref: '#/components/schemas/MeasurementsContainer'
        "02":
          $ref: '#/components/schemas/MeasurementsContainer'
        "03":
          $ref: '#/components/schemas/MeasurementsContainer'
        "04":
          $ref: '#/components/schemas/MeasurementsContainer'
        "05":
          $ref: '#/components/schemas/MeasurementsContainer'
        "06":
          $ref: '#/components/schemas/MeasurementsContainer'
        "07":
          $ref: '#/components/schemas/MeasurementsContainer'
        "08":
          $ref: '#/components/schemas/MeasurementsContainer'
        "09":
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    DayOfWeekStats:
      description: |
        Contains statistics about the week days that study activity has been measured.
        The time zone used to record these measurements is the time zone of the measured
        user, or UTC if the user's location cannot be resolved.
      example:
        Tuesday:
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.32
          - event: click
            count: 1823
            fraction_of_total: 0.27
            conversion_rate: 0.08434348107
        Wednesday:
          measurements:
          - event: impression
            count: 27329
            fraction_of_total: 0.4
          - event: click
            count: 2931
            fraction_of_total: 0.44
            conversion_rate: 0.10724871016
        Thursday:
          measurements:
          - event: impression
            count: 19329
            fraction_of_total: 0.28
          - event: click
            count: 1920
            fraction_of_total: 0.29
            conversion_rate: 0.09933260903
      properties:
        Monday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Tuesday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Wednesday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Thursday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Friday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Saturday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Sunday:
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    DayOfMonthStats:
      description: |
        Contains statistics about the day of the month that study activity has been measured.
        The time zone used to record these measurements is the time zone of the measured
        user, or UTC if the user's location cannot be resolved.
      example:
        "4":
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.32
          - event: click
            count: 1823
            fraction_of_total: 0.27
            conversion_rate: 0.08434348107
        "5":
          measurements:
          - event: impression
            count: 27329
            fraction_of_total: 0.4
          - event: click
            count: 2931
            fraction_of_total: 0.44
            conversion_rate: 0.10724871016
        "6":
          measurements:
          - event: impression
            count: 19329
            fraction_of_total: 0.28
          - event: click
            count: 1920
            fraction_of_total: 0.29
            conversion_rate: 0.09933260903
      properties:
        "0":
          $ref: '#/components/schemas/MeasurementsContainer'
        "1":
          $ref: '#/components/schemas/MeasurementsContainer'
        "2":
          $ref: '#/components/schemas/MeasurementsContainer'
        "3":
          $ref: '#/components/schemas/MeasurementsContainer'
        "4":
          $ref: '#/components/schemas/MeasurementsContainer'
        "5":
          $ref: '#/components/schemas/MeasurementsContainer'
        "6":
          $ref: '#/components/schemas/MeasurementsContainer'
        "7":
          $ref: '#/components/schemas/MeasurementsContainer'
        "8":
          $ref: '#/components/schemas/MeasurementsContainer'
        "9":
          $ref: '#/components/schemas/MeasurementsContainer'
        "10":
          $ref: '#/components/schemas/MeasurementsContainer'
        "11":
          $ref: '#/components/schemas/MeasurementsContainer'
        "12":
          $ref: '#/components/schemas/MeasurementsContainer'
        "13":
          $ref: '#/components/schemas/MeasurementsContainer'
        "14":
          $ref: '#/components/schemas/MeasurementsContainer'
        "15":
          $ref: '#/components/schemas/MeasurementsContainer'
        "16":
          $ref: '#/components/schemas/MeasurementsContainer'
        "17":
          $ref: '#/components/schemas/MeasurementsContainer'
        "18":
          $ref: '#/components/schemas/MeasurementsContainer'
        "19":
          $ref: '#/components/schemas/MeasurementsContainer'
        "20":
          $ref: '#/components/schemas/MeasurementsContainer'
        "21":
          $ref: '#/components/schemas/MeasurementsContainer'
        "22":
          $ref: '#/components/schemas/MeasurementsContainer'
        "23":
          $ref: '#/components/schemas/MeasurementsContainer'
        "24":
          $ref: '#/components/schemas/MeasurementsContainer'
        "25":
          $ref: '#/components/schemas/MeasurementsContainer'
        "26":
          $ref: '#/components/schemas/MeasurementsContainer'
        "27":
          $ref: '#/components/schemas/MeasurementsContainer'
        "28":
          $ref: '#/components/schemas/MeasurementsContainer'
        "29":
          $ref: '#/components/schemas/MeasurementsContainer'
        "30":
          $ref: '#/components/schemas/MeasurementsContainer'
        "31":
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    StudyFrequencyStats:
      example:
        frequencies:
        - frequency: 1
          count: 4327843
        - frequency: 2
          count: 1337207
        - frequency: 3
          count: 38447
        - frequency: 4
          count: 4383
        - frequency: 5
          count: 1238
        count_above_cap: 27
      properties:
        average_frequency:
          description: |
            The average frequency of impressions per user.
          type: number
        frequencies:
          description: |
            A listing of frequencies observed and the relevant measurements for each. The returned list
            may be truncated to cut off the "long tail" of frequency values.
          items:
            $ref: '#/components/schemas/FrequencyStats'
          type: array
        count_above_cap:
          description: |
            The number of users that have generated impressions at a frequency value greater
            than those represented in `frequencies`.
          type: integer
      type: object
    FrequencyStats:
      properties:
        frequency:
          description: |
            A frequency of study impressions to users.
            * The value 1 means that the study has been exposed just once.
            * The value 2 means that the study has been exposed twice.
            * And so on...
          type: integer
        count:
          description: The number of users that have generated impressions at the
            corresponding frequency
          type: integer
      type: object
    CategoryPopulationsFull:
      example:
        populations:
        - key: key
        - key: key
      properties:
        populations:
          items:
            $ref: '#/components/schemas/PopulationItem'
          type: array
      type: object
    PopulationItem:
      example:
        key: key
      properties:
        key:
          description: A unique key for the population
          type: string
      required:
      - key
      type: object
    PopulationFull:
      description: |
        Describes the audience composition of a population. Every metric is delivered
        in relative measures (ie. fractions of total rather than counts) to make enable the
        comparison or adjustment of populations.
      example:
        private:
          fraction_of_total: 0.60000191669972
          audience_categories:
            building_age:
              k1: 0.15748203304926722
              k2: 0.3928982945631324
              k3: 0.44961967238760037
            cars:
              d1: 0.3629170872011518
              d2: 0.3290712776032319
              d3: 0.30801163519561625
            children:
              e1: 0.5810362918794315
              e2: 0.2150702462122784
              e3: 0.20389346190829008
            education:
              f1: 0.2845780304450923
              f2: 0.42785638121555847
              f3: 0.28756558833934925
            home_ownership:
              j1: 0.3669767000211004
              j2: 0.6330232999788996
            home_type:
              a1: 0.35777372708205
              a2: 0.64222627291795
            income:
              h1: 0.157881291966047
              h2: 0.20531067296776892
              h3: 0.20880081631623842
              h4: 0.22446332831422933
              h5: 0.20354389043571633
            lifecycle:
              c1: 0.1637364508298437
              c2: 0.2204226903640166
              c3: 0.2202620814826336
              c4: 0.21366189423068807
              c5: 0.18191688309281803
            living_space:
              l1: 0.26044913754608373
              l2: 0.4447836943442527
              l3: 0.2947671681096636
            neighbourhood_type:
              g1: 0.17472834616737581
              g2: 0.35623403820575084
              g3: 0.30825608526723125
              g4: 0.1607815303596421
            savings:
              b1: 0.48156860343408014
              b2: 0.32373097312992377
              b3: 0.19470042343599608
            tech_level:
              n1: 0.6029877995882236
              n2: 0.20917762259901243
              n3: 0.18783457781276397
        business:
          fraction_of_total: 0.39999808330027997
          audience_categories:
            size:
              ba1: 0.500006099426075
              ba2: 0.30009526544087706
              ba3: 0.19989863513304795
        name: name
      properties:
        name:
          description: A humanly readable name of the population
          type: string
        private:
          $ref: '#/components/schemas/PopulationAudienceCategorySetPrivateSection'
        business:
          $ref: '#/components/schemas/PopulationAudienceCategorySetBusinessSection'
      readOnly: true
      type: object
    PopulationAudienceCategorySetPrivateSection:
      allOf:
      - $ref: '#/components/schemas/PopulationAudienceCategorySetSection'
      example:
        fraction_of_total: 0.60000191669972
        audience_categories:
          building_age:
            k1: 0.15748203304926722
            k2: 0.3928982945631324
            k3: 0.44961967238760037
          cars:
            d1: 0.3629170872011518
            d2: 0.3290712776032319
            d3: 0.30801163519561625
          children:
            e1: 0.5810362918794315
            e2: 0.2150702462122784
            e3: 0.20389346190829008
          education:
            f1: 0.2845780304450923
            f2: 0.42785638121555847
            f3: 0.28756558833934925
          home_ownership:
            j1: 0.3669767000211004
            j2: 0.6330232999788996
          home_type:
            a1: 0.35777372708205
            a2: 0.64222627291795
          income:
            h1: 0.157881291966047
            h2: 0.20531067296776892
            h3: 0.20880081631623842
            h4: 0.22446332831422933
            h5: 0.20354389043571633
          lifecycle:
            c1: 0.1637364508298437
            c2: 0.2204226903640166
            c3: 0.2202620814826336
            c4: 0.21366189423068807
            c5: 0.18191688309281803
          living_space:
            l1: 0.26044913754608373
            l2: 0.4447836943442527
            l3: 0.2947671681096636
          neighbourhood_type:
            g1: 0.17472834616737581
            g2: 0.35623403820575084
            g3: 0.30825608526723125
            g4: 0.1607815303596421
          savings:
            b1: 0.48156860343408014
            b2: 0.32373097312992377
            b3: 0.19470042343599608
          tech_level:
            n1: 0.6029877995882236
            n2: 0.20917762259901243
            n3: 0.18783457781276397
    PopulationAudienceCategorySetBusinessSection:
      allOf:
      - $ref: '#/components/schemas/PopulationAudienceCategorySetSection'
      example:
        fraction_of_total: 0.39999808330027997
        audience_categories:
          size:
            ba1: 0.500006099426075
            ba2: 0.30009526544087706
            ba3: 0.19989863513304795
    PopulationAudienceCategorySetSection:
      properties:
        fraction_of_total:
          description: |
            The fraction of events that fall within this object compared to the total of the
            category or segment (usually represented by the measurement's parent's parent).
            For example, if the measurement is "impression" on the `home_type` "Apartment" object,
            then the `fraction_of_total` represents the number of impressions on apartments compared
            to impressions from other `home_type` values.
          example: 0.17
          format: double
          maximum: 1
          minimum: 0
          type: number
        audience_categories:
          additionalProperties:
            $ref: '#/components/schemas/PopulationAudienceCategorySection'
          description: "An object with category codes as keys, objects with audience\
            \ codes and fractions of totals as keys."
          type: object
      type: object
    PopulationAudienceCategorySection:
      additionalProperties:
        $ref: '#/components/schemas/FractionOfTotal'
      description: An object representing an audience category. Property keys represent
        audiences and property values represent fractions of totals.
      type: object
    PopulationSource:
      description: Source data for a population
      properties:
        name:
          description: A humanly readable name of the population
          type: string
        source:
          description: Name or description of the data source
          type: string
        meta:
          type: object
        not_resolved:
          $ref: '#/components/schemas/PopulationSourceNotResolvedSection'
        private:
          $ref: '#/components/schemas/PopulationSourcePrivateSection'
        business:
          $ref: '#/components/schemas/PopulationSourceBusinessSection'
      required:
      - business
      - meta
      - name
      - private
      - source
      type: object
    PopulationSourceNotResolvedSection:
      properties:
        count:
          type: integer
      type: object
    PopulationSourcePrivateSection:
      properties:
        audience_categories:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet'
        count:
          type: integer
      type: object
    PopulationSourceBusinessSection:
      properties:
        audience_categories:
          $ref: '#/components/schemas/PopulationSourceBusinessCategorySet'
        count:
          type: integer
      type: object
    PopulationSourcePrivateCategorySet:
      properties:
        home_type:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_home_type'
        savings:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_savings'
        lifecycle:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_lifecycle'
        cars:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_cars'
        children:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_children'
        education:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_education'
        neighbourhood_type:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_neighbourhood_type'
        income:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_income'
        home_ownership:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_home_ownership'
        building_age:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_building_age'
        living_space:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_living_space'
        tech_level:
          $ref: '#/components/schemas/PopulationSourcePrivateCategorySet_tech_level'
      required:
      - building_age
      - cars
      - children
      - education
      - home_ownership
      - home_type
      - income
      - lifecycle
      - living_space
      - neighbourhood_type
      - savings
      - tech_level
      type: object
    PopulationSourceBusinessCategorySet:
      properties:
        size:
          $ref: '#/components/schemas/PopulationSourceBusinessCategorySet_size'
      required:
      - size
      type: object
    AudienceDataMonthlyUsage:
      example:
        month: 3
        year: 2024
        usage:
          records_fulfilled: 858
          records_processed: 1029
      properties:
        year:
          description: Year number
          example: 2024
          type: integer
        month:
          description: Month number (1-12)
          example: 3
          maximum: 12
          minimum: 1
          type: integer
        usage:
          $ref: '#/components/schemas/AudienceDataUsage'
      required:
      - month
      - usage
      - year
      type: object
    AudienceDataDailyUsage:
      example:
        date: 2000-01-23
        usage:
          records_fulfilled: 858
          records_processed: 1029
      properties:
        date:
          description: Date in ISO 8601 format
          format: date
          type: string
        usage:
          $ref: '#/components/schemas/AudienceDataUsage'
      required:
      - date
      - usage
      type: object
    AudienceDataRealtimeUsage:
      example:
        usage:
          records_fulfilled: 858
          records_processed: 1029
        when: 2000-01-23T04:56:07.000+00:00
      properties:
        when:
          description: The point in time of recording the usage data
          format: date-time
          type: string
        usage:
          $ref: '#/components/schemas/AudienceDataUsage'
      required:
      - usage
      - when
      type: object
    AudienceDataUsage:
      example:
        records_fulfilled: 858
        records_processed: 1029
      properties:
        records_fulfilled:
          description: Number of records fulfilled
          example: 858
          format: int64
          type: integer
        records_processed:
          description: Number of records processed
          example: 1029
          format: int64
          type: integer
      type: object
    KeyValues:
      additionalProperties:
        maxLength: 255
        type: string
      type: object
    getAccountById_200_response:
      example:
        data:
          company_type: "[\"agency\"]"
          logo_url: https://api.digiseg.net/assets/account/ioi4324i2309das/logo?vrft=csdkl232l4pod4
          owner_id: owner_id
          billing_country: DK
          created_at: 2000-01-23T04:56:07.000+00:00
          billing_address:
            line1: Gl Kongevej 3B
            city: Copenhagen
            postal_code: "1610"
          created_by: created_by
          stripe_customer_id: stripe_customer_id
          website_url: https://openapi-generator.tech
          updated_at: 2000-01-23T04:56:07.000+00:00
          has_clients: true
          billing_email: billing_email
          name: Example Co.
          updated_by: updated_by
          id: 4k3jKJ9D12kj0S4c
          slug: slug
          company_size: Self-employed
        links:
          users: /accounts/4k3jKJ9D12kj0S4c/users
      properties:
        data:
          $ref: '#/components/schemas/AccountFull'
        links:
          $ref: '#/components/schemas/AccountLinks'
      type: object
    uploadAccountLogo_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    getAccountSubscriptions_200_response:
      example:
        data:
          subscriptions:
          - end_date: 2000-01-23
            is_active: true
            actual_price:
              amount: 0
              currency: EUR
              interval: monthly
            id: id
            plan:
              code: code
              product_type: base
              stripe_product_id: stripe_product_id
              is_public: true
              id: 4k3jKJ9D12kj0S4c
              list_price:
                amount: 0
                currency: EUR
                interval: monthly
              display_name: display_name
              stripe_price_id: stripe_price_id
            start_date: 2000-01-23
            payment_configuration:
              stripe_subscription_item_id: stripe_subscription_item_id
              timing: pre
              stripe_subscription_id: stripe_subscription_id
              platform: stripe
          - end_date: 2000-01-23
            is_active: true
            actual_price:
              amount: 0
              currency: EUR
              interval: monthly
            id: id
            plan:
              code: code
              product_type: base
              stripe_product_id: stripe_product_id
              is_public: true
              id: 4k3jKJ9D12kj0S4c
              list_price:
                amount: 0
                currency: EUR
                interval: monthly
              display_name: display_name
              stripe_price_id: stripe_price_id
            start_date: 2000-01-23
            payment_configuration:
              stripe_subscription_item_id: stripe_subscription_item_id
              timing: pre
              stripe_subscription_id: stripe_subscription_id
              platform: stripe
          account_id: account_id
          feature_set:
            has_report_customization: true
            study_event_set: null
            max_audience_lookups_per_month: 2
            study_audience_set: full
            has_audience_recommendations: true
            max_active_studies: 5
            max_events_per_study: 5
            has_report_sharing_clients: true
            max_users: 6
            max_clients: 1
            has_report_sharing_public: true
      properties:
        data:
          $ref: '#/components/schemas/AccountSubscriptionsSummary'
      type: object
    getAccountSubscriptionById_200_response:
      example:
        data:
          end_date: 2000-01-23
          is_active: true
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          actual_price:
            amount: 0
            currency: EUR
            interval: monthly
          updated_by: updated_by
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          plan:
            code: code
            stripe_product_id: stripe_product_id
            created_at: 2000-01-23T04:56:07.000+00:00
            list_price:
              amount: 0
              currency: EUR
              interval: monthly
            display_name: display_name
            created_by: created_by
            stripe_price_id: stripe_price_id
            product_type: base
            updated_at: 2000-01-23T04:56:07.000+00:00
            feature_set:
              has_report_customization: true
              study_event_set: null
              max_audience_lookups_per_month: 2
              study_audience_set: full
              has_audience_recommendations: true
              max_active_studies: 5
              max_events_per_study: 5
              has_report_sharing_clients: true
              max_users: 6
              max_clients: 1
              has_report_sharing_public: true
            updated_by: updated_by
            is_public: true
            id: id
          created_by: created_by
          start_date: 2000-01-23
          payment_configuration:
            stripe_subscription_item_id: stripe_subscription_item_id
            timing: pre
            stripe_subscription_id: stripe_subscription_id
            platform: stripe
      properties:
        data:
          $ref: '#/components/schemas/AccountSubscriptionFull'
      type: object
    listUsersByAccountId_200_response:
      example:
        data:
        - account_id: account_id
          avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
          roles:
          - owner
          - owner
          name: Casey Doe
          id: 4k3jKJ9D12kj0S4c
          logged_in_at: 2000-01-23T04:56:07.000+00:00
          email: casey.doe@example.com
        - account_id: account_id
          avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
          roles:
          - owner
          - owner
          name: Casey Doe
          id: 4k3jKJ9D12kj0S4c
          logged_in_at: 2000-01-23T04:56:07.000+00:00
          email: casey.doe@example.com
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
            rangeTruncated: true
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
        data:
          items:
            $ref: '#/components/schemas/UserItem'
          type: array
      type: object
    createUserInAccount_201_response:
      example:
        data:
          platform_roles:
          - super_admin
          - super_admin
          roles:
          - owner
          - owner
          created_at: 2000-01-23T04:56:07.000+00:00
          is_super_admin: true
          created_by: created_by
          account_id: account_id
          avatar_url: https://api.digiseg.net/assets/users/jkfn432jnkfwj43/avatar?vrft=32nfwk4324k3
          updated_at: 2000-01-23T04:56:07.000+00:00
          account_memberships:
          - account_id: account_id
            account_name: account_name
            roles:
            - null
            - null
          - account_id: account_id
            account_name: account_name
            roles:
            - null
            - null
          name: Casey Doe
          updated_by: updated_by
          id: 4k3jKJ9D12kj0S4c
          logged_in_at: 2000-01-23T04:56:07.000+00:00
          email: casey.doe@example.com
        links:
          apikeys: /users/4k3jKJ9D12kj0S4c/apikeys
          account: /accounts/4k3jKJ9D12kj0S4c
      properties:
        data:
          $ref: '#/components/schemas/UserFull'
        links:
          $ref: '#/components/schemas/UserLinks'
      type: object
    listApiKeysByAccountId_200_response:
      example:
        data:
        - last_used_at: 2000-01-23T04:56:07.000+00:00
          expires_at: 2000-01-23T04:56:07.000+00:00
          account_id: account_id
          user_id: user_id
          name: CRM integration key
          token_prefix: token_prefix
          id: 4k3jKJ9D12kj0S4c
          status: enabled
        - last_used_at: 2000-01-23T04:56:07.000+00:00
          expires_at: 2000-01-23T04:56:07.000+00:00
          account_id: account_id
          user_id: user_id
          name: CRM integration key
          token_prefix: token_prefix
          id: 4k3jKJ9D12kj0S4c
          status: enabled
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
            rangeTruncated: true
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
        data:
          items:
            $ref: '#/components/schemas/ApiKeyItem'
          type: array
      type: object
    listSubscriptionPlans_200_response:
      example:
        data:
        - code: code
          product_type: base
          stripe_product_id: stripe_product_id
          is_public: true
          id: 4k3jKJ9D12kj0S4c
          list_price:
            amount: 0
            currency: EUR
            interval: monthly
          display_name: display_name
          stripe_price_id: stripe_price_id
        - code: code
          product_type: base
          stripe_product_id: stripe_product_id
          is_public: true
          id: 4k3jKJ9D12kj0S4c
          list_price:
            amount: 0
            currency: EUR
            interval: monthly
          display_name: display_name
          stripe_price_id: stripe_price_id
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
            rangeTruncated: true
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        data:
          items:
            $ref: '#/components/schemas/SubscriptionPlanItem'
          type: array
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
      type: object
    createApiKey_201_response:
      example:
        data:
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
          token: 3j51ds3kn4234m23l24km23
          last_used_at: 2000-01-23T04:56:07.000+00:00
          expires_at: 2000-01-23T04:56:07.000+00:00
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          name: CRM integration key
          token_prefix: token_prefix
          updated_by: updated_by
          id: 4k3jKJ9D12kj0S4c
          scopes:
            country_data:
            - '*'
            - DE
            - DK
            - GB
            - SE
            origin_domains:
            - '*'
            - https://example.com
            service_grants:
            - audience-lookup
            - analytics-impression
            - analytics-click
            - '*'
          status: enabled
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyFullWithToken'
      type: object
    getApiKeyById_200_response:
      example:
        data:
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: created_by
          last_used_at: 2000-01-23T04:56:07.000+00:00
          expires_at: 2000-01-23T04:56:07.000+00:00
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          name: CRM integration key
          token_prefix: token_prefix
          updated_by: updated_by
          id: 4k3jKJ9D12kj0S4c
          scopes:
            country_data:
            - '*'
            - DE
            - DK
            - GB
            - SE
            origin_domains:
            - '*'
            - https://example.com
            service_grants:
            - audience-lookup
            - analytics-impression
            - analytics-click
            - '*'
          status: enabled
        links:
          user: /user/4k3jKJ9D12kj0S4c
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyFull'
        links:
          $ref: '#/components/schemas/ApiKeyLinks'
      type: object
    listStudies_200_response:
      example:
        data:
        - end_date: 2000-01-23T04:56:07.000+00:00
          account_id: 4k3jKJ9D12kj0S4c
          name: Acme Summer 2024 brand awareness
          summary_stats:
            private:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
            business:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
            not_resolved:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
          client:
            id: 7c9jKJ9D12kj0S4d
            name: Acme Ltd
            logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
          id: 2c9jKJ9D12kj0S4c
          life_cycle_stage: pending
          labels:
          - Acme
          - CTV
          - Seasonal
          start_date: 2000-01-23T04:56:07.000+00:00
          ingestion_status: no_data
        - end_date: 2000-01-23T04:56:07.000+00:00
          account_id: 4k3jKJ9D12kj0S4c
          name: Acme Summer 2024 brand awareness
          summary_stats:
            private:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
            business:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
            not_resolved:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
          client:
            id: 7c9jKJ9D12kj0S4d
            name: Acme Ltd
            logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
          id: 2c9jKJ9D12kj0S4c
          life_cycle_stage: pending
          labels:
          - Acme
          - CTV
          - Seasonal
          start_date: 2000-01-23T04:56:07.000+00:00
          ingestion_status: no_data
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
            rangeTruncated: true
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        data:
          items:
            $ref: '#/components/schemas/StudyItem'
          type: array
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
      type: object
    createStudy_201_response:
      example:
        data:
          end_date: 2000-01-23T04:56:07.000+00:00
          is_example: true
          integration_platform:
            id: adf
            name: Adform
          event_cap: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          created_by: 3u1jKJ9D12kj0S4c
          labels:
          - Acme
          - CTV
          - Seasonal
          ingestion_status: no_data
          account_id: 4k3jKJ9D12kj0S4c
          updated_at: 2000-01-23T04:56:07.000+00:00
          banner_image_url: https://api.digiseg.net/assets/studies/7c9jKJ9D12kj0S4d/banner_image?vrft=dsk4j23k4osdk243
          name: Acme Summer 2024 brand awareness
          summary_stats:
            private:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
            business:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
            not_resolved:
              measurements:
              - event: impression
                count: 7280791
                fraction_of_total: 0.54
              - event: click
                count: 23522
                fraction_of_total: 0.5
                conversion_rate: 0.00323
          updated_by: 3u1jKJ9D12kj0S4c
          client:
            id: 7c9jKJ9D12kj0S4d
            name: Acme Ltd
            logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
          id: 2c9jKJ9D12kj0S4c
          life_cycle_stage: pending
          event_links:
            impression:
              link: //subdomain.digiseg.net/path/to/pix.gif
            click:
              link: //subdomain.digiseg.net/path/to/action
              parameters:
                destination:
                  description: URL to redirect to
          start_date: 2000-01-23T04:56:07.000+00:00
        meta:
          permissions:
            get: true
            delete: true
            put: true
        links:
          stats_timing: /studies/2c9jKJ9D12kj0S4c/stats/timing
          stats_frequencies: /studies/2c9jKJ9D12kj0S4c/stats/frequencies
          stats_countries: /studies/2c9jKJ9D12kj0S4c/stats/countries
          stats_audiences: /studies/2c9jKJ9D12kj0S4c/stats/audiences
      properties:
        data:
          $ref: '#/components/schemas/StudyFull'
        links:
          $ref: '#/components/schemas/StudyLinks'
        meta:
          $ref: '#/components/schemas/StudyMeta'
      type: object
    listMeasurementLabels_200_response:
      example:
        data:
        - Acme
        - CTV
        - Seasonal
      properties:
        data:
          description: |
            A set of labels that users can use to categorize their measurements.
            Can be used to indicate type of study, customer names or other
            traits.
          example:
          - Acme
          - CTV
          - Seasonal
          items:
            type: string
          type: array
      type: object
    listMeasurementClients_200_response:
      example:
        data:
        - id: 7c9jKJ9D12kj0S4d
          name: Acme Ltd
          logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
        - id: 7c9jKJ9D12kj0S4d
          name: Acme Ltd
          logo_url: https://api.digiseg.net/assets/measurement/clients/7c9jKJ9D12kj0S4d/logo?vrft=dsk4j23k4osdk243
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
            rangeTruncated: true
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        data:
          items:
            $ref: '#/components/schemas/MeasurementClientItem'
          type: array
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
      type: object
    createMeasurementClient_201_response:
      example:
        data:
          account_id: 4k3jKJ9D12kj0S4c
          updated_at: 2000-01-23T04:56:07.000+00:00
          logo_url: https://api.digiseg.net/assets/measurement/clients/t4387kdfjn2r3lk/logo?vrft=dsk4j23k4osdk243
          name: Acme Ltd
          updated_by: 3u1jKJ9D12kj0S4c
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2c9jKJ9D12kj0S4c
          created_by: 3u1jKJ9D12kj0S4c
      properties:
        data:
          $ref: '#/components/schemas/MeasurementClientFull'
      type: object
    queryStudyAudienceStats_200_response:
      example:
        data:
          private:
            measurements:
            - event: impression
              count: 7327205
              fraction_of_total: 0.23
            - event: click
              count: 11024
              fraction_of_total: 0.23
              conversion_rate: 0.00150453
            audience_categories:
              home_type:
                audiences:
                - code: a1
                  measurements:
                  - event: impression
                    count: 2401671
                    fraction_of_total: 0.33
                  - event: click
                    count: 3449
                    fraction_of_total: 0.31
                    conversion_rate: 0.001436
                  comparisons:
                  - name: Average Internet Population
                    code: aip
                    compared_to: impression
                    index: 90
                    fraction_of_total: 0.41
                - code: a2
                  measurements:
                  - event: impression
                    count: 4925534
                    fraction_of_total: 0.67
                  - event: click
                    count: 7575
                    fraction_of_total: 0.69
                    conversion_rate: 0.0015379
                  comparisons:
                  - name: Average Internet Population
                    code: aip
                    compared_to: impression
                    index: 104
                    fraction_of_total: 0.59
              savings: {}
              lifecycle: {}
              cars: {}
              children: {}
              education: {}
              neighbourhood_type: {}
              income: {}
              home_ownership: {}
              building_age: {}
              living_space: {}
              tech_level: {}
          business:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323069292
            audience_categories:
              size:
                audiences:
                - code: ba1
                  measurements:
                  - event: impression
                    count: 2877715
                    fraction_of_total: 0.17
                  - event: click
                    count: 3917
                    fraction_of_total: 0.17
                    conversion_rate: 0.00136114938
                - code: ba2
                  measurements:
                  - event: impression
                    count: 2962674
                    fraction_of_total: 0.17
                  - event: click
                    count: 4016
                    fraction_of_total: 0.17
                    conversion_rate: 0.00135553219
                - code: ba3
                  measurements:
                  - event: impression
                    count: 11181673
                    fraction_of_total: 0.66
                  - event: click
                    count: 15589
                    fraction_of_total: 0.66
                    conversion_rate: 0.00139415631
          not_resolved:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
      properties:
        data:
          $ref: '#/components/schemas/StudyAudienceStats'
      type: object
    queryStudyCountryStats_200_response:
      example:
        data:
          predominant_country: DK
          countries:
          - code: DK
            measurements:
            - event: impression
              count: 201732
              fraction_of_total: 0.84
            - event: click
              count: 2017
              conversion_rate: 0.009998
          - code: SE
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.9
          - code: "NO"
            measurements:
            - event: impression
              count: 9606
              fraction_of_total: 0.4
          - code: DE
            measurements:
            - event: impression
              count: 4803
              fraction_of_total: 0.2
          - code: GB
            measurements:
            - event: impression
              count: 2402
              fraction_of_total: 0.1
          resolved:
            measurements:
            - event: impression
              count: 240157
              fraction_of_total: 0.68
            - event: click
              count: 4102
              fraction_of_total: 0.63
              conversion_rate: 0.01708049317
          not_resolved:
            measurements:
            - event: impression
              count: 112192
              fraction_of_total: 0.32
            - event: click
              count: 2402
              fraction_of_total: 0.37
              conversion_rate: 0.02140972618
      properties:
        data:
          $ref: '#/components/schemas/StudyCountryStats'
      type: object
    queryStudyTimingStats_200_response:
      example:
        data:
          day_of_month:
            "4":
              measurements:
              - event: impression
                count: 21614
                fraction_of_total: 0.32
              - event: click
                count: 1823
                fraction_of_total: 0.27
                conversion_rate: 0.08434348107
            "5":
              measurements:
              - event: impression
                count: 27329
                fraction_of_total: 0.4
              - event: click
                count: 2931
                fraction_of_total: 0.44
                conversion_rate: 0.10724871016
            "6":
              measurements:
              - event: impression
                count: 19329
                fraction_of_total: 0.28
              - event: click
                count: 1920
                fraction_of_total: 0.29
                conversion_rate: 0.09933260903
          hour_of_day:
            "10":
              measurements:
              - event: impression
                count: 19329
                fraction_of_total: 0.28
              - event: click
                count: 1920
                fraction_of_total: 0.29
                conversion_rate: 0.09933260903
            "08":
              measurements:
              - event: impression
                count: 21614
                fraction_of_total: 0.32
              - event: click
                count: 1823
                fraction_of_total: 0.27
                conversion_rate: 0.08434348107
            "09":
              measurements:
              - event: impression
                count: 27329
                fraction_of_total: 0.4
              - event: click
                count: 2931
                fraction_of_total: 0.44
                conversion_rate: 0.10724871016
          day_of_week:
            Tuesday:
              measurements:
              - event: impression
                count: 21614
                fraction_of_total: 0.32
              - event: click
                count: 1823
                fraction_of_total: 0.27
                conversion_rate: 0.08434348107
            Wednesday:
              measurements:
              - event: impression
                count: 27329
                fraction_of_total: 0.4
              - event: click
                count: 2931
                fraction_of_total: 0.44
                conversion_rate: 0.10724871016
            Thursday:
              measurements:
              - event: impression
                count: 19329
                fraction_of_total: 0.28
              - event: click
                count: 1920
                fraction_of_total: 0.29
                conversion_rate: 0.09933260903
      properties:
        data:
          $ref: '#/components/schemas/StudyTimingStats'
      type: object
    queryStudyFrequencyStats_200_response:
      example:
        data:
          frequencies:
          - frequency: 1
            count: 4327843
          - frequency: 2
            count: 1337207
          - frequency: 3
            count: 38447
          - frequency: 4
            count: 4383
          - frequency: 5
            count: 1238
          count_above_cap: 27
      properties:
        data:
          $ref: '#/components/schemas/StudyFrequencyStats'
      type: object
    listPopuplations_200_response:
      example:
        data:
          populations:
          - key: key
          - key: key
      properties:
        data:
          $ref: '#/components/schemas/CategoryPopulationsFull'
      type: object
    getPopuplationByKey_200_response:
      example:
        data:
          private:
            fraction_of_total: 0.60000191669972
            audience_categories:
              building_age:
                k1: 0.15748203304926722
                k2: 0.3928982945631324
                k3: 0.44961967238760037
              cars:
                d1: 0.3629170872011518
                d2: 0.3290712776032319
                d3: 0.30801163519561625
              children:
                e1: 0.5810362918794315
                e2: 0.2150702462122784
                e3: 0.20389346190829008
              education:
                f1: 0.2845780304450923
                f2: 0.42785638121555847
                f3: 0.28756558833934925
              home_ownership:
                j1: 0.3669767000211004
                j2: 0.6330232999788996
              home_type:
                a1: 0.35777372708205
                a2: 0.64222627291795
              income:
                h1: 0.157881291966047
                h2: 0.20531067296776892
                h3: 0.20880081631623842
                h4: 0.22446332831422933
                h5: 0.20354389043571633
              lifecycle:
                c1: 0.1637364508298437
                c2: 0.2204226903640166
                c3: 0.2202620814826336
                c4: 0.21366189423068807
                c5: 0.18191688309281803
              living_space:
                l1: 0.26044913754608373
                l2: 0.4447836943442527
                l3: 0.2947671681096636
              neighbourhood_type:
                g1: 0.17472834616737581
                g2: 0.35623403820575084
                g3: 0.30825608526723125
                g4: 0.1607815303596421
              savings:
                b1: 0.48156860343408014
                b2: 0.32373097312992377
                b3: 0.19470042343599608
              tech_level:
                n1: 0.6029877995882236
                n2: 0.20917762259901243
                n3: 0.18783457781276397
          business:
            fraction_of_total: 0.39999808330027997
            audience_categories:
              size:
                ba1: 0.500006099426075
                ba2: 0.30009526544087706
                ba3: 0.19989863513304795
          name: name
      properties:
        data:
          $ref: '#/components/schemas/PopulationFull'
      type: object
    listAudienceDataMonthlyUsage_200_response:
      example:
        data:
        - month: 3
          year: 2024
          usage:
            records_fulfilled: 858
            records_processed: 1029
        - month: 3
          year: 2024
          usage:
            records_fulfilled: 858
            records_processed: 1029
      properties:
        data:
          items:
            $ref: '#/components/schemas/AudienceDataMonthlyUsage'
          type: array
      type: object
    listAudienceDataDailyUsage_200_response:
      example:
        data:
        - date: 2000-01-23
          usage:
            records_fulfilled: 858
            records_processed: 1029
        - date: 2000-01-23
          usage:
            records_fulfilled: 858
            records_processed: 1029
      properties:
        data:
          items:
            $ref: '#/components/schemas/AudienceDataDailyUsage'
          type: array
      type: object
    listAudienceDataRealtimeUsage_200_response:
      example:
        data:
        - usage:
            records_fulfilled: 858
            records_processed: 1029
          when: 2000-01-23T04:56:07.000+00:00
        - usage:
            records_fulfilled: 858
            records_processed: 1029
          when: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/AudienceDataRealtimeUsage'
          type: array
      type: object
    PopulationSourcePrivateCategorySet_home_type:
      properties:
        a1:
          type: integer
        a2:
          type: integer
      required:
      - a1
      - a2
      type: object
    PopulationSourcePrivateCategorySet_savings:
      properties:
        b1:
          type: integer
        b2:
          type: integer
        b3:
          type: integer
      required:
      - b1
      - b2
      - b3
      type: object
    PopulationSourcePrivateCategorySet_lifecycle:
      properties:
        c1:
          type: integer
        c2:
          type: integer
        c3:
          type: integer
        c4:
          type: integer
        c5:
          type: integer
      required:
      - c1
      - c2
      - c3
      - c4
      - c5
      type: object
    PopulationSourcePrivateCategorySet_cars:
      properties:
        d1:
          type: integer
        d2:
          type: integer
        d3:
          type: integer
      required:
      - d1
      - d2
      - d3
      type: object
    PopulationSourcePrivateCategorySet_children:
      properties:
        e1:
          type: integer
        e2:
          type: integer
        e3:
          type: integer
      required:
      - e1
      - e2
      - e3
      type: object
    PopulationSourcePrivateCategorySet_education:
      properties:
        f1:
          type: integer
        f2:
          type: integer
        f3:
          type: integer
      required:
      - f1
      - f2
      - f3
      type: object
    PopulationSourcePrivateCategorySet_neighbourhood_type:
      properties:
        g1:
          type: integer
        g2:
          type: integer
        g3:
          type: integer
        g4:
          type: integer
      required:
      - g1
      - g2
      - g3
      - g4
      type: object
    PopulationSourcePrivateCategorySet_income:
      properties:
        h1:
          type: integer
        h2:
          type: integer
        h3:
          type: integer
        h4:
          type: integer
        h5:
          type: integer
      required:
      - h1
      - h2
      - h3
      - h4
      - h5
      type: object
    PopulationSourcePrivateCategorySet_home_ownership:
      properties:
        j1:
          type: integer
        j2:
          type: integer
      required:
      - j1
      - j2
      type: object
    PopulationSourcePrivateCategorySet_building_age:
      properties:
        k1:
          type: integer
        k2:
          type: integer
        k3:
          type: integer
      required:
      - k1
      - k2
      - k3
      type: object
    PopulationSourcePrivateCategorySet_living_space:
      properties:
        l1:
          type: integer
        l2:
          type: integer
        l3:
          type: integer
      required:
      - l1
      - l2
      - l3
      type: object
    PopulationSourcePrivateCategorySet_tech_level:
      properties:
        n1:
          type: integer
        n2:
          type: integer
        n3:
          type: integer
      required:
      - n1
      - n2
      - n3
      type: object
    PopulationSourceBusinessCategorySet_size:
      properties:
        ba1:
          type: integer
        ba2:
          type: integer
        ba3:
          type: integer
      required:
      - ba1
      - ba2
      - ba3
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    apiKeyHeaderAuth:
      in: header
      name: X-API-KEY
      type: apiKey
    apiKeyQueryParamAuth:
      in: query
      name: api_key
      type: apiKey
    oAuth:
      flows:
        password:
          refreshUrl: /auth/token
          scopes: {}
          tokenUrl: /auth/token
      type: oauth2
x-tagGroups:
- name: Audience Data
  tags:
  - audiences
- name: Measurement
  tags:
  - studies
  - measurement_labels
  - measurement_clients
  - populations
- name: Administration
  tags:
  - auth
  - users
  - accounts
  - usage
