openapi: 3.0.3
info:
  contact:
    email: support@digiseg.io
  description: |
    ### Digiseg API documentation

    # Introduction

    This API let you harness the power of Digisegs powerful and tracking-free segmentation
    engine.

    Audiences by Digiseg are available in 50+ countries, probablistically mapping
    neighborhood characteristics to the IP addresses observed on the internet -
    Household targeting & measurement for the post-cookie world.

    ## Developer SDKs

    In addition to using these APIs directly through any HTTP client, we provide a set
    of API client SDKs for popular programming languages:

    <div class="api-clients">
      <a class="api-client-box" href="https://github.com/digiseg-labs/api-client-python">
        <i class="api-client-sdk-logo devicon-python-plain"></i>
        <p>API client for Python</p>
      </a>
      <a class="api-client-box" href="https://github.com/digiseg-labs/api-client-go">
        <i class="api-client-sdk-logo devicon-go-original-wordmark"></i>
        <p>API client for Go</p>
      </a>
    </div>
    <div class="api-clients-breaker" />

    ## Audience taxonomy

    For a catalog of Digisegs audiences, refer to the
    [Audience list](https://digiseg.io/audiences-list).

    There is also an interactive
    [Audience builder](https://digiseg.io/cookieless-audience-builder/)
    which lets you discover the targeting reach and power of combining
    various household characteristics into composite audiences.
  title: Digiseg API
  version: 1.0.0
  x-logo:
    url: ./Digiseg-Logo.svg
    altText: Digiseg
servers:
- description: Digiseg API - production
  url: https://api.digiseg.net
security:
- bearerAuth: []
- apiKeyHeaderAuth: []
- apiKeyQueryParamAuth: []
- oAuth: []
tags:
- description: |
    Authentication with Digiseg APIs can be done in various ways. If you have received an
    API key from Digiseg, the simplest way to authenticate is simply to place it in
    the `X-API-KEY` header of your API requests, like this:

    ```bash
    curl -H "X-API-KEY: $APIKEY" https://api.digiseg.net/user
    ```

    If you do not have an API key, you need an _access token_. These are temporary
    tokens that are placed as a bearer token in the `Authorization` header. You obtain
    an access token through the `/auth/token` /
    [Create Access token](#tag/auth/operation/createAccessToken)
    endpoint, described in this section.
  name: auth
  x-displayName: Authentication
- description: |
    Services for managing users within your account. Access to user data
    depends on your user role, and may therefore be restricted.
  name: users
  x-displayName: User management
- description: |
    Services for managing your account. Access to account and user data
    depends on your user role, and may therefore be restricted.
  name: accounts
  x-displayName: Accounts management
- description: |
    Audiences are segments of households that you can target and measure. Use
    the Audience API to identify specific segments that you wish to initiate
    certain behaviour or actions from.
  name: audiences
  x-displayName: Audiences
- description: |
    Campaigns can be managed and measured in order to evaluate performance,
    reach and targeting power. Use the campaigns API to create campaigns,
    instrument them in your campaign creatives, and access statistics about
    the impressions, clicks and other events of the campaign.
  name: campaigns
  x-displayName: Campaigns
paths:
  /accounts/{account_id}:
    get:
      operationId: getAccountById
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAccountById_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get account
      tags:
      - accounts
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n\
          }).then(response => {\n  console.log(response);\n})"
  /accounts/{account_id}/users:
    get:
      operationId: getUsersByAccountId
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      - description: The desired page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional pagination parameter, indicating the previous cursor value to paginate beyond.
          The value to provide here is opaque, but can be found in previous requests in the `meta.page.last_cursor` field.
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUsersByAccountId_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: List users for account
      tags:
      - accounts
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/accounts/$ACCOUNT_ID/users
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/accounts/\"+account_id+\"/users\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    post:
      operationId: createUserInAccount
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Create user
      tags:
      - accounts
      - users
  /users/{user_id}/apikeys:
    get:
      operationId: getApiKeysByUserId
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getApiKeysByUserId_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: List API keys for user
      tags:
      - users
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID/apikeys
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/apikeys\", {\n\
          \  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer \"\
          \ + token},\n}).then(response => {\n  console.log(response);\n})"
    post:
      operationId: createApiKey
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ApiKeyCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createApiKey_201_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Create API key for user
      tags:
      - users
      - auth
  /users/{user_id}/apikeys/{key_id}:
    delete:
      operationId: deleteApiKeyById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Delete API key
      tags:
      - users
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X DELETE \
          https://api.digiseg.net/users/$USER_ID/apikeys/$KEY_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/apikeys/\"+key_id,\
          \ {\n  \"method\": \"DELETE\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
    get:
      operationId: getApiKeyById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getApiKeyById_200_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get API key
      tags:
      - users
      - auth
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID/apikeys/$KEY_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id+\"/apikeys/\"+key_id,\
          \ {\n  \"method\": \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer\
          \ \" + token},\n}).then(response => {\n  console.log(response);\n})"
  /user:
    get:
      description: Get information about the currently authenticated user
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "403":
          description: Forbidden
      summary: Get current user
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/user
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/user\", {\n  \"method\": \"GET\"\
          , \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n}).then(response\
          \ => {\n  console.log(response);\n})"
  /users/{user_id}:
    delete:
      operationId: deleteUserById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Delete user
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X DELETE \
          https://api.digiseg.net/users/$USER_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id, {\n  \"method\"\
          : \"DELETE\", \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n\
          }).then(response => {\n  console.log(response);\n})"
    get:
      operationId: getUserById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get user
      tags:
      - users
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "Authorization: $ACCESS_TOKEN" -X GET \
          https://api.digiseg.net/users/$USER_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/users/\"+user_id, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"Authorization\": \"Bearer \" + token},\n\
          }).then(response => {\n  console.log(response);\n})"
    put:
      operationId: updateUserById
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserInAccount_201_response'
          description: OK
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Update user
      tags:
      - users
  /auth/token:
    post:
      operationId: createAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
          description: OK
      security: []
      summary: Authenticate and create access token
      tags:
      - auth
  /audiences:
    get:
      operationId: resolveAudiencesOfClient
      parameters:
      - description: Optional parameter to set to `jsonp` if a JSONP response format
          is needed.
        explode: true
        in: query
        name: type
        required: false
        schema:
          example: jsonp
          pattern: ^(jsonp)?$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get audiences of the API client
      tags:
      - audiences
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/audiences
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/audiences\", {\n  \"method\": \"\
          GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response => {\n\
          \  console.log(response);\n})"
    post:
      operationId: resolveAudiencesOfMultiple
      requestBody:
        $ref: '#/components/requestBodies/ResolveAudiencesOfMultipleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveAudiencesOfMultipleResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get audiences for multiple IP addresses
      tags:
      - audiences
  /audiences/{user_ip}:
    get:
      operationId: resolveAudiencesOfSingle
      parameters:
      - description: The IP address to look up.
        example: 1.1.1.1
        explode: false
        in: path
        name: user_ip
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get audiences for a given IP address
      tags:
      - audiences
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/audiences/$USER_IP
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/audiences/\"+user_ip, {\n  \"method\"\
          : \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response =>\
          \ {\n  console.log(response);\n})"
  /campaigns:
    get:
      description: |
        List campaigns that the user has access to
      operationId: listCampaigns
      parameters:
      - description: |
          Defines the field to sort the result items by.
          Ascending order is applied by default, but the minus character
          can be used to indicate descending order instead.
        example: -created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - -created_at
          - name
          - -name
          type: string
        style: form
      - description: Optional parameter used to filter by campaign label
        example: CTV
        explode: true
        in: query
        name: "filter[label]"
        required: false
        schema:
          type: string
        style: form
      - description: Optional parameter used to search for campaigns where the name
          contains a substring (case insensitive)
        example: acme
        explode: true
        in: query
        name: "filter[name][contains]"
        required: false
        schema:
          type: string
        style: form
      - description: |
          Optional parameter used to query campaigns by specific account IDs (only available to super admins).
          The value `*` is synonymous for "all accounts".
        examples:
          single:
            description: A specific account ID
            value: 4k3jKJ9D12kj0S4c
          multiple:
            description: Multiple accounts
            value: "4k3jKJ9D12kj0S4c,5k3jKJ9D12kj0S4c,6k3jKJ9D12kj0S4c"
          all:
            description: All accounts
            value: '*'
        explode: true
        in: query
        name: "filter[account_id]"
        required: false
        schema:
          default: The user's account ID
          type: string
        style: form
      - description: The desired page size
        explode: true
        in: query
        name: "page[size]"
        required: false
        schema:
          default: 100
          maximum: 500
          minimum: 1
          type: integer
        style: form
      - description: |
          Optional pagination parameter, indicating the previous cursor value to paginate beyond.
          The value to provide here is opaque, but can be found in previous requests in the `meta.page.last_cursor` field.
        explode: true
        in: query
        name: "page[after]"
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCampaigns_200_response'
          description: OK
      summary: List campaigns
      tags:
      - campaigns
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/campaigns
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/campaigns\", {\n  \"method\": \"\
          GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response => {\n\
          \  console.log(response);\n})"
    post:
      description: Create a new campaign
      operationId: createCampaign
      requestBody:
        $ref: '#/components/requestBodies/CampaignCreationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createCampaign_201_response'
          description: OK
      summary: Create campaign
      tags:
      - campaigns
  /campaigns/{campaign_id}:
    delete:
      description: |
        Deletes a campaign
      operationId: deleteCampaignById
      parameters:
      - explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Object deleted
      summary: Delete campaign
      tags:
      - campaigns
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X DELETE \
          https://api.digiseg.net/campaigns/$CAMPAIGN_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/campaigns/\"+campaign_id, {\n  \"\
          method\": \"DELETE\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
    get:
      description: |
        Get campaign information for a specific campaign
      operationId: getCampaignById
      parameters:
      - explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createCampaign_201_response'
          description: OK
      summary: Get campaign
      tags:
      - campaigns
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/campaigns/$CAMPAIGN_ID
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/campaigns/\"+campaign_id, {\n  \"\
          method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n}).then(response\
          \ => {\n  console.log(response);\n})"
    put:
      description: |
        Updates properties of a campaign
      operationId: updateCampaignById
      parameters:
      - explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CampaignUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createCampaign_201_response'
          description: OK
      summary: Update campaign
      tags:
      - campaigns
  /campaigns/{campaign_id}/stats/audiences:
    get:
      description: |
        Query the audience statistics for a campaign, enabling the user
        to see the representation of matched household characteristics
        to impressions and clicks. These statistics can be compared to
        the Average Internet Population (globally or for a specific country),
        or to the audience stats of other campaigns.
      operationId: queryCampaignAudienceStats
      parameters:
      - explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryCampaignAudienceStats_200_response'
          description: OK
      summary: Audience statistics for campaign
      tags:
      - campaigns
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/campaigns/$CAMPAIGN_ID/stats/audiences
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/campaigns/\"+campaign_id+\"/stats/audiences\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
  /campaigns/{campaign_id}/stats/countries:
    get:
      description: |
        Query the country statistics for a campaign, enabling the user
        to see where the campaign is being delivered.
      operationId: queryCampaignCountryStats
      parameters:
      - explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryCampaignCountryStats_200_response'
          description: OK
      summary: Country statistics for campaign
      tags:
      - campaigns
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/campaigns/$CAMPAIGN_ID/stats/countries
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/campaigns/\"+campaign_id+\"/stats/countries\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
  /campaigns/{campaign_id}/stats/timing:
    get:
      description: |
        Query the timing statistics for a campaign, enabling the user
        to see campaign performance and delivery figures at different
        times of day, days of the week and days of the month.
      operationId: queryCampaignTimingStats
      parameters:
      - explode: false
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryCampaignTimingStats_200_response'
          description: OK
      summary: Timing statistics for campaign
      tags:
      - campaigns
      x-codeSamples:
      - lang: Shell
        source: |-
          curl -H "X-API-KEY: $APIKEY" -X GET \
          https://api.digiseg.net/campaigns/$CAMPAIGN_ID/stats/timing
      - lang: JavaScript
        source: "fetch(\"https://api.digiseg.net/campaigns/\"+campaign_id+\"/stats/timing\"\
          , {\n  \"method\": \"GET\", \n  \"headers\": {\"X-API-KEY\": apikey},\n\
          }).then(response => {\n  console.log(response);\n})"
components:
  requestBodies:
    AccountCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountMutation'
      required: true
    AccountUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountMutation'
      required: true
    ApiKeyCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiKeyMutation'
      required: true
    UserCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserMutation'
      required: true
    UserUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserMutation'
      required: true
    ResolveAudiencesOfMultipleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResolveAudiencesOfMultipleRequest'
      required: true
    CampaignCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignCreation'
      required: true
    CampaignUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignMutation'
      required: true
  responses:
    AccountByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getAccountById_200_response'
      description: OK
    AccountListResponse:
      content:
        application/json:
          schema:
            properties:
              meta:
                $ref: '#/components/schemas/ListPaginationMeta'
              links:
                $ref: '#/components/schemas/ListPaginationLinks'
              data:
                items:
                  $ref: '#/components/schemas/AccountItem'
                type: array
            type: object
      description: OK
    ApiKeyByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getApiKeyById_200_response'
      description: OK
    ApiKeyCreationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createApiKey_201_response'
      description: OK
    ApiKeyListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getApiKeysByUserId_200_response'
      description: OK
    UserByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createUserInAccount_201_response'
      description: OK
    CurrentUserResponse:
      $ref: '#/components/responses/UserByIdResponse'
    UserListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getUsersByAccountId_200_response'
      description: OK
    ForbiddenError:
      description: Forbidden
    NotFoundError:
      description: Not found
    BadRequestError:
      description: Bad request
    ObjectDeletedResponse:
      description: Object deleted
    CampaignListResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listCampaigns_200_response'
      description: OK
    CampaignByIdResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createCampaign_201_response'
      description: OK
    CampaignAudienceStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryCampaignAudienceStats_200_response'
      description: OK
    CampaignCountryStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryCampaignCountryStats_200_response'
      description: OK
    CampaignTimingStatsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryCampaignTimingStats_200_response'
      description: OK
    CampaignFrequencyStatsResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/CampaignFrequencyStats'
            type: object
      description: OK
  schemas:
    ListPaginationLinks:
      example:
        next: /path/to/next_page
        first: /path/to/first_page
      properties:
        first:
          description: Link to the first page of the list
          example: /path/to/first_page
          format: uri
          type: string
        next:
          description: Link to the next page of the list
          example: /path/to/next_page
          format: uri
          type: string
      type: object
    ListPaginationMeta:
      example:
        page:
          first_cursor: first_cursor
          total: 238
          last_cursor: last_cursor
      properties:
        page:
          $ref: '#/components/schemas/ListPaginationMetaPage'
      type: object
    ListPaginationMetaPage:
      example:
        first_cursor: first_cursor
        total: 238
        last_cursor: last_cursor
      properties:
        total:
          description: The total amount of elements in the list (the returned `data`
            can be paginated)
          example: 238
          type: integer
        first_cursor:
          type: string
        last_cursor:
          type: string
      type: object
    IdentifyableObject:
      properties:
        id:
          description: Unique ID for the object
          example: 4k3jKJ9D12kj0S4c
          type: string
      type: object
    TimestampedObject:
      properties:
        created_at:
          description: Date and time of the object creation
          format: date-time
          type: string
        created_by:
          description: ID of the user who created the object
          type: string
        updated_at:
          description: Date and time of the latest update to the object
          format: date-time
          type: string
        updated_by:
          description: ID of the user who last updated the object
          type: string
      type: object
    AccountBase:
      properties:
        name:
          description: Human readable name of the account
          example: Example Co.
          type: string
        slug:
          description: A short human-readable name to identify the account. Must be
            lower-case and between 4 and 16 characters.
          maxLength: 12
          minLength: 4
          pattern: "^[a-z]{4,16}$"
          type: string
      type: object
    AccountAux:
      properties:
        owner_id:
          description: ID of the user who is the ultimate owner of the account
          type: string
      type: object
    AccountItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/AccountBase'
    AccountMutation:
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      - $ref: '#/components/schemas/AccountAux'
    AccountFull:
      allOf:
      - $ref: '#/components/schemas/AccountItem'
      - $ref: '#/components/schemas/AccountAux'
      - $ref: '#/components/schemas/TimestampedObject'
    AccountLinks:
      example:
        users: /accounts/4k3jKJ9D12kj0S4c/users
      properties:
        users:
          description: Link for getting to the account's users
          example: /accounts/4k3jKJ9D12kj0S4c/users
          format: uri
          type: string
      type: object
    PermissionScopes:
      description: "Defines the scopes of a token or API key. If omitted, the default\
        \ set of grants that are available to non-admin and non-owner users of the\
        \ account will be added."
      example:
        country_data:
        - '*'
        - DE
        - DK
        - GB
        - SE
        origin_domains:
        - '*'
        - https://example.com
        service_grants:
        - audience-lookup
        - analytics-impression
        - analytics-click
        - '*'
      properties:
        origin_domains:
          description: "A list of origin domains that will be allowed access through\
            \ CORS and Referrer checks with the token or API key. A missing value,\
            \ empty array or the value `*` grants access from any domain."
          example:
          - '*'
          - https://example.com
          items:
            description: Domain name or `*`
            type: string
          type: array
        service_grants:
          description: "A list of service grants to allow access to use. A missing\
            \ value, empty array or the value `*` grants access to all of the services\
            \ that are available to non-admin and non-owner users of the account."
          example:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
          items:
            description: Service name
            type: string
          type: array
        country_data:
          description: "A list of country-specific data sources to allow access to.\
            \ A missing value, empty array or the value `*` grants access to any data\
            \ source."
          example:
          - '*'
          - DE
          - DK
          - GB
          - SE
          items:
            description: 2-letter country code or `*`
            type: string
          type: array
      type: object
    ApiKeyToken:
      description: Contains the generated API key which is only revealed right after
        generation
      properties:
        token:
          description: The actual API key token to use with the `X-API-KEY` header
            to authenticate with the key
          example: 3j51ds3kn4234m23l24km23
          type: string
      type: object
    ApiKeyBase:
      properties:
        name:
          description: Human readable name of the API key
          example: CRM integration key
          type: string
        status:
          enum:
          - enabled
          - disabled
          - expired
          type: string
        expires_at:
          description: Optional date/time that the key will expire
          format: date-time
          type: string
        user_id:
          description: The ID of the API key's user
          type: string
      type: object
    ApiKeyAux:
      properties:
        scopes:
          $ref: '#/components/schemas/PermissionScopes'
      type: object
    ApiKeyItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/ApiKeyBase'
    ApiKeyMutation:
      allOf:
      - $ref: '#/components/schemas/ApiKeyBase'
      - $ref: '#/components/schemas/ApiKeyAux'
    ApiKeyFull:
      allOf:
      - $ref: '#/components/schemas/ApiKeyItem'
      - $ref: '#/components/schemas/ApiKeyAux'
      - $ref: '#/components/schemas/TimestampedObject'
    ApiKeyFullWithToken:
      allOf:
      - $ref: '#/components/schemas/ApiKeyToken'
      - $ref: '#/components/schemas/ApiKeyFull'
    ApiKeyLinks:
      example:
        user: /user/4k3jKJ9D12kj0S4c
      properties:
        user:
          description: Link for getting to the api key's user
          example: /user/4k3jKJ9D12kj0S4c
          format: uri
          type: string
      type: object
    UserAccountRole:
      description: Determines the role of a user within an account
      enum:
      - owner
      - admin
      - user
      type: string
    UserBase:
      properties:
        email:
          description: The email of the user (used as username when authenticating
            with password)
          example: casey.doe@example.com
          format: email
          type: string
        name:
          description: Human readable name of the user
          example: Casey Doe
          type: string
        roles:
          description: The roles that the user has within the account
          items:
            $ref: '#/components/schemas/UserAccountRole'
          type: array
        avatar_url:
          description: The URL to an avatar of the user
          format: uri
          type: string
      type: object
    UserCredentials:
      properties:
        password:
          description: Password of the user
          type: string
      type: object
    UserAux:
      properties:
        account_id:
          description: ID of the account that this user pertains to
          type: string
        is_super_admin:
          description: Determines if the user is a super admin of Digiseg API services
          type: boolean
      type: object
    UserMutation:
      allOf:
      - $ref: '#/components/schemas/UserBase'
      - $ref: '#/components/schemas/UserAux'
      - $ref: '#/components/schemas/UserCredentials'
    UserItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject'
      - $ref: '#/components/schemas/UserBase'
    UserFull:
      allOf:
      - $ref: '#/components/schemas/UserItem'
      - $ref: '#/components/schemas/UserAux'
      - $ref: '#/components/schemas/TimestampedObject'
    UserLinks:
      example:
        apikeys: /users/4k3jKJ9D12kj0S4c/apikeys
        account: /accounts/4k3jKJ9D12kj0S4c
      properties:
        account:
          description: Link for getting to the user's account
          example: /accounts/4k3jKJ9D12kj0S4c
          format: uri
          type: string
        apikeys:
          description: Link for getting to the user's api keys
          example: /users/4k3jKJ9D12kj0S4c/apikeys
          format: uri
          type: string
      type: object
    AuthTokenRequest:
      example:
        refresh_token: refresh_token
        password: password
        scopes:
          country_data:
          - '*'
          - DE
          - DK
          - GB
          - SE
          origin_domains:
          - '*'
          - https://example.com
          service_grants:
          - audience-lookup
          - analytics-impression
          - analytics-click
          - '*'
        username: username
      properties:
        username:
          description: The username (typically an email address) of the user to authenticate
          type: string
        password:
          description: The password for the given username
          type: string
        refresh_token:
          description: A previously issued refresh token for the given username
          type: string
        scopes:
          $ref: '#/components/schemas/PermissionScopes'
      required:
      - username
      type: object
    AuthTokenResponse:
      example:
        access_token: 5k32n423kn4234m23l24km23
        refresh_token: IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk
        token_type: Bearer
        expires_in: 3600
      properties:
        access_token:
          description: A short-lived token (usable for 1 hour) to be used in subsequent
            requests
          example: 5k32n423kn4234m23l24km23
          type: string
        token_type:
          description: The type of access token returned
          example: Bearer
          type: string
        expires_in:
          description: The duration of time (in seconds) the access token is granted
            for
          example: 3600
          type: integer
        refresh_token:
          description: A long-lived token that can be used to generate new access
            tokens even after the returned access token expires.
          example: IwOGYzYTlmM2YxOTQ5MGE3YmNmMDFkNTVk
          type: string
      required:
      - access_token
      - expires_in
      - token_type
      type: object
    ResolveAudiencesOfMultipleRequest:
      example:
        queries:
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
        - id: kbj423lt439hcdsijh432i
          ip_address: 1.1.1.1
      properties:
        queries:
          items:
            $ref: '#/components/schemas/ResolveAudiencesOfMultipleRequestItem'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - queries
      type: object
    ResolveAudiencesOfMultipleRequestItem:
      example:
        id: kbj423lt439hcdsijh432i
        ip_address: 1.1.1.1
      properties:
        id:
          description: An optional identifier for the item. The identifier will also
            be available in the response.
          example: kbj423lt439hcdsijh432i
          type: string
        ip_address:
          description: The IP address to resolve audiences for
          example: 1.1.1.1
          type: string
      required:
      - ip_address
      type: object
    ResolveAudiencesOfMultipleResponse:
      example:
        results:
        - audiences:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: household_children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: household_income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: household_techlevel
            code: n1
            name: Tech-Level in Household > Basic
          id: kbj423lt439hcdsijh432i
          status: null
        - audiences:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: household_children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: household_income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: household_techlevel
            code: n1
            name: Tech-Level in Household > Basic
          id: kbj423lt439hcdsijh432i
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/ResolveAudiencesOfMultipleResponseItem'
          type: array
      type: object
    ResolveAudiencesOfMultipleResponseItem:
      example:
        audiences:
        - category: home_type
          code: a2
          name: Home Type > House
        - category: household_children
          code: e1
          name: Children in the Household > No children
        - category: education
          code: f1
          name: Education > Basic
        - category: neighbourhood_type
          code: g1
          name: Neighbourhood Type > Countryside
        - category: household_income
          code: h1
          name: Household Income > Lowest 20%
        - category: building_age
          code: k1
          name: Building Age > Pre 1945
        - category: household_techlevel
          code: n1
          name: Tech-Level in Household > Basic
        id: kbj423lt439hcdsijh432i
        status: null
      properties:
        id:
          description: The identifier (if provided) of the item as it was provided
            in the request.
          example: kbj423lt439hcdsijh432i
          type: string
        audiences:
          example:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: household_children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: household_income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: household_techlevel
            code: n1
            name: Tech-Level in Household > Basic
          items:
            $ref: '#/components/schemas/Audience'
          type: array
        status:
          $ref: '#/components/schemas/AudienceResponseStatus'
      required:
      - status
      type: object
    AudienceResponse:
      example:
        audiences:
        - category: home_type
          code: a2
          name: Home Type > House
        - category: household_children
          code: e1
          name: Children in the Household > No children
        - category: education
          code: f1
          name: Education > Basic
        - category: neighbourhood_type
          code: g1
          name: Neighbourhood Type > Countryside
        - category: household_income
          code: h1
          name: Household Income > Lowest 20%
        - category: building_age
          code: k1
          name: Building Age > Pre 1945
        - category: household_techlevel
          code: n1
          name: Tech-Level in Household > Basic
        status: null
      properties:
        audiences:
          example:
          - category: home_type
            code: a2
            name: Home Type > House
          - category: household_children
            code: e1
            name: Children in the Household > No children
          - category: education
            code: f1
            name: Education > Basic
          - category: neighbourhood_type
            code: g1
            name: Neighbourhood Type > Countryside
          - category: household_income
            code: h1
            name: Household Income > Lowest 20%
          - category: building_age
            code: k1
            name: Building Age > Pre 1945
          - category: household_techlevel
            code: n1
            name: Tech-Level in Household > Basic
          items:
            $ref: '#/components/schemas/Audience'
          type: array
        status:
          $ref: '#/components/schemas/AudienceResponseStatus'
      required:
      - status
      type: object
    AudienceResponseStatus:
      description: |
        Describes the result of resolving the audiences of an IP address.
        `resolved` means that the IP was resolved and audiences are returned.
        `unresolved` means that the IP could not be resolved and no audiences are returned.
        `forbidden` means that the authenticated user did not have grants to resolve audiences in the country of the IP.
      enum:
      - resolved
      - unresolved
      - forbidden
      type: string
    ErrorResponse:
      properties:
        code:
          type: integer
        message:
          description: A human-readable error message
          type: string
      required:
      - code
      - message
      type: object
    AudienceArray:
      example:
      - category: home_type
        code: a2
        name: Home Type > House
      - category: household_children
        code: e1
        name: Children in the Household > No children
      - category: education
        code: f1
        name: Education > Basic
      - category: neighbourhood_type
        code: g1
        name: Neighbourhood Type > Countryside
      - category: household_income
        code: h1
        name: Household Income > Lowest 20%
      - category: building_age
        code: k1
        name: Building Age > Pre 1945
      - category: household_techlevel
        code: n1
        name: Tech-Level in Household > Basic
      items:
        $ref: '#/components/schemas/Audience'
      type: array
    Audience:
      description: An object that represents an audience matched to the request
      properties:
        category:
          description: The audience category
          example: lifecycle
          type: string
        code:
          description: The unique audience code
          example: c5
          type: string
        name:
          description: "The name of the audience, typically of the form \"{category\
            \ name} > {audience name}\""
          example: Lifecycle > Pensioners
          type: string
      type: object
    CampaignLinks:
      example:
        stats_timing: /campaigns/2c9jKJ9D12kj0S4c/stats/timing
        stats_frequencies: /campaigns/2c9jKJ9D12kj0S4c/stats/frequencies
        stats_countries: /campaigns/2c9jKJ9D12kj0S4c/stats/countries
        stats_audiences: /campaigns/2c9jKJ9D12kj0S4c/stats/audiences
      properties:
        stats_countries:
          description: Link to the country statistics for the campaign
          example: /campaigns/2c9jKJ9D12kj0S4c/stats/countries
          format: uri
          type: string
        stats_audiences:
          description: Link to the audience statistics for the campaign
          example: /campaigns/2c9jKJ9D12kj0S4c/stats/audiences
          format: uri
          type: string
        stats_timing:
          description: Link to the timing statistics for the campaign
          example: /campaigns/2c9jKJ9D12kj0S4c/stats/timing
          format: uri
          type: string
        stats_frequencies:
          description: Link to the frequency statistics for the campaign
          example: /campaigns/2c9jKJ9D12kj0S4c/stats/frequencies
          format: uri
          type: string
      type: object
    IdentifyableObject1:
      properties:
        id:
          description: Unique ID for the object
          example: 2c9jKJ9D12kj0S4c
          type: string
      required:
      - id
      type: object
    TimestampedObject1:
      properties:
        created_at:
          description: Date and time of the object creation
          format: date-time
          type: string
        created_by:
          description: ID of the user who created the object
          example: 3u1jKJ9D12kj0S4c
          type: string
        updated_at:
          description: Date and time of the latest update to the object
          format: date-time
          type: string
        updated_by:
          description: ID of the user who last updated the object
          example: 3u1jKJ9D12kj0S4c
          type: string
      required:
      - created_at
      - created_by
      type: object
    CampaignEventLinks:
      additionalProperties:
        $ref: '#/components/schemas/CampaignEventLink'
      description: |
        Links to trigger activity and events in this campaign.
        Two events are well-known and available in every campaign: impression and click.
      example:
        impression:
          link: //subdomain.digiseg.net/path/to/pix.gif
        click:
          link: //subdomain.digiseg.net/path/to/click
          parameters:
            destination:
              description: URL to redirect to
      properties:
        impression:
          $ref: '#/components/schemas/CampaignEventLink'
        click:
          $ref: '#/components/schemas/CampaignEventLink'
      readOnly: true
      type: object
    CampaignEventLink:
      properties:
        link:
          description: The base URI of the link to an event
          format: uri
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/CampaignEventLinkParameterInfo'
          description: Describes any parameters that can be added to the event link
          type: object
      type: object
    CampaignEventLinkParameterInfo:
      properties:
        description:
          description: A description of what the parameter is used for
          type: string
      type: object
    CampaignBase:
      properties:
        name:
          example: Acme Summer 2024 brand awareness
          type: string
        labels:
          description: |
            A set of labels that users can use to categorize their campaigns.
            Can be used to indicate type of campaign, customer names or other
            traits.
          example:
          - Acme
          - CTV
          - Seasonal
          items:
            type: string
          maxItems: 5
          type: array
        account_id:
          description: The ID of the account that owns this campaign
          example: 4k3jKJ9D12kj0S4c
          readOnly: true
          type: string
        start_date:
          description: The date for which the campaign and its data ingestion will
            start.
          format: date-time
          readOnly: true
          type: string
        life_cycle_stage:
          $ref: '#/components/schemas/CampaignLifecycleStage'
        ingestion_status:
          $ref: '#/components/schemas/CampaignIngestionStatus'
      type: object
    CampaignIngestionStatus:
      description: |
        The status of the data collection of the campaign, indicating whether stats are available and representative.

        * `no_data` means that the campaign has been created but no data has been received.
        * `active_ramping_up` means that data has been received, but not enough to provide meaningful stats yet.
        * `active_fulfilled` means that the campaign has received a good amount of data, but more data can still be added.
        * `finished_complete` means that the campaign has finished and is no longer open to receive data.
        * `finished_expired` means that the campaign has finished but not enough data was collected to provide meaningful stats.
      enum:
      - no_data
      - active_ramping_up
      - active_fulfilled
      - finished_complete
      - finished_expired
      readOnly: true
      type: string
    CampaignLifecycleStage:
      description: |
        The life cycle stage of the campaign.
      enum:
      - pending
      - active
      - paused
      - finished
      readOnly: true
      type: string
    CampaignAux:
      properties:
        event_links:
          $ref: '#/components/schemas/CampaignEventLinks'
      type: object
    CampaignCreationData:
      properties:
        event_set:
          $ref: '#/components/schemas/CampaignEventSet'
      type: object
    CampaignEventSet:
      description: |
        The set of events to create for the campaign.
      enum:
      - impressions_only
      - impressions_and_clicks
      type: string
    CampaignItem:
      allOf:
      - $ref: '#/components/schemas/IdentifyableObject1'
      - $ref: '#/components/schemas/CampaignBase'
    CampaignFull:
      allOf:
      - $ref: '#/components/schemas/CampaignItem'
      - $ref: '#/components/schemas/CampaignAux'
      - $ref: '#/components/schemas/TimestampedObject1'
    CampaignCreation:
      allOf:
      - $ref: '#/components/schemas/CampaignBase'
      - $ref: '#/components/schemas/CampaignCreationData'
      required:
      - name
    CampaignMutation:
      allOf:
      - $ref: '#/components/schemas/CampaignBase'
    FractionOfTotal:
      description: |
        The fraction of events that fall within this object compared to the total of the
        category or segment (usually represented by the measurement's parent's parent).
        For example, if the measurement is "impression" on the `home_type` "Apartment" object,
        then the `fraction_of_total` represents the number of impressions on apartments compared
        to impressions from other `home_type` values.
      example: 0.17
      format: double
      maximum: 1
      minimum: 0
      type: number
    Measurement:
      description: Represents a single measurement
      properties:
        event:
          description: "The event that triggered the measurement, typically `impression`\
            \ or `click`"
          example: impression
          type: string
        count:
          description: "The real value of the measurement, typically a counter value\
            \ (integer)"
          type: integer
        fraction_of_total:
          description: |
            The fraction of events that fall within this object compared to the total of the
            category or segment (usually represented by the measurement's parent's parent).
            For example, if the measurement is "impression" on the `home_type` "Apartment" object,
            then the `fraction_of_total` represents the number of impressions on apartments compared
            to impressions from other `home_type` values.
          example: 0.17
          format: double
          maximum: 1
          minimum: 0
          type: number
        conversion_rate:
          description: |
            The rate of conversion to this measurement. Typically applies to measurements like
            "click" where it will represent the rate of impressions that turn into a click.
          example: 0.0053
          format: double
          maximum: 1
          minimum: 0
          type: number
      readOnly: true
      required:
      - event
      type: object
    MeasurementsContainer:
      description: An object containing measurements
      example:
        measurements:
        - event: impression
          count: 7280791
          fraction_of_total: 0.54
        - event: click
          count: 23522
          fraction_of_total: 0.5
          conversion_rate: 0.00323
      properties:
        measurements:
          description: Measurements related to this object
          example:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
      type: object
    Comparison:
      description: Represents a comparison of measurements with another source
      properties:
        name:
          description: The name of the comparison source
          example: Average Internet Population
          type: string
        code:
          description: The code of the comparison source
          example: aip
          type: string
        fraction_of_total:
          description: |
            The "fraction of total" value that is being compared with.
          example: 0.16
          format: double
          maximum: 1
          minimum: 0
          type: number
        index:
          description: |
            The comparison index where 100 means that the measurement is completely
            aligned with the compared metric. Values below 100 means that the measurement
            is below the compared metric, and values above 100 means that the measurement
            is above the compared metric.
          example: 97
          minimum: 0
          type: integer
      required:
      - code
      - fraction_of_total
      - index
      - name
      type: object
    ComparisonsContainer:
      description: An object containing comparisons
      properties:
        comparisons:
          items:
            $ref: '#/components/schemas/Comparison'
          type: array
      type: object
    AudienceCategoryStats:
      properties:
        audiences:
          items:
            $ref: '#/components/schemas/AudienceStats'
          type: array
      required:
      - audiences
      type: object
    AudienceStats:
      allOf:
      - properties:
          code:
            description: The code of the audience
            example: a1
            type: string
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
      - $ref: '#/components/schemas/ComparisonsContainer'
    BusinessAudienceStats:
      allOf:
      - properties:
          audience_categories:
            $ref: '#/components/schemas/BusinessAudienceStatsAudienceCategories'
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
      description: Measurements (overall and per audience) for traffic resolved as
        business users
      example:
        measurements:
        - event: impression
          count: 7280791
          fraction_of_total: 0.54
        - event: click
          count: 23522
          fraction_of_total: 0.5
          conversion_rate: 0.00323069292
        audience_categories:
          size:
            audiences:
            - code: ba1
              measurements:
              - event: impression
                count: 2877715
                fraction_of_total: 0.17
              - event: click
                count: 3917
                fraction_of_total: 0.17
                conversion_rate: 0.00136114938
            - code: ba2
              measurements:
              - event: impression
                count: 2962674
                fraction_of_total: 0.17
              - event: click
                count: 4016
                fraction_of_total: 0.17
                conversion_rate: 0.00135553219
            - code: ba3
              measurements:
              - event: impression
                count: 11181673
                fraction_of_total: 0.66
              - event: click
                count: 15589
                fraction_of_total: 0.66
                conversion_rate: 0.00139415631
    BusinessAudienceStatsAudienceCategories:
      properties:
        size:
          $ref: '#/components/schemas/AudienceCategoryStats'
      required:
      - size
      type: object
    PrivateAudienceStats:
      allOf:
      - properties:
          audience_categories:
            $ref: '#/components/schemas/PrivateAudienceStatsAudienceCategories'
        required:
        - audience_categories
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
      description: Measurements (overall and per audience) for traffic resolved as
        private users
      example:
        measurements:
        - event: impression
          count: 7327205
          fraction_of_total: 0.23
        - event: click
          count: 11024
          fraction_of_total: 0.23
          conversion_rate: 0.00150453
        audience_categories:
          home_type:
            audiences:
            - code: a1
              measurements:
              - event: impression
                count: 2401671
                fraction_of_total: 0.33
              - event: click
                count: 3449
                fraction_of_total: 0.31
                conversion_rate: 0.001436
              comparisons:
              - name: Average Internet Population
                code: aip
                compared_to: impression
                index: 90
                fraction_of_total: 0.41
            - code: a2
              measurements:
              - event: impression
                count: 4925534
                fraction_of_total: 0.67
              - event: click
                count: 7575
                fraction_of_total: 0.69
                conversion_rate: 0.0015379
              comparisons:
              - name: Average Internet Population
                code: aip
                compared_to: impression
                index: 104
                fraction_of_total: 0.59
          savings: {}
          lifecycle: {}
          cars: {}
          children: {}
          education: {}
          neighbourhood_type: {}
          income: {}
          home_ownership: {}
          building_age: {}
          living_space: {}
          tech_level: {}
    PrivateAudienceStatsAudienceCategories:
      properties:
        home_type:
          $ref: '#/components/schemas/AudienceCategoryStats'
        savings:
          $ref: '#/components/schemas/AudienceCategoryStats'
        lifecycle:
          $ref: '#/components/schemas/AudienceCategoryStats'
        cars:
          $ref: '#/components/schemas/AudienceCategoryStats'
        children:
          $ref: '#/components/schemas/AudienceCategoryStats'
        education:
          $ref: '#/components/schemas/AudienceCategoryStats'
        neighbourhood_type:
          $ref: '#/components/schemas/AudienceCategoryStats'
        income:
          $ref: '#/components/schemas/AudienceCategoryStats'
        home_ownership:
          $ref: '#/components/schemas/AudienceCategoryStats'
        building_age:
          $ref: '#/components/schemas/AudienceCategoryStats'
        living_space:
          $ref: '#/components/schemas/AudienceCategoryStats'
        tech_level:
          $ref: '#/components/schemas/AudienceCategoryStats'
      required:
      - building_age
      - cars
      - children
      - education
      - home_ownership
      - home_type
      - income
      - lifecycle
      - living_space
      - neighbourhood_type
      - savings
      - tech_level
      type: object
    CampaignAudienceStats:
      example:
        private:
          measurements:
          - event: impression
            count: 7327205
            fraction_of_total: 0.23
          - event: click
            count: 11024
            fraction_of_total: 0.23
            conversion_rate: 0.00150453
          audience_categories:
            home_type:
              audiences:
              - code: a1
                measurements:
                - event: impression
                  count: 2401671
                  fraction_of_total: 0.33
                - event: click
                  count: 3449
                  fraction_of_total: 0.31
                  conversion_rate: 0.001436
                comparisons:
                - name: Average Internet Population
                  code: aip
                  compared_to: impression
                  index: 90
                  fraction_of_total: 0.41
              - code: a2
                measurements:
                - event: impression
                  count: 4925534
                  fraction_of_total: 0.67
                - event: click
                  count: 7575
                  fraction_of_total: 0.69
                  conversion_rate: 0.0015379
                comparisons:
                - name: Average Internet Population
                  code: aip
                  compared_to: impression
                  index: 104
                  fraction_of_total: 0.59
            savings: {}
            lifecycle: {}
            cars: {}
            children: {}
            education: {}
            neighbourhood_type: {}
            income: {}
            home_ownership: {}
            building_age: {}
            living_space: {}
            tech_level: {}
        business:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323069292
          audience_categories:
            size:
              audiences:
              - code: ba1
                measurements:
                - event: impression
                  count: 2877715
                  fraction_of_total: 0.17
                - event: click
                  count: 3917
                  fraction_of_total: 0.17
                  conversion_rate: 0.00136114938
              - code: ba2
                measurements:
                - event: impression
                  count: 2962674
                  fraction_of_total: 0.17
                - event: click
                  count: 4016
                  fraction_of_total: 0.17
                  conversion_rate: 0.00135553219
              - code: ba3
                measurements:
                - event: impression
                  count: 11181673
                  fraction_of_total: 0.66
                - event: click
                  count: 15589
                  fraction_of_total: 0.66
                  conversion_rate: 0.00139415631
        not_resolved:
          measurements:
          - event: impression
            count: 7280791
            fraction_of_total: 0.54
          - event: click
            count: 23522
            fraction_of_total: 0.5
            conversion_rate: 0.00323
      properties:
        not_resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
        business:
          $ref: '#/components/schemas/BusinessAudienceStats'
        private:
          $ref: '#/components/schemas/PrivateAudienceStats'
      type: object
    CampaignCountryStats:
      example:
        predominant_country: DK
        countries:
        - code: DK
          measurements:
          - event: impression
            count: 201732
            fraction_of_total: 0.84
          - event: click
            count: 2017
            conversion_rate: 0.009998
        - code: SE
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.9
        - code: "NO"
          measurements:
          - event: impression
            count: 9606
            fraction_of_total: 0.4
        - code: DE
          measurements:
          - event: impression
            count: 4803
            fraction_of_total: 0.2
        - code: GB
          measurements:
          - event: impression
            count: 2402
            fraction_of_total: 0.1
        resolved:
          measurements:
          - event: impression
            count: 240157
            fraction_of_total: 0.68
          - event: click
            count: 4102
            fraction_of_total: 0.63
            conversion_rate: 0.01708049317
        not_resolved:
          measurements:
          - event: impression
            count: 112192
            fraction_of_total: 0.32
          - event: click
            count: 2402
            fraction_of_total: 0.37
            conversion_rate: 0.02140972618
      properties:
        predominant_country:
          description: The country code of the predominant country of the campaign
          type: string
        countries:
          description: A listing of each countries observed and the relevant measurements
            for each
          items:
            $ref: '#/components/schemas/CountryStats'
          type: array
        resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
        not_resolved:
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    CountryStats:
      allOf:
      - properties:
          code:
            description: Country code of the country
            example: DK
            type: string
        type: object
      - $ref: '#/components/schemas/MeasurementsContainer'
    CampaignTimingStats:
      example:
        day_of_month:
          "4":
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.32
            - event: click
              count: 1823
              fraction_of_total: 0.27
              conversion_rate: 0.08434348107
          "5":
            measurements:
            - event: impression
              count: 27329
              fraction_of_total: 0.4
            - event: click
              count: 2931
              fraction_of_total: 0.44
              conversion_rate: 0.10724871016
          "6":
            measurements:
            - event: impression
              count: 19329
              fraction_of_total: 0.28
            - event: click
              count: 1920
              fraction_of_total: 0.29
              conversion_rate: 0.09933260903
        hour_of_day:
          "10":
            measurements:
            - event: impression
              count: 19329
              fraction_of_total: 0.28
            - event: click
              count: 1920
              fraction_of_total: 0.29
              conversion_rate: 0.09933260903
          "08":
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.32
            - event: click
              count: 1823
              fraction_of_total: 0.27
              conversion_rate: 0.08434348107
          "09":
            measurements:
            - event: impression
              count: 27329
              fraction_of_total: 0.4
            - event: click
              count: 2931
              fraction_of_total: 0.44
              conversion_rate: 0.10724871016
        day_of_week:
          Tuesday:
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.32
            - event: click
              count: 1823
              fraction_of_total: 0.27
              conversion_rate: 0.08434348107
          Wednesday:
            measurements:
            - event: impression
              count: 27329
              fraction_of_total: 0.4
            - event: click
              count: 2931
              fraction_of_total: 0.44
              conversion_rate: 0.10724871016
          Thursday:
            measurements:
            - event: impression
              count: 19329
              fraction_of_total: 0.28
            - event: click
              count: 1920
              fraction_of_total: 0.29
              conversion_rate: 0.09933260903
      properties:
        hour_of_day:
          $ref: '#/components/schemas/HourOfDayStats'
        day_of_week:
          $ref: '#/components/schemas/DayOfWeekStats'
        day_of_month:
          $ref: '#/components/schemas/DayOfMonthStats'
      type: object
    HourOfDayStats:
      description: |
        Contains statistics about the time of day that campaign activity has been measured.
        The 24 hour time format is used to represent measurements for each hour.
        The time zone used to record these measurements is the time zone of the measured
        user, or UTC if the user's location cannot be resolved.
      example:
        "10":
          measurements:
          - event: impression
            count: 19329
            fraction_of_total: 0.28
          - event: click
            count: 1920
            fraction_of_total: 0.29
            conversion_rate: 0.09933260903
        "08":
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.32
          - event: click
            count: 1823
            fraction_of_total: 0.27
            conversion_rate: 0.08434348107
        "09":
          measurements:
          - event: impression
            count: 27329
            fraction_of_total: 0.4
          - event: click
            count: 2931
            fraction_of_total: 0.44
            conversion_rate: 0.10724871016
      properties:
        "10":
          $ref: '#/components/schemas/MeasurementsContainer'
        "11":
          $ref: '#/components/schemas/MeasurementsContainer'
        "12":
          $ref: '#/components/schemas/MeasurementsContainer'
        "13":
          $ref: '#/components/schemas/MeasurementsContainer'
        "14":
          $ref: '#/components/schemas/MeasurementsContainer'
        "15":
          $ref: '#/components/schemas/MeasurementsContainer'
        "16":
          $ref: '#/components/schemas/MeasurementsContainer'
        "17":
          $ref: '#/components/schemas/MeasurementsContainer'
        "18":
          $ref: '#/components/schemas/MeasurementsContainer'
        "19":
          $ref: '#/components/schemas/MeasurementsContainer'
        "20":
          $ref: '#/components/schemas/MeasurementsContainer'
        "21":
          $ref: '#/components/schemas/MeasurementsContainer'
        "22":
          $ref: '#/components/schemas/MeasurementsContainer'
        "23":
          $ref: '#/components/schemas/MeasurementsContainer'
        "00":
          $ref: '#/components/schemas/MeasurementsContainer'
        "01":
          $ref: '#/components/schemas/MeasurementsContainer'
        "02":
          $ref: '#/components/schemas/MeasurementsContainer'
        "03":
          $ref: '#/components/schemas/MeasurementsContainer'
        "04":
          $ref: '#/components/schemas/MeasurementsContainer'
        "05":
          $ref: '#/components/schemas/MeasurementsContainer'
        "06":
          $ref: '#/components/schemas/MeasurementsContainer'
        "07":
          $ref: '#/components/schemas/MeasurementsContainer'
        "08":
          $ref: '#/components/schemas/MeasurementsContainer'
        "09":
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    DayOfWeekStats:
      description: |
        Contains statistics about the week days that campaign activity has been measured.
        The time zone used to record these measurements is the time zone of the measured
        user, or UTC if the user's location cannot be resolved.
      example:
        Tuesday:
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.32
          - event: click
            count: 1823
            fraction_of_total: 0.27
            conversion_rate: 0.08434348107
        Wednesday:
          measurements:
          - event: impression
            count: 27329
            fraction_of_total: 0.4
          - event: click
            count: 2931
            fraction_of_total: 0.44
            conversion_rate: 0.10724871016
        Thursday:
          measurements:
          - event: impression
            count: 19329
            fraction_of_total: 0.28
          - event: click
            count: 1920
            fraction_of_total: 0.29
            conversion_rate: 0.09933260903
      properties:
        Monday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Tuesday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Wednesday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Thursday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Friday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Saturday:
          $ref: '#/components/schemas/MeasurementsContainer'
        Sunday:
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    DayOfMonthStats:
      description: |
        Contains statistics about the day of the month that campaign activity has been measured.
        The time zone used to record these measurements is the time zone of the measured
        user, or UTC if the user's location cannot be resolved.
      example:
        "4":
          measurements:
          - event: impression
            count: 21614
            fraction_of_total: 0.32
          - event: click
            count: 1823
            fraction_of_total: 0.27
            conversion_rate: 0.08434348107
        "5":
          measurements:
          - event: impression
            count: 27329
            fraction_of_total: 0.4
          - event: click
            count: 2931
            fraction_of_total: 0.44
            conversion_rate: 0.10724871016
        "6":
          measurements:
          - event: impression
            count: 19329
            fraction_of_total: 0.28
          - event: click
            count: 1920
            fraction_of_total: 0.29
            conversion_rate: 0.09933260903
      properties:
        "0":
          $ref: '#/components/schemas/MeasurementsContainer'
        "1":
          $ref: '#/components/schemas/MeasurementsContainer'
        "2":
          $ref: '#/components/schemas/MeasurementsContainer'
        "3":
          $ref: '#/components/schemas/MeasurementsContainer'
        "4":
          $ref: '#/components/schemas/MeasurementsContainer'
        "5":
          $ref: '#/components/schemas/MeasurementsContainer'
        "6":
          $ref: '#/components/schemas/MeasurementsContainer'
        "7":
          $ref: '#/components/schemas/MeasurementsContainer'
        "8":
          $ref: '#/components/schemas/MeasurementsContainer'
        "9":
          $ref: '#/components/schemas/MeasurementsContainer'
        "10":
          $ref: '#/components/schemas/MeasurementsContainer'
        "11":
          $ref: '#/components/schemas/MeasurementsContainer'
        "12":
          $ref: '#/components/schemas/MeasurementsContainer'
        "13":
          $ref: '#/components/schemas/MeasurementsContainer'
        "14":
          $ref: '#/components/schemas/MeasurementsContainer'
        "15":
          $ref: '#/components/schemas/MeasurementsContainer'
        "16":
          $ref: '#/components/schemas/MeasurementsContainer'
        "17":
          $ref: '#/components/schemas/MeasurementsContainer'
        "18":
          $ref: '#/components/schemas/MeasurementsContainer'
        "19":
          $ref: '#/components/schemas/MeasurementsContainer'
        "20":
          $ref: '#/components/schemas/MeasurementsContainer'
        "21":
          $ref: '#/components/schemas/MeasurementsContainer'
        "22":
          $ref: '#/components/schemas/MeasurementsContainer'
        "23":
          $ref: '#/components/schemas/MeasurementsContainer'
        "24":
          $ref: '#/components/schemas/MeasurementsContainer'
        "25":
          $ref: '#/components/schemas/MeasurementsContainer'
        "26":
          $ref: '#/components/schemas/MeasurementsContainer'
        "27":
          $ref: '#/components/schemas/MeasurementsContainer'
        "28":
          $ref: '#/components/schemas/MeasurementsContainer'
        "29":
          $ref: '#/components/schemas/MeasurementsContainer'
        "30":
          $ref: '#/components/schemas/MeasurementsContainer'
        "31":
          $ref: '#/components/schemas/MeasurementsContainer'
      type: object
    CampaignFrequencyStats:
      example:
        frequencies:
        - frequency: 1
          count: 4327843
        - frequency: 2
          count: 1337207
        - frequency: 3
          count: 38447
        - frequency: 4
          count: 4383
        - frequency: 5
          count: 1238
        count_above_cap: 27
      properties:
        average_frequency:
          description: |
            The average frequency of impressions per user
          type: number
        frequencies:
          description: |
            A listing of each frequency observed and the relevant measurements for each
          items:
            $ref: '#/components/schemas/FrequencyStats'
          type: array
        count_above_cap:
          description: |
            The number of users that have generated impressions at a frequency value greater
            than those represented in `frequencies`.
          type: integer
      type: object
    FrequencyStats:
      properties:
        frequency:
          description: |
            A frequency of campaign impressions to users.
            * The value 1 means that the campaign has been exposed just once.
            * The value 2 means that the campaign has been exposed twice.
            * And so on...
          type: integer
        count:
          description: The number of users that have generated impressions at the
            corresponding frequency
          type: integer
      type: object
    getAccountById_200_response:
      example:
        data: null
        links:
          users: /accounts/4k3jKJ9D12kj0S4c/users
      properties:
        data:
          $ref: '#/components/schemas/AccountFull'
        links:
          $ref: '#/components/schemas/AccountLinks'
      type: object
    getUsersByAccountId_200_response:
      example:
        data:
        - null
        - null
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
        data:
          items:
            $ref: '#/components/schemas/UserItem'
          type: array
      type: object
    createUserInAccount_201_response:
      example:
        data: null
        links:
          apikeys: /users/4k3jKJ9D12kj0S4c/apikeys
          account: /accounts/4k3jKJ9D12kj0S4c
      properties:
        data:
          $ref: '#/components/schemas/UserFull'
        links:
          $ref: '#/components/schemas/UserLinks'
      type: object
    getApiKeysByUserId_200_response:
      example:
        data:
        - null
        - null
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
        data:
          items:
            $ref: '#/components/schemas/ApiKeyItem'
          type: array
      type: object
    createApiKey_201_response:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyFullWithToken'
      type: object
    getApiKeyById_200_response:
      example:
        data: null
        links:
          user: /user/4k3jKJ9D12kj0S4c
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyFull'
        links:
          $ref: '#/components/schemas/ApiKeyLinks'
      type: object
    listCampaigns_200_response:
      example:
        data:
        - null
        - null
        meta:
          page:
            first_cursor: first_cursor
            total: 238
            last_cursor: last_cursor
        links:
          next: /path/to/next_page
          first: /path/to/first_page
      properties:
        meta:
          $ref: '#/components/schemas/ListPaginationMeta'
        data:
          items:
            $ref: '#/components/schemas/CampaignItem'
          type: array
        links:
          $ref: '#/components/schemas/ListPaginationLinks'
      type: object
    createCampaign_201_response:
      example:
        data: null
        links:
          stats_timing: /campaigns/2c9jKJ9D12kj0S4c/stats/timing
          stats_frequencies: /campaigns/2c9jKJ9D12kj0S4c/stats/frequencies
          stats_countries: /campaigns/2c9jKJ9D12kj0S4c/stats/countries
          stats_audiences: /campaigns/2c9jKJ9D12kj0S4c/stats/audiences
      properties:
        data:
          $ref: '#/components/schemas/CampaignFull'
        links:
          $ref: '#/components/schemas/CampaignLinks'
      type: object
    queryCampaignAudienceStats_200_response:
      example:
        data:
          private:
            measurements:
            - event: impression
              count: 7327205
              fraction_of_total: 0.23
            - event: click
              count: 11024
              fraction_of_total: 0.23
              conversion_rate: 0.00150453
            audience_categories:
              home_type:
                audiences:
                - code: a1
                  measurements:
                  - event: impression
                    count: 2401671
                    fraction_of_total: 0.33
                  - event: click
                    count: 3449
                    fraction_of_total: 0.31
                    conversion_rate: 0.001436
                  comparisons:
                  - name: Average Internet Population
                    code: aip
                    compared_to: impression
                    index: 90
                    fraction_of_total: 0.41
                - code: a2
                  measurements:
                  - event: impression
                    count: 4925534
                    fraction_of_total: 0.67
                  - event: click
                    count: 7575
                    fraction_of_total: 0.69
                    conversion_rate: 0.0015379
                  comparisons:
                  - name: Average Internet Population
                    code: aip
                    compared_to: impression
                    index: 104
                    fraction_of_total: 0.59
              savings: {}
              lifecycle: {}
              cars: {}
              children: {}
              education: {}
              neighbourhood_type: {}
              income: {}
              home_ownership: {}
              building_age: {}
              living_space: {}
              tech_level: {}
          business:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323069292
            audience_categories:
              size:
                audiences:
                - code: ba1
                  measurements:
                  - event: impression
                    count: 2877715
                    fraction_of_total: 0.17
                  - event: click
                    count: 3917
                    fraction_of_total: 0.17
                    conversion_rate: 0.00136114938
                - code: ba2
                  measurements:
                  - event: impression
                    count: 2962674
                    fraction_of_total: 0.17
                  - event: click
                    count: 4016
                    fraction_of_total: 0.17
                    conversion_rate: 0.00135553219
                - code: ba3
                  measurements:
                  - event: impression
                    count: 11181673
                    fraction_of_total: 0.66
                  - event: click
                    count: 15589
                    fraction_of_total: 0.66
                    conversion_rate: 0.00139415631
          not_resolved:
            measurements:
            - event: impression
              count: 7280791
              fraction_of_total: 0.54
            - event: click
              count: 23522
              fraction_of_total: 0.5
              conversion_rate: 0.00323
      properties:
        data:
          $ref: '#/components/schemas/CampaignAudienceStats'
      type: object
    queryCampaignCountryStats_200_response:
      example:
        data:
          predominant_country: DK
          countries:
          - code: DK
            measurements:
            - event: impression
              count: 201732
              fraction_of_total: 0.84
            - event: click
              count: 2017
              conversion_rate: 0.009998
          - code: SE
            measurements:
            - event: impression
              count: 21614
              fraction_of_total: 0.9
          - code: "NO"
            measurements:
            - event: impression
              count: 9606
              fraction_of_total: 0.4
          - code: DE
            measurements:
            - event: impression
              count: 4803
              fraction_of_total: 0.2
          - code: GB
            measurements:
            - event: impression
              count: 2402
              fraction_of_total: 0.1
          resolved:
            measurements:
            - event: impression
              count: 240157
              fraction_of_total: 0.68
            - event: click
              count: 4102
              fraction_of_total: 0.63
              conversion_rate: 0.01708049317
          not_resolved:
            measurements:
            - event: impression
              count: 112192
              fraction_of_total: 0.32
            - event: click
              count: 2402
              fraction_of_total: 0.37
              conversion_rate: 0.02140972618
      properties:
        data:
          $ref: '#/components/schemas/CampaignCountryStats'
      type: object
    queryCampaignTimingStats_200_response:
      example:
        data:
          day_of_month:
            "4":
              measurements:
              - event: impression
                count: 21614
                fraction_of_total: 0.32
              - event: click
                count: 1823
                fraction_of_total: 0.27
                conversion_rate: 0.08434348107
            "5":
              measurements:
              - event: impression
                count: 27329
                fraction_of_total: 0.4
              - event: click
                count: 2931
                fraction_of_total: 0.44
                conversion_rate: 0.10724871016
            "6":
              measurements:
              - event: impression
                count: 19329
                fraction_of_total: 0.28
              - event: click
                count: 1920
                fraction_of_total: 0.29
                conversion_rate: 0.09933260903
          hour_of_day:
            "10":
              measurements:
              - event: impression
                count: 19329
                fraction_of_total: 0.28
              - event: click
                count: 1920
                fraction_of_total: 0.29
                conversion_rate: 0.09933260903
            "08":
              measurements:
              - event: impression
                count: 21614
                fraction_of_total: 0.32
              - event: click
                count: 1823
                fraction_of_total: 0.27
                conversion_rate: 0.08434348107
            "09":
              measurements:
              - event: impression
                count: 27329
                fraction_of_total: 0.4
              - event: click
                count: 2931
                fraction_of_total: 0.44
                conversion_rate: 0.10724871016
          day_of_week:
            Tuesday:
              measurements:
              - event: impression
                count: 21614
                fraction_of_total: 0.32
              - event: click
                count: 1823
                fraction_of_total: 0.27
                conversion_rate: 0.08434348107
            Wednesday:
              measurements:
              - event: impression
                count: 27329
                fraction_of_total: 0.4
              - event: click
                count: 2931
                fraction_of_total: 0.44
                conversion_rate: 0.10724871016
            Thursday:
              measurements:
              - event: impression
                count: 19329
                fraction_of_total: 0.28
              - event: click
                count: 1920
                fraction_of_total: 0.29
                conversion_rate: 0.09933260903
      properties:
        data:
          $ref: '#/components/schemas/CampaignTimingStats'
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    apiKeyHeaderAuth:
      in: header
      name: X-API-KEY
      type: apiKey
    apiKeyQueryParamAuth:
      in: query
      name: api_key
      type: apiKey
    oAuth:
      flows:
        password:
          refreshUrl: /auth/token
          scopes: {}
          tokenUrl: /auth/token
      type: oauth2
x-tagGroups:
- name: Segmentation
  tags:
  - auth
  - audiences
  - campaigns
- name: Administration
  tags:
  - users
  - accounts
