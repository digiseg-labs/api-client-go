/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountSubscriptionPaymentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountSubscriptionPaymentConfiguration{}

// AccountSubscriptionPaymentConfiguration Describes the payment configuration of an account subscription
type AccountSubscriptionPaymentConfiguration struct {
	Platform string `json:"platform"`
	// Is the subscription pre-paid or post-paid?
	Timing string `json:"timing"`
	StripeSubscriptionId *string `json:"stripe_subscription_id,omitempty"`
	StripeSubscriptionItemId *string `json:"stripe_subscription_item_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountSubscriptionPaymentConfiguration AccountSubscriptionPaymentConfiguration

// NewAccountSubscriptionPaymentConfiguration instantiates a new AccountSubscriptionPaymentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSubscriptionPaymentConfiguration(platform string, timing string) *AccountSubscriptionPaymentConfiguration {
	this := AccountSubscriptionPaymentConfiguration{}
	this.Platform = platform
	this.Timing = timing
	return &this
}

// NewAccountSubscriptionPaymentConfigurationWithDefaults instantiates a new AccountSubscriptionPaymentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSubscriptionPaymentConfigurationWithDefaults() *AccountSubscriptionPaymentConfiguration {
	this := AccountSubscriptionPaymentConfiguration{}
	return &this
}

// GetPlatform returns the Platform field value
func (o *AccountSubscriptionPaymentConfiguration) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *AccountSubscriptionPaymentConfiguration) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *AccountSubscriptionPaymentConfiguration) SetPlatform(v string) {
	o.Platform = v
}

// GetTiming returns the Timing field value
func (o *AccountSubscriptionPaymentConfiguration) GetTiming() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timing
}

// GetTimingOk returns a tuple with the Timing field value
// and a boolean to check if the value has been set.
func (o *AccountSubscriptionPaymentConfiguration) GetTimingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timing, true
}

// SetTiming sets field value
func (o *AccountSubscriptionPaymentConfiguration) SetTiming(v string) {
	o.Timing = v
}

// GetStripeSubscriptionId returns the StripeSubscriptionId field value if set, zero value otherwise.
func (o *AccountSubscriptionPaymentConfiguration) GetStripeSubscriptionId() string {
	if o == nil || IsNil(o.StripeSubscriptionId) {
		var ret string
		return ret
	}
	return *o.StripeSubscriptionId
}

// GetStripeSubscriptionIdOk returns a tuple with the StripeSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSubscriptionPaymentConfiguration) GetStripeSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeSubscriptionId) {
		return nil, false
	}
	return o.StripeSubscriptionId, true
}

// HasStripeSubscriptionId returns a boolean if a field has been set.
func (o *AccountSubscriptionPaymentConfiguration) HasStripeSubscriptionId() bool {
	if o != nil && !IsNil(o.StripeSubscriptionId) {
		return true
	}

	return false
}

// SetStripeSubscriptionId gets a reference to the given string and assigns it to the StripeSubscriptionId field.
func (o *AccountSubscriptionPaymentConfiguration) SetStripeSubscriptionId(v string) {
	o.StripeSubscriptionId = &v
}

// GetStripeSubscriptionItemId returns the StripeSubscriptionItemId field value if set, zero value otherwise.
func (o *AccountSubscriptionPaymentConfiguration) GetStripeSubscriptionItemId() string {
	if o == nil || IsNil(o.StripeSubscriptionItemId) {
		var ret string
		return ret
	}
	return *o.StripeSubscriptionItemId
}

// GetStripeSubscriptionItemIdOk returns a tuple with the StripeSubscriptionItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountSubscriptionPaymentConfiguration) GetStripeSubscriptionItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeSubscriptionItemId) {
		return nil, false
	}
	return o.StripeSubscriptionItemId, true
}

// HasStripeSubscriptionItemId returns a boolean if a field has been set.
func (o *AccountSubscriptionPaymentConfiguration) HasStripeSubscriptionItemId() bool {
	if o != nil && !IsNil(o.StripeSubscriptionItemId) {
		return true
	}

	return false
}

// SetStripeSubscriptionItemId gets a reference to the given string and assigns it to the StripeSubscriptionItemId field.
func (o *AccountSubscriptionPaymentConfiguration) SetStripeSubscriptionItemId(v string) {
	o.StripeSubscriptionItemId = &v
}

func (o AccountSubscriptionPaymentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountSubscriptionPaymentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["platform"] = o.Platform
	toSerialize["timing"] = o.Timing
	if !IsNil(o.StripeSubscriptionId) {
		toSerialize["stripe_subscription_id"] = o.StripeSubscriptionId
	}
	if !IsNil(o.StripeSubscriptionItemId) {
		toSerialize["stripe_subscription_item_id"] = o.StripeSubscriptionItemId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountSubscriptionPaymentConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"platform",
		"timing",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountSubscriptionPaymentConfiguration := _AccountSubscriptionPaymentConfiguration{}

	err = json.Unmarshal(data, &varAccountSubscriptionPaymentConfiguration)

	if err != nil {
		return err
	}

	*o = AccountSubscriptionPaymentConfiguration(varAccountSubscriptionPaymentConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "platform")
		delete(additionalProperties, "timing")
		delete(additionalProperties, "stripe_subscription_id")
		delete(additionalProperties, "stripe_subscription_item_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountSubscriptionPaymentConfiguration struct {
	value *AccountSubscriptionPaymentConfiguration
	isSet bool
}

func (v NullableAccountSubscriptionPaymentConfiguration) Get() *AccountSubscriptionPaymentConfiguration {
	return v.value
}

func (v *NullableAccountSubscriptionPaymentConfiguration) Set(val *AccountSubscriptionPaymentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSubscriptionPaymentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSubscriptionPaymentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSubscriptionPaymentConfiguration(val *AccountSubscriptionPaymentConfiguration) *NullableAccountSubscriptionPaymentConfiguration {
	return &NullableAccountSubscriptionPaymentConfiguration{value: val, isSet: true}
}

func (v NullableAccountSubscriptionPaymentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSubscriptionPaymentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


