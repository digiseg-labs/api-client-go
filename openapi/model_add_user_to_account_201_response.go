/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddUserToAccount201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUserToAccount201Response{}

// AddUserToAccount201Response struct for AddUserToAccount201Response
type AddUserToAccount201Response struct {
	Data *UserFull `json:"data,omitempty"`
	Links *UserLinks `json:"links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AddUserToAccount201Response AddUserToAccount201Response

// NewAddUserToAccount201Response instantiates a new AddUserToAccount201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUserToAccount201Response() *AddUserToAccount201Response {
	this := AddUserToAccount201Response{}
	return &this
}

// NewAddUserToAccount201ResponseWithDefaults instantiates a new AddUserToAccount201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUserToAccount201ResponseWithDefaults() *AddUserToAccount201Response {
	this := AddUserToAccount201Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AddUserToAccount201Response) GetData() UserFull {
	if o == nil || IsNil(o.Data) {
		var ret UserFull
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserToAccount201Response) GetDataOk() (*UserFull, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AddUserToAccount201Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given UserFull and assigns it to the Data field.
func (o *AddUserToAccount201Response) SetData(v UserFull) {
	o.Data = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AddUserToAccount201Response) GetLinks() UserLinks {
	if o == nil || IsNil(o.Links) {
		var ret UserLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUserToAccount201Response) GetLinksOk() (*UserLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AddUserToAccount201Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given UserLinks and assigns it to the Links field.
func (o *AddUserToAccount201Response) SetLinks(v UserLinks) {
	o.Links = &v
}

func (o AddUserToAccount201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUserToAccount201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddUserToAccount201Response) UnmarshalJSON(data []byte) (err error) {
	varAddUserToAccount201Response := _AddUserToAccount201Response{}

	err = json.Unmarshal(data, &varAddUserToAccount201Response)

	if err != nil {
		return err
	}

	*o = AddUserToAccount201Response(varAddUserToAccount201Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddUserToAccount201Response struct {
	value *AddUserToAccount201Response
	isSet bool
}

func (v NullableAddUserToAccount201Response) Get() *AddUserToAccount201Response {
	return v.value
}

func (v *NullableAddUserToAccount201Response) Set(val *AddUserToAccount201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUserToAccount201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUserToAccount201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUserToAccount201Response(val *AddUserToAccount201Response) *NullableAddUserToAccount201Response {
	return &NullableAddUserToAccount201Response{value: val, isSet: true}
}

func (v NullableAddUserToAccount201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUserToAccount201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


