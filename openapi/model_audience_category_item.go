/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AudienceCategoryItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceCategoryItem{}

// AudienceCategoryItem struct for AudienceCategoryItem
type AudienceCategoryItem struct {
	// A code used to represent the audience category
	Code string `json:"code"`
	DisplayName string `json:"display_name"`
	Audiences []AudienceItem `json:"audiences"`
	AdditionalProperties map[string]interface{}
}

type _AudienceCategoryItem AudienceCategoryItem

// NewAudienceCategoryItem instantiates a new AudienceCategoryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceCategoryItem(code string, displayName string, audiences []AudienceItem) *AudienceCategoryItem {
	this := AudienceCategoryItem{}
	this.Code = code
	this.DisplayName = displayName
	this.Audiences = audiences
	return &this
}

// NewAudienceCategoryItemWithDefaults instantiates a new AudienceCategoryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceCategoryItemWithDefaults() *AudienceCategoryItem {
	this := AudienceCategoryItem{}
	return &this
}

// GetCode returns the Code field value
func (o *AudienceCategoryItem) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AudienceCategoryItem) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AudienceCategoryItem) SetCode(v string) {
	o.Code = v
}

// GetDisplayName returns the DisplayName field value
func (o *AudienceCategoryItem) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AudienceCategoryItem) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AudienceCategoryItem) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetAudiences returns the Audiences field value
func (o *AudienceCategoryItem) GetAudiences() []AudienceItem {
	if o == nil {
		var ret []AudienceItem
		return ret
	}

	return o.Audiences
}

// GetAudiencesOk returns a tuple with the Audiences field value
// and a boolean to check if the value has been set.
func (o *AudienceCategoryItem) GetAudiencesOk() ([]AudienceItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Audiences, true
}

// SetAudiences sets field value
func (o *AudienceCategoryItem) SetAudiences(v []AudienceItem) {
	o.Audiences = v
}

func (o AudienceCategoryItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceCategoryItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["display_name"] = o.DisplayName
	toSerialize["audiences"] = o.Audiences

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AudienceCategoryItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"display_name",
		"audiences",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAudienceCategoryItem := _AudienceCategoryItem{}

	err = json.Unmarshal(data, &varAudienceCategoryItem)

	if err != nil {
		return err
	}

	*o = AudienceCategoryItem(varAudienceCategoryItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "display_name")
		delete(additionalProperties, "audiences")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAudienceCategoryItem struct {
	value *AudienceCategoryItem
	isSet bool
}

func (v NullableAudienceCategoryItem) Get() *AudienceCategoryItem {
	return v.value
}

func (v *NullableAudienceCategoryItem) Set(val *AudienceCategoryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceCategoryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceCategoryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceCategoryItem(val *AudienceCategoryItem) *NullableAudienceCategoryItem {
	return &NullableAudienceCategoryItem{value: val, isSet: true}
}

func (v NullableAudienceCategoryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceCategoryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


