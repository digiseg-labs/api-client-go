/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AudienceReachStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceReachStats{}

// AudienceReachStats Reach statistics for an audience in a particular country
type AudienceReachStats struct {
	// A measure of accuracy, ie. the amount of in-target reach (as opposed to excess reach) of the audience.
	InTargetReach *float32 `json:"in_target_reach,omitempty"`
	NumHouseholds *int32 `json:"num_households,omitempty"`
	NumPersons *int32 `json:"num_persons,omitempty"`
	NumDevices *int32 `json:"num_devices,omitempty"`
	NumDailyImpressions *int32 `json:"num_daily_impressions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AudienceReachStats AudienceReachStats

// NewAudienceReachStats instantiates a new AudienceReachStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceReachStats() *AudienceReachStats {
	this := AudienceReachStats{}
	return &this
}

// NewAudienceReachStatsWithDefaults instantiates a new AudienceReachStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceReachStatsWithDefaults() *AudienceReachStats {
	this := AudienceReachStats{}
	return &this
}

// GetInTargetReach returns the InTargetReach field value if set, zero value otherwise.
func (o *AudienceReachStats) GetInTargetReach() float32 {
	if o == nil || IsNil(o.InTargetReach) {
		var ret float32
		return ret
	}
	return *o.InTargetReach
}

// GetInTargetReachOk returns a tuple with the InTargetReach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceReachStats) GetInTargetReachOk() (*float32, bool) {
	if o == nil || IsNil(o.InTargetReach) {
		return nil, false
	}
	return o.InTargetReach, true
}

// HasInTargetReach returns a boolean if a field has been set.
func (o *AudienceReachStats) HasInTargetReach() bool {
	if o != nil && !IsNil(o.InTargetReach) {
		return true
	}

	return false
}

// SetInTargetReach gets a reference to the given float32 and assigns it to the InTargetReach field.
func (o *AudienceReachStats) SetInTargetReach(v float32) {
	o.InTargetReach = &v
}

// GetNumHouseholds returns the NumHouseholds field value if set, zero value otherwise.
func (o *AudienceReachStats) GetNumHouseholds() int32 {
	if o == nil || IsNil(o.NumHouseholds) {
		var ret int32
		return ret
	}
	return *o.NumHouseholds
}

// GetNumHouseholdsOk returns a tuple with the NumHouseholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceReachStats) GetNumHouseholdsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumHouseholds) {
		return nil, false
	}
	return o.NumHouseholds, true
}

// HasNumHouseholds returns a boolean if a field has been set.
func (o *AudienceReachStats) HasNumHouseholds() bool {
	if o != nil && !IsNil(o.NumHouseholds) {
		return true
	}

	return false
}

// SetNumHouseholds gets a reference to the given int32 and assigns it to the NumHouseholds field.
func (o *AudienceReachStats) SetNumHouseholds(v int32) {
	o.NumHouseholds = &v
}

// GetNumPersons returns the NumPersons field value if set, zero value otherwise.
func (o *AudienceReachStats) GetNumPersons() int32 {
	if o == nil || IsNil(o.NumPersons) {
		var ret int32
		return ret
	}
	return *o.NumPersons
}

// GetNumPersonsOk returns a tuple with the NumPersons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceReachStats) GetNumPersonsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumPersons) {
		return nil, false
	}
	return o.NumPersons, true
}

// HasNumPersons returns a boolean if a field has been set.
func (o *AudienceReachStats) HasNumPersons() bool {
	if o != nil && !IsNil(o.NumPersons) {
		return true
	}

	return false
}

// SetNumPersons gets a reference to the given int32 and assigns it to the NumPersons field.
func (o *AudienceReachStats) SetNumPersons(v int32) {
	o.NumPersons = &v
}

// GetNumDevices returns the NumDevices field value if set, zero value otherwise.
func (o *AudienceReachStats) GetNumDevices() int32 {
	if o == nil || IsNil(o.NumDevices) {
		var ret int32
		return ret
	}
	return *o.NumDevices
}

// GetNumDevicesOk returns a tuple with the NumDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceReachStats) GetNumDevicesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumDevices) {
		return nil, false
	}
	return o.NumDevices, true
}

// HasNumDevices returns a boolean if a field has been set.
func (o *AudienceReachStats) HasNumDevices() bool {
	if o != nil && !IsNil(o.NumDevices) {
		return true
	}

	return false
}

// SetNumDevices gets a reference to the given int32 and assigns it to the NumDevices field.
func (o *AudienceReachStats) SetNumDevices(v int32) {
	o.NumDevices = &v
}

// GetNumDailyImpressions returns the NumDailyImpressions field value if set, zero value otherwise.
func (o *AudienceReachStats) GetNumDailyImpressions() int32 {
	if o == nil || IsNil(o.NumDailyImpressions) {
		var ret int32
		return ret
	}
	return *o.NumDailyImpressions
}

// GetNumDailyImpressionsOk returns a tuple with the NumDailyImpressions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceReachStats) GetNumDailyImpressionsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumDailyImpressions) {
		return nil, false
	}
	return o.NumDailyImpressions, true
}

// HasNumDailyImpressions returns a boolean if a field has been set.
func (o *AudienceReachStats) HasNumDailyImpressions() bool {
	if o != nil && !IsNil(o.NumDailyImpressions) {
		return true
	}

	return false
}

// SetNumDailyImpressions gets a reference to the given int32 and assigns it to the NumDailyImpressions field.
func (o *AudienceReachStats) SetNumDailyImpressions(v int32) {
	o.NumDailyImpressions = &v
}

func (o AudienceReachStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceReachStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InTargetReach) {
		toSerialize["in_target_reach"] = o.InTargetReach
	}
	if !IsNil(o.NumHouseholds) {
		toSerialize["num_households"] = o.NumHouseholds
	}
	if !IsNil(o.NumPersons) {
		toSerialize["num_persons"] = o.NumPersons
	}
	if !IsNil(o.NumDevices) {
		toSerialize["num_devices"] = o.NumDevices
	}
	if !IsNil(o.NumDailyImpressions) {
		toSerialize["num_daily_impressions"] = o.NumDailyImpressions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AudienceReachStats) UnmarshalJSON(data []byte) (err error) {
	varAudienceReachStats := _AudienceReachStats{}

	err = json.Unmarshal(data, &varAudienceReachStats)

	if err != nil {
		return err
	}

	*o = AudienceReachStats(varAudienceReachStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "in_target_reach")
		delete(additionalProperties, "num_households")
		delete(additionalProperties, "num_persons")
		delete(additionalProperties, "num_devices")
		delete(additionalProperties, "num_daily_impressions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAudienceReachStats struct {
	value *AudienceReachStats
	isSet bool
}

func (v NullableAudienceReachStats) Get() *AudienceReachStats {
	return v.value
}

func (v *NullableAudienceReachStats) Set(val *AudienceReachStats) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceReachStats) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceReachStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceReachStats(val *AudienceReachStats) *NullableAudienceReachStats {
	return &NullableAudienceReachStats{value: val, isSet: true}
}

func (v NullableAudienceReachStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceReachStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


