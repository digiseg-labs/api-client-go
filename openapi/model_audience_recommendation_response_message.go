/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AudienceRecommendationResponseMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceRecommendationResponseMessage{}

// AudienceRecommendationResponseMessage A service response message in an audience recommendation conversation. A response will always contain a `message_text`, and may also contain `recommendations`.
type AudienceRecommendationResponseMessage struct {
	// The ID of the conversation that this message pertains to.
	ConversationId string `json:"conversation_id"`
	// The text message sent back to the audience recommendation conversation.
	MessageText string `json:"message_text"`
	Recommendations []AudienceRecommendationRecommendationItem `json:"recommendations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AudienceRecommendationResponseMessage AudienceRecommendationResponseMessage

// NewAudienceRecommendationResponseMessage instantiates a new AudienceRecommendationResponseMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceRecommendationResponseMessage(conversationId string, messageText string) *AudienceRecommendationResponseMessage {
	this := AudienceRecommendationResponseMessage{}
	this.ConversationId = conversationId
	this.MessageText = messageText
	return &this
}

// NewAudienceRecommendationResponseMessageWithDefaults instantiates a new AudienceRecommendationResponseMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceRecommendationResponseMessageWithDefaults() *AudienceRecommendationResponseMessage {
	this := AudienceRecommendationResponseMessage{}
	return &this
}

// GetConversationId returns the ConversationId field value
func (o *AudienceRecommendationResponseMessage) GetConversationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value
// and a boolean to check if the value has been set.
func (o *AudienceRecommendationResponseMessage) GetConversationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConversationId, true
}

// SetConversationId sets field value
func (o *AudienceRecommendationResponseMessage) SetConversationId(v string) {
	o.ConversationId = v
}

// GetMessageText returns the MessageText field value
func (o *AudienceRecommendationResponseMessage) GetMessageText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageText
}

// GetMessageTextOk returns a tuple with the MessageText field value
// and a boolean to check if the value has been set.
func (o *AudienceRecommendationResponseMessage) GetMessageTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageText, true
}

// SetMessageText sets field value
func (o *AudienceRecommendationResponseMessage) SetMessageText(v string) {
	o.MessageText = v
}

// GetRecommendations returns the Recommendations field value if set, zero value otherwise.
func (o *AudienceRecommendationResponseMessage) GetRecommendations() []AudienceRecommendationRecommendationItem {
	if o == nil || IsNil(o.Recommendations) {
		var ret []AudienceRecommendationRecommendationItem
		return ret
	}
	return o.Recommendations
}

// GetRecommendationsOk returns a tuple with the Recommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceRecommendationResponseMessage) GetRecommendationsOk() ([]AudienceRecommendationRecommendationItem, bool) {
	if o == nil || IsNil(o.Recommendations) {
		return nil, false
	}
	return o.Recommendations, true
}

// HasRecommendations returns a boolean if a field has been set.
func (o *AudienceRecommendationResponseMessage) HasRecommendations() bool {
	if o != nil && !IsNil(o.Recommendations) {
		return true
	}

	return false
}

// SetRecommendations gets a reference to the given []AudienceRecommendationRecommendationItem and assigns it to the Recommendations field.
func (o *AudienceRecommendationResponseMessage) SetRecommendations(v []AudienceRecommendationRecommendationItem) {
	o.Recommendations = v
}

func (o AudienceRecommendationResponseMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceRecommendationResponseMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conversation_id"] = o.ConversationId
	toSerialize["message_text"] = o.MessageText
	if !IsNil(o.Recommendations) {
		toSerialize["recommendations"] = o.Recommendations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AudienceRecommendationResponseMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conversation_id",
		"message_text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAudienceRecommendationResponseMessage := _AudienceRecommendationResponseMessage{}

	err = json.Unmarshal(data, &varAudienceRecommendationResponseMessage)

	if err != nil {
		return err
	}

	*o = AudienceRecommendationResponseMessage(varAudienceRecommendationResponseMessage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "conversation_id")
		delete(additionalProperties, "message_text")
		delete(additionalProperties, "recommendations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAudienceRecommendationResponseMessage struct {
	value *AudienceRecommendationResponseMessage
	isSet bool
}

func (v NullableAudienceRecommendationResponseMessage) Get() *AudienceRecommendationResponseMessage {
	return v.value
}

func (v *NullableAudienceRecommendationResponseMessage) Set(val *AudienceRecommendationResponseMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceRecommendationResponseMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceRecommendationResponseMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceRecommendationResponseMessage(val *AudienceRecommendationResponseMessage) *NullableAudienceRecommendationResponseMessage {
	return &NullableAudienceRecommendationResponseMessage{value: val, isSet: true}
}

func (v NullableAudienceRecommendationResponseMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceRecommendationResponseMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


