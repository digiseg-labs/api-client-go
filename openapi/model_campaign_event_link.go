/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" />  ## Audience taxonomy  For a catalog of Digisegs audiences, refer to the [Audience list](https://digiseg.io/audiences-list).  There is also an interactive [Audience builder](https://digiseg.io/cookieless-audience-builder/) which lets you discover the targeting reach and power of combining various household characteristics into composite audiences. 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignEventLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignEventLink{}

// CampaignEventLink struct for CampaignEventLink
type CampaignEventLink struct {
	// The base URI of the link to an event
	Link *string `json:"link,omitempty"`
	// Describes any parameters that can be added to the event link
	Parameters *map[string]CampaignEventLinkParameterInfo `json:"parameters,omitempty"`
}

// NewCampaignEventLink instantiates a new CampaignEventLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignEventLink() *CampaignEventLink {
	this := CampaignEventLink{}
	return &this
}

// NewCampaignEventLinkWithDefaults instantiates a new CampaignEventLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignEventLinkWithDefaults() *CampaignEventLink {
	this := CampaignEventLink{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *CampaignEventLink) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignEventLink) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *CampaignEventLink) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *CampaignEventLink) SetLink(v string) {
	o.Link = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *CampaignEventLink) GetParameters() map[string]CampaignEventLinkParameterInfo {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]CampaignEventLinkParameterInfo
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignEventLink) GetParametersOk() (*map[string]CampaignEventLinkParameterInfo, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CampaignEventLink) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]CampaignEventLinkParameterInfo and assigns it to the Parameters field.
func (o *CampaignEventLink) SetParameters(v map[string]CampaignEventLinkParameterInfo) {
	o.Parameters = &v
}

func (o CampaignEventLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignEventLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableCampaignEventLink struct {
	value *CampaignEventLink
	isSet bool
}

func (v NullableCampaignEventLink) Get() *CampaignEventLink {
	return v.value
}

func (v *NullableCampaignEventLink) Set(val *CampaignEventLink) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignEventLink) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignEventLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignEventLink(val *CampaignEventLink) *NullableCampaignEventLink {
	return &NullableCampaignEventLink{value: val, isSet: true}
}

func (v NullableCampaignEventLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignEventLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


