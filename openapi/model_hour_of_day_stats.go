/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" />  ## Audience taxonomy  Digiseg audiences are grouped into private and business audiences. In each group there are categories that then contain the audiences. The API endpoints that communicate audiences and household characteristics, audience codes are being used.  The following table can be used as a reference for audience codes. Note that Digiseg will at times update names of audiences for purposes of internationalization, clarity or other such purposes - but the codes will remain as-is and should be considered a stable point of reference for the audience.  | Group | Category | Audience Code | Audience Name | |-------|----------|---------------|---------------| | private | home_type | a1 | Apartment | |  |  | a2 | House | |  | savings | b1 | No Savings | |  |  | b2 | Smaller Savings | |  |  | b3 | Larger Savings | |  | lifecycle | c1 | Young singles and couples | |  |  | c2 | Young couples with children | |  |  | c3 | Families with school children | |  |  | c4 | Older families | |  |  | c5 | Pensioners | |  | cars | d1 | No cars | |  |  | d2 | 1 car | |  |  | d3 | 2 or more cars | |  | children | e1 | No children | |  |  | e2 | 1 child | |  |  | e3 | 2 or more children | |  | education | f1 | Basic | |  |  | f2 | Medium | |  |  | f3 | Higher | |  | neighbourhood_type | g1 | Countryside | |  |  | g2 | Village | |  |  | g3 | Suburban | |  |  | g4 | City | |  | income | h1 | Lowest 20% | |  |  | h2 | Lowest 20-40% | |  |  | h3 | Middle 40-60% | |  |  | h4 | Highest 60-80% | |  |  | h5 | Top 20% | |  | home_ownership | j1 | Rent | |  |  | j2 | Own | |  | building_age | k1 | Pre 1945 | |  |  | k2 | 1945-1989 | |  |  | k3 | 1990 until today | |  | living_space | l1 | Up to 80 m² | |  |  | l2 | 80-119 m² | |  |  | l3 | Above 120 m² | |  | tech_level | n1 | Basic | |  |  | n2 | Medium | |  |  | n3 | High | | business | size | ba1 | Small Business | |  |  | ba2 | Medium Business | |  |  | ba3 | Larger Business |  There is also an interactive [Audience builder](https://digiseg.io/cookieless-audience-builder/) which lets you discover the targeting reach and power of combining various household characteristics into composite audiences. 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HourOfDayStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HourOfDayStats{}

// HourOfDayStats Contains statistics about the time of day that study activity has been measured. The 24 hour time format is used to represent measurements for each hour. The time zone used to record these measurements is the time zone of the measured user, or UTC if the user's location cannot be resolved. 
type HourOfDayStats struct {
	Var10 *MeasurementsContainer `json:"10,omitempty"`
	Var11 *MeasurementsContainer `json:"11,omitempty"`
	Var12 *MeasurementsContainer `json:"12,omitempty"`
	Var13 *MeasurementsContainer `json:"13,omitempty"`
	Var14 *MeasurementsContainer `json:"14,omitempty"`
	Var15 *MeasurementsContainer `json:"15,omitempty"`
	Var16 *MeasurementsContainer `json:"16,omitempty"`
	Var17 *MeasurementsContainer `json:"17,omitempty"`
	Var18 *MeasurementsContainer `json:"18,omitempty"`
	Var19 *MeasurementsContainer `json:"19,omitempty"`
	Var20 *MeasurementsContainer `json:"20,omitempty"`
	Var21 *MeasurementsContainer `json:"21,omitempty"`
	Var22 *MeasurementsContainer `json:"22,omitempty"`
	Var23 *MeasurementsContainer `json:"23,omitempty"`
	Var00 *MeasurementsContainer `json:"00,omitempty"`
	Var01 *MeasurementsContainer `json:"01,omitempty"`
	Var02 *MeasurementsContainer `json:"02,omitempty"`
	Var03 *MeasurementsContainer `json:"03,omitempty"`
	Var04 *MeasurementsContainer `json:"04,omitempty"`
	Var05 *MeasurementsContainer `json:"05,omitempty"`
	Var06 *MeasurementsContainer `json:"06,omitempty"`
	Var07 *MeasurementsContainer `json:"07,omitempty"`
	Var08 *MeasurementsContainer `json:"08,omitempty"`
	Var09 *MeasurementsContainer `json:"09,omitempty"`
}

// NewHourOfDayStats instantiates a new HourOfDayStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHourOfDayStats() *HourOfDayStats {
	this := HourOfDayStats{}
	return &this
}

// NewHourOfDayStatsWithDefaults instantiates a new HourOfDayStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHourOfDayStatsWithDefaults() *HourOfDayStats {
	this := HourOfDayStats{}
	return &this
}

// GetVar10 returns the Var10 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar10() MeasurementsContainer {
	if o == nil || IsNil(o.Var10) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var10
}

// GetVar10Ok returns a tuple with the Var10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar10Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var10) {
		return nil, false
	}
	return o.Var10, true
}

// HasVar10 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar10() bool {
	if o != nil && !IsNil(o.Var10) {
		return true
	}

	return false
}

// SetVar10 gets a reference to the given MeasurementsContainer and assigns it to the Var10 field.
func (o *HourOfDayStats) SetVar10(v MeasurementsContainer) {
	o.Var10 = &v
}

// GetVar11 returns the Var11 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar11() MeasurementsContainer {
	if o == nil || IsNil(o.Var11) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var11
}

// GetVar11Ok returns a tuple with the Var11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar11Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var11) {
		return nil, false
	}
	return o.Var11, true
}

// HasVar11 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar11() bool {
	if o != nil && !IsNil(o.Var11) {
		return true
	}

	return false
}

// SetVar11 gets a reference to the given MeasurementsContainer and assigns it to the Var11 field.
func (o *HourOfDayStats) SetVar11(v MeasurementsContainer) {
	o.Var11 = &v
}

// GetVar12 returns the Var12 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar12() MeasurementsContainer {
	if o == nil || IsNil(o.Var12) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var12
}

// GetVar12Ok returns a tuple with the Var12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar12Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var12) {
		return nil, false
	}
	return o.Var12, true
}

// HasVar12 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar12() bool {
	if o != nil && !IsNil(o.Var12) {
		return true
	}

	return false
}

// SetVar12 gets a reference to the given MeasurementsContainer and assigns it to the Var12 field.
func (o *HourOfDayStats) SetVar12(v MeasurementsContainer) {
	o.Var12 = &v
}

// GetVar13 returns the Var13 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar13() MeasurementsContainer {
	if o == nil || IsNil(o.Var13) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var13
}

// GetVar13Ok returns a tuple with the Var13 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar13Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var13) {
		return nil, false
	}
	return o.Var13, true
}

// HasVar13 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar13() bool {
	if o != nil && !IsNil(o.Var13) {
		return true
	}

	return false
}

// SetVar13 gets a reference to the given MeasurementsContainer and assigns it to the Var13 field.
func (o *HourOfDayStats) SetVar13(v MeasurementsContainer) {
	o.Var13 = &v
}

// GetVar14 returns the Var14 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar14() MeasurementsContainer {
	if o == nil || IsNil(o.Var14) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var14
}

// GetVar14Ok returns a tuple with the Var14 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar14Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var14) {
		return nil, false
	}
	return o.Var14, true
}

// HasVar14 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar14() bool {
	if o != nil && !IsNil(o.Var14) {
		return true
	}

	return false
}

// SetVar14 gets a reference to the given MeasurementsContainer and assigns it to the Var14 field.
func (o *HourOfDayStats) SetVar14(v MeasurementsContainer) {
	o.Var14 = &v
}

// GetVar15 returns the Var15 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar15() MeasurementsContainer {
	if o == nil || IsNil(o.Var15) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var15
}

// GetVar15Ok returns a tuple with the Var15 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar15Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var15) {
		return nil, false
	}
	return o.Var15, true
}

// HasVar15 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar15() bool {
	if o != nil && !IsNil(o.Var15) {
		return true
	}

	return false
}

// SetVar15 gets a reference to the given MeasurementsContainer and assigns it to the Var15 field.
func (o *HourOfDayStats) SetVar15(v MeasurementsContainer) {
	o.Var15 = &v
}

// GetVar16 returns the Var16 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar16() MeasurementsContainer {
	if o == nil || IsNil(o.Var16) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var16
}

// GetVar16Ok returns a tuple with the Var16 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar16Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var16) {
		return nil, false
	}
	return o.Var16, true
}

// HasVar16 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar16() bool {
	if o != nil && !IsNil(o.Var16) {
		return true
	}

	return false
}

// SetVar16 gets a reference to the given MeasurementsContainer and assigns it to the Var16 field.
func (o *HourOfDayStats) SetVar16(v MeasurementsContainer) {
	o.Var16 = &v
}

// GetVar17 returns the Var17 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar17() MeasurementsContainer {
	if o == nil || IsNil(o.Var17) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var17
}

// GetVar17Ok returns a tuple with the Var17 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar17Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var17) {
		return nil, false
	}
	return o.Var17, true
}

// HasVar17 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar17() bool {
	if o != nil && !IsNil(o.Var17) {
		return true
	}

	return false
}

// SetVar17 gets a reference to the given MeasurementsContainer and assigns it to the Var17 field.
func (o *HourOfDayStats) SetVar17(v MeasurementsContainer) {
	o.Var17 = &v
}

// GetVar18 returns the Var18 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar18() MeasurementsContainer {
	if o == nil || IsNil(o.Var18) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var18
}

// GetVar18Ok returns a tuple with the Var18 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar18Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var18) {
		return nil, false
	}
	return o.Var18, true
}

// HasVar18 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar18() bool {
	if o != nil && !IsNil(o.Var18) {
		return true
	}

	return false
}

// SetVar18 gets a reference to the given MeasurementsContainer and assigns it to the Var18 field.
func (o *HourOfDayStats) SetVar18(v MeasurementsContainer) {
	o.Var18 = &v
}

// GetVar19 returns the Var19 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar19() MeasurementsContainer {
	if o == nil || IsNil(o.Var19) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var19
}

// GetVar19Ok returns a tuple with the Var19 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar19Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var19) {
		return nil, false
	}
	return o.Var19, true
}

// HasVar19 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar19() bool {
	if o != nil && !IsNil(o.Var19) {
		return true
	}

	return false
}

// SetVar19 gets a reference to the given MeasurementsContainer and assigns it to the Var19 field.
func (o *HourOfDayStats) SetVar19(v MeasurementsContainer) {
	o.Var19 = &v
}

// GetVar20 returns the Var20 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar20() MeasurementsContainer {
	if o == nil || IsNil(o.Var20) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var20
}

// GetVar20Ok returns a tuple with the Var20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar20Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var20) {
		return nil, false
	}
	return o.Var20, true
}

// HasVar20 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar20() bool {
	if o != nil && !IsNil(o.Var20) {
		return true
	}

	return false
}

// SetVar20 gets a reference to the given MeasurementsContainer and assigns it to the Var20 field.
func (o *HourOfDayStats) SetVar20(v MeasurementsContainer) {
	o.Var20 = &v
}

// GetVar21 returns the Var21 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar21() MeasurementsContainer {
	if o == nil || IsNil(o.Var21) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var21
}

// GetVar21Ok returns a tuple with the Var21 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar21Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var21) {
		return nil, false
	}
	return o.Var21, true
}

// HasVar21 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar21() bool {
	if o != nil && !IsNil(o.Var21) {
		return true
	}

	return false
}

// SetVar21 gets a reference to the given MeasurementsContainer and assigns it to the Var21 field.
func (o *HourOfDayStats) SetVar21(v MeasurementsContainer) {
	o.Var21 = &v
}

// GetVar22 returns the Var22 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar22() MeasurementsContainer {
	if o == nil || IsNil(o.Var22) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var22
}

// GetVar22Ok returns a tuple with the Var22 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar22Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var22) {
		return nil, false
	}
	return o.Var22, true
}

// HasVar22 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar22() bool {
	if o != nil && !IsNil(o.Var22) {
		return true
	}

	return false
}

// SetVar22 gets a reference to the given MeasurementsContainer and assigns it to the Var22 field.
func (o *HourOfDayStats) SetVar22(v MeasurementsContainer) {
	o.Var22 = &v
}

// GetVar23 returns the Var23 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar23() MeasurementsContainer {
	if o == nil || IsNil(o.Var23) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var23
}

// GetVar23Ok returns a tuple with the Var23 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar23Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var23) {
		return nil, false
	}
	return o.Var23, true
}

// HasVar23 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar23() bool {
	if o != nil && !IsNil(o.Var23) {
		return true
	}

	return false
}

// SetVar23 gets a reference to the given MeasurementsContainer and assigns it to the Var23 field.
func (o *HourOfDayStats) SetVar23(v MeasurementsContainer) {
	o.Var23 = &v
}

// GetVar00 returns the Var00 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar00() MeasurementsContainer {
	if o == nil || IsNil(o.Var00) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var00
}

// GetVar00Ok returns a tuple with the Var00 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar00Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var00) {
		return nil, false
	}
	return o.Var00, true
}

// HasVar00 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar00() bool {
	if o != nil && !IsNil(o.Var00) {
		return true
	}

	return false
}

// SetVar00 gets a reference to the given MeasurementsContainer and assigns it to the Var00 field.
func (o *HourOfDayStats) SetVar00(v MeasurementsContainer) {
	o.Var00 = &v
}

// GetVar01 returns the Var01 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar01() MeasurementsContainer {
	if o == nil || IsNil(o.Var01) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var01
}

// GetVar01Ok returns a tuple with the Var01 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar01Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var01) {
		return nil, false
	}
	return o.Var01, true
}

// HasVar01 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar01() bool {
	if o != nil && !IsNil(o.Var01) {
		return true
	}

	return false
}

// SetVar01 gets a reference to the given MeasurementsContainer and assigns it to the Var01 field.
func (o *HourOfDayStats) SetVar01(v MeasurementsContainer) {
	o.Var01 = &v
}

// GetVar02 returns the Var02 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar02() MeasurementsContainer {
	if o == nil || IsNil(o.Var02) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var02
}

// GetVar02Ok returns a tuple with the Var02 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar02Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var02) {
		return nil, false
	}
	return o.Var02, true
}

// HasVar02 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar02() bool {
	if o != nil && !IsNil(o.Var02) {
		return true
	}

	return false
}

// SetVar02 gets a reference to the given MeasurementsContainer and assigns it to the Var02 field.
func (o *HourOfDayStats) SetVar02(v MeasurementsContainer) {
	o.Var02 = &v
}

// GetVar03 returns the Var03 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar03() MeasurementsContainer {
	if o == nil || IsNil(o.Var03) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var03
}

// GetVar03Ok returns a tuple with the Var03 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar03Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var03) {
		return nil, false
	}
	return o.Var03, true
}

// HasVar03 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar03() bool {
	if o != nil && !IsNil(o.Var03) {
		return true
	}

	return false
}

// SetVar03 gets a reference to the given MeasurementsContainer and assigns it to the Var03 field.
func (o *HourOfDayStats) SetVar03(v MeasurementsContainer) {
	o.Var03 = &v
}

// GetVar04 returns the Var04 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar04() MeasurementsContainer {
	if o == nil || IsNil(o.Var04) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var04
}

// GetVar04Ok returns a tuple with the Var04 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar04Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var04) {
		return nil, false
	}
	return o.Var04, true
}

// HasVar04 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar04() bool {
	if o != nil && !IsNil(o.Var04) {
		return true
	}

	return false
}

// SetVar04 gets a reference to the given MeasurementsContainer and assigns it to the Var04 field.
func (o *HourOfDayStats) SetVar04(v MeasurementsContainer) {
	o.Var04 = &v
}

// GetVar05 returns the Var05 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar05() MeasurementsContainer {
	if o == nil || IsNil(o.Var05) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var05
}

// GetVar05Ok returns a tuple with the Var05 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar05Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var05) {
		return nil, false
	}
	return o.Var05, true
}

// HasVar05 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar05() bool {
	if o != nil && !IsNil(o.Var05) {
		return true
	}

	return false
}

// SetVar05 gets a reference to the given MeasurementsContainer and assigns it to the Var05 field.
func (o *HourOfDayStats) SetVar05(v MeasurementsContainer) {
	o.Var05 = &v
}

// GetVar06 returns the Var06 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar06() MeasurementsContainer {
	if o == nil || IsNil(o.Var06) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var06
}

// GetVar06Ok returns a tuple with the Var06 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar06Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var06) {
		return nil, false
	}
	return o.Var06, true
}

// HasVar06 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar06() bool {
	if o != nil && !IsNil(o.Var06) {
		return true
	}

	return false
}

// SetVar06 gets a reference to the given MeasurementsContainer and assigns it to the Var06 field.
func (o *HourOfDayStats) SetVar06(v MeasurementsContainer) {
	o.Var06 = &v
}

// GetVar07 returns the Var07 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar07() MeasurementsContainer {
	if o == nil || IsNil(o.Var07) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var07
}

// GetVar07Ok returns a tuple with the Var07 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar07Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var07) {
		return nil, false
	}
	return o.Var07, true
}

// HasVar07 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar07() bool {
	if o != nil && !IsNil(o.Var07) {
		return true
	}

	return false
}

// SetVar07 gets a reference to the given MeasurementsContainer and assigns it to the Var07 field.
func (o *HourOfDayStats) SetVar07(v MeasurementsContainer) {
	o.Var07 = &v
}

// GetVar08 returns the Var08 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar08() MeasurementsContainer {
	if o == nil || IsNil(o.Var08) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var08
}

// GetVar08Ok returns a tuple with the Var08 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar08Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var08) {
		return nil, false
	}
	return o.Var08, true
}

// HasVar08 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar08() bool {
	if o != nil && !IsNil(o.Var08) {
		return true
	}

	return false
}

// SetVar08 gets a reference to the given MeasurementsContainer and assigns it to the Var08 field.
func (o *HourOfDayStats) SetVar08(v MeasurementsContainer) {
	o.Var08 = &v
}

// GetVar09 returns the Var09 field value if set, zero value otherwise.
func (o *HourOfDayStats) GetVar09() MeasurementsContainer {
	if o == nil || IsNil(o.Var09) {
		var ret MeasurementsContainer
		return ret
	}
	return *o.Var09
}

// GetVar09Ok returns a tuple with the Var09 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HourOfDayStats) GetVar09Ok() (*MeasurementsContainer, bool) {
	if o == nil || IsNil(o.Var09) {
		return nil, false
	}
	return o.Var09, true
}

// HasVar09 returns a boolean if a field has been set.
func (o *HourOfDayStats) HasVar09() bool {
	if o != nil && !IsNil(o.Var09) {
		return true
	}

	return false
}

// SetVar09 gets a reference to the given MeasurementsContainer and assigns it to the Var09 field.
func (o *HourOfDayStats) SetVar09(v MeasurementsContainer) {
	o.Var09 = &v
}

func (o HourOfDayStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HourOfDayStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var10) {
		toSerialize["10"] = o.Var10
	}
	if !IsNil(o.Var11) {
		toSerialize["11"] = o.Var11
	}
	if !IsNil(o.Var12) {
		toSerialize["12"] = o.Var12
	}
	if !IsNil(o.Var13) {
		toSerialize["13"] = o.Var13
	}
	if !IsNil(o.Var14) {
		toSerialize["14"] = o.Var14
	}
	if !IsNil(o.Var15) {
		toSerialize["15"] = o.Var15
	}
	if !IsNil(o.Var16) {
		toSerialize["16"] = o.Var16
	}
	if !IsNil(o.Var17) {
		toSerialize["17"] = o.Var17
	}
	if !IsNil(o.Var18) {
		toSerialize["18"] = o.Var18
	}
	if !IsNil(o.Var19) {
		toSerialize["19"] = o.Var19
	}
	if !IsNil(o.Var20) {
		toSerialize["20"] = o.Var20
	}
	if !IsNil(o.Var21) {
		toSerialize["21"] = o.Var21
	}
	if !IsNil(o.Var22) {
		toSerialize["22"] = o.Var22
	}
	if !IsNil(o.Var23) {
		toSerialize["23"] = o.Var23
	}
	if !IsNil(o.Var00) {
		toSerialize["00"] = o.Var00
	}
	if !IsNil(o.Var01) {
		toSerialize["01"] = o.Var01
	}
	if !IsNil(o.Var02) {
		toSerialize["02"] = o.Var02
	}
	if !IsNil(o.Var03) {
		toSerialize["03"] = o.Var03
	}
	if !IsNil(o.Var04) {
		toSerialize["04"] = o.Var04
	}
	if !IsNil(o.Var05) {
		toSerialize["05"] = o.Var05
	}
	if !IsNil(o.Var06) {
		toSerialize["06"] = o.Var06
	}
	if !IsNil(o.Var07) {
		toSerialize["07"] = o.Var07
	}
	if !IsNil(o.Var08) {
		toSerialize["08"] = o.Var08
	}
	if !IsNil(o.Var09) {
		toSerialize["09"] = o.Var09
	}
	return toSerialize, nil
}

type NullableHourOfDayStats struct {
	value *HourOfDayStats
	isSet bool
}

func (v NullableHourOfDayStats) Get() *HourOfDayStats {
	return v.value
}

func (v *NullableHourOfDayStats) Set(val *HourOfDayStats) {
	v.value = val
	v.isSet = true
}

func (v NullableHourOfDayStats) IsSet() bool {
	return v.isSet
}

func (v *NullableHourOfDayStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHourOfDayStats(val *HourOfDayStats) *NullableHourOfDayStats {
	return &NullableHourOfDayStats{value: val, isSet: true}
}

func (v NullableHourOfDayStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHourOfDayStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


