/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListUsersByAccountId200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUsersByAccountId200Response{}

// ListUsersByAccountId200Response struct for ListUsersByAccountId200Response
type ListUsersByAccountId200Response struct {
	Meta *ListPaginationMeta `json:"meta,omitempty"`
	Links *ListPaginationLinks `json:"links,omitempty"`
	Data []UserItem `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListUsersByAccountId200Response ListUsersByAccountId200Response

// NewListUsersByAccountId200Response instantiates a new ListUsersByAccountId200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUsersByAccountId200Response() *ListUsersByAccountId200Response {
	this := ListUsersByAccountId200Response{}
	return &this
}

// NewListUsersByAccountId200ResponseWithDefaults instantiates a new ListUsersByAccountId200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUsersByAccountId200ResponseWithDefaults() *ListUsersByAccountId200Response {
	this := ListUsersByAccountId200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListUsersByAccountId200Response) GetMeta() ListPaginationMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ListPaginationMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersByAccountId200Response) GetMetaOk() (*ListPaginationMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListUsersByAccountId200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ListPaginationMeta and assigns it to the Meta field.
func (o *ListUsersByAccountId200Response) SetMeta(v ListPaginationMeta) {
	o.Meta = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ListUsersByAccountId200Response) GetLinks() ListPaginationLinks {
	if o == nil || IsNil(o.Links) {
		var ret ListPaginationLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersByAccountId200Response) GetLinksOk() (*ListPaginationLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ListUsersByAccountId200Response) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ListPaginationLinks and assigns it to the Links field.
func (o *ListUsersByAccountId200Response) SetLinks(v ListPaginationLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListUsersByAccountId200Response) GetData() []UserItem {
	if o == nil || IsNil(o.Data) {
		var ret []UserItem
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUsersByAccountId200Response) GetDataOk() ([]UserItem, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListUsersByAccountId200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []UserItem and assigns it to the Data field.
func (o *ListUsersByAccountId200Response) SetData(v []UserItem) {
	o.Data = v
}

func (o ListUsersByAccountId200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUsersByAccountId200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListUsersByAccountId200Response) UnmarshalJSON(data []byte) (err error) {
	varListUsersByAccountId200Response := _ListUsersByAccountId200Response{}

	err = json.Unmarshal(data, &varListUsersByAccountId200Response)

	if err != nil {
		return err
	}

	*o = ListUsersByAccountId200Response(varListUsersByAccountId200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "meta")
		delete(additionalProperties, "links")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListUsersByAccountId200Response struct {
	value *ListUsersByAccountId200Response
	isSet bool
}

func (v NullableListUsersByAccountId200Response) Get() *ListUsersByAccountId200Response {
	return v.value
}

func (v *NullableListUsersByAccountId200Response) Set(val *ListUsersByAccountId200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListUsersByAccountId200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListUsersByAccountId200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUsersByAccountId200Response(val *ListUsersByAccountId200Response) *NullableListUsersByAccountId200Response {
	return &NullableListUsersByAccountId200Response{value: val, isSet: true}
}

func (v NullableListUsersByAccountId200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUsersByAccountId200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


