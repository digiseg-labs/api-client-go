/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MeasurementClientMutation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeasurementClientMutation{}

// MeasurementClientMutation struct for MeasurementClientMutation
type MeasurementClientMutation struct {
	// The name of the measurement client
	Name *string `json:"name,omitempty"`
	// The ID of the account that owns this client
	AccountId *string `json:"account_id,omitempty"`
	// The URL of an image representing the measurement client
	LogoUrl *string `json:"logo_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MeasurementClientMutation MeasurementClientMutation

// NewMeasurementClientMutation instantiates a new MeasurementClientMutation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeasurementClientMutation() *MeasurementClientMutation {
	this := MeasurementClientMutation{}
	return &this
}

// NewMeasurementClientMutationWithDefaults instantiates a new MeasurementClientMutation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeasurementClientMutationWithDefaults() *MeasurementClientMutation {
	this := MeasurementClientMutation{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MeasurementClientMutation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeasurementClientMutation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MeasurementClientMutation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MeasurementClientMutation) SetName(v string) {
	o.Name = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *MeasurementClientMutation) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeasurementClientMutation) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *MeasurementClientMutation) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *MeasurementClientMutation) SetAccountId(v string) {
	o.AccountId = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *MeasurementClientMutation) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeasurementClientMutation) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *MeasurementClientMutation) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *MeasurementClientMutation) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

func (o MeasurementClientMutation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MeasurementClientMutation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logo_url"] = o.LogoUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MeasurementClientMutation) UnmarshalJSON(data []byte) (err error) {
	varMeasurementClientMutation := _MeasurementClientMutation{}

	err = json.Unmarshal(data, &varMeasurementClientMutation)

	if err != nil {
		return err
	}

	*o = MeasurementClientMutation(varMeasurementClientMutation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "logo_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMeasurementClientMutation struct {
	value *MeasurementClientMutation
	isSet bool
}

func (v NullableMeasurementClientMutation) Get() *MeasurementClientMutation {
	return v.value
}

func (v *NullableMeasurementClientMutation) Set(val *MeasurementClientMutation) {
	v.value = val
	v.isSet = true
}

func (v NullableMeasurementClientMutation) IsSet() bool {
	return v.isSet
}

func (v *NullableMeasurementClientMutation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeasurementClientMutation(val *MeasurementClientMutation) *NullableMeasurementClientMutation {
	return &NullableMeasurementClientMutation{value: val, isSet: true}
}

func (v NullableMeasurementClientMutation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeasurementClientMutation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


