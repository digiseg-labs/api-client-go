/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" />  ## Audience taxonomy  For a catalog of Digisegs audiences, refer to the [Audience list](https://digiseg.io/audiences-list).  There is also an interactive [Audience builder](https://digiseg.io/cookieless-audience-builder/) which lets you discover the targeting reach and power of combining various household characteristics into composite audiences. 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PopulationSourcePrivateSection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PopulationSourcePrivateSection{}

// PopulationSourcePrivateSection struct for PopulationSourcePrivateSection
type PopulationSourcePrivateSection struct {
	AudienceCategories *PopulationSourcePrivateCategorySet `json:"audience_categories,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// NewPopulationSourcePrivateSection instantiates a new PopulationSourcePrivateSection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPopulationSourcePrivateSection() *PopulationSourcePrivateSection {
	this := PopulationSourcePrivateSection{}
	return &this
}

// NewPopulationSourcePrivateSectionWithDefaults instantiates a new PopulationSourcePrivateSection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPopulationSourcePrivateSectionWithDefaults() *PopulationSourcePrivateSection {
	this := PopulationSourcePrivateSection{}
	return &this
}

// GetAudienceCategories returns the AudienceCategories field value if set, zero value otherwise.
func (o *PopulationSourcePrivateSection) GetAudienceCategories() PopulationSourcePrivateCategorySet {
	if o == nil || IsNil(o.AudienceCategories) {
		var ret PopulationSourcePrivateCategorySet
		return ret
	}
	return *o.AudienceCategories
}

// GetAudienceCategoriesOk returns a tuple with the AudienceCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PopulationSourcePrivateSection) GetAudienceCategoriesOk() (*PopulationSourcePrivateCategorySet, bool) {
	if o == nil || IsNil(o.AudienceCategories) {
		return nil, false
	}
	return o.AudienceCategories, true
}

// HasAudienceCategories returns a boolean if a field has been set.
func (o *PopulationSourcePrivateSection) HasAudienceCategories() bool {
	if o != nil && !IsNil(o.AudienceCategories) {
		return true
	}

	return false
}

// SetAudienceCategories gets a reference to the given PopulationSourcePrivateCategorySet and assigns it to the AudienceCategories field.
func (o *PopulationSourcePrivateSection) SetAudienceCategories(v PopulationSourcePrivateCategorySet) {
	o.AudienceCategories = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *PopulationSourcePrivateSection) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PopulationSourcePrivateSection) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *PopulationSourcePrivateSection) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *PopulationSourcePrivateSection) SetCount(v int32) {
	o.Count = &v
}

func (o PopulationSourcePrivateSection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PopulationSourcePrivateSection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudienceCategories) {
		toSerialize["audience_categories"] = o.AudienceCategories
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullablePopulationSourcePrivateSection struct {
	value *PopulationSourcePrivateSection
	isSet bool
}

func (v NullablePopulationSourcePrivateSection) Get() *PopulationSourcePrivateSection {
	return v.value
}

func (v *NullablePopulationSourcePrivateSection) Set(val *PopulationSourcePrivateSection) {
	v.value = val
	v.isSet = true
}

func (v NullablePopulationSourcePrivateSection) IsSet() bool {
	return v.isSet
}

func (v *NullablePopulationSourcePrivateSection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePopulationSourcePrivateSection(val *PopulationSourcePrivateSection) *NullablePopulationSourcePrivateSection {
	return &NullablePopulationSourcePrivateSection{value: val, isSet: true}
}

func (v NullablePopulationSourcePrivateSection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePopulationSourcePrivateSection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


