/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" />  ## Audience taxonomy  For a catalog of Digisegs audiences, refer to the [Audience list](https://digiseg.io/audiences-list).  There is also an interactive [Audience builder](https://digiseg.io/cookieless-audience-builder/) which lets you discover the targeting reach and power of combining various household characteristics into composite audiences. 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrivateAudienceStatsAllOfAudienceCategories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateAudienceStatsAllOfAudienceCategories{}

// PrivateAudienceStatsAllOfAudienceCategories struct for PrivateAudienceStatsAllOfAudienceCategories
type PrivateAudienceStatsAllOfAudienceCategories struct {
	HomeType *AudienceCategoryStats `json:"home_type,omitempty"`
	Savings *AudienceCategoryStats `json:"savings,omitempty"`
	Lifecycle *AudienceCategoryStats `json:"lifecycle,omitempty"`
	Cars *AudienceCategoryStats `json:"cars,omitempty"`
	Children *AudienceCategoryStats `json:"children,omitempty"`
	Education *AudienceCategoryStats `json:"education,omitempty"`
	NeighbourhoodType *AudienceCategoryStats `json:"neighbourhood_type,omitempty"`
	Income *AudienceCategoryStats `json:"income,omitempty"`
	HomeOwnership *AudienceCategoryStats `json:"home_ownership,omitempty"`
	BuildingAge *AudienceCategoryStats `json:"building_age,omitempty"`
	LivingSpace *AudienceCategoryStats `json:"living_space,omitempty"`
	TechLevel *AudienceCategoryStats `json:"tech_level,omitempty"`
}

// NewPrivateAudienceStatsAllOfAudienceCategories instantiates a new PrivateAudienceStatsAllOfAudienceCategories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateAudienceStatsAllOfAudienceCategories() *PrivateAudienceStatsAllOfAudienceCategories {
	this := PrivateAudienceStatsAllOfAudienceCategories{}
	return &this
}

// NewPrivateAudienceStatsAllOfAudienceCategoriesWithDefaults instantiates a new PrivateAudienceStatsAllOfAudienceCategories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateAudienceStatsAllOfAudienceCategoriesWithDefaults() *PrivateAudienceStatsAllOfAudienceCategories {
	this := PrivateAudienceStatsAllOfAudienceCategories{}
	return &this
}

// GetHomeType returns the HomeType field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetHomeType() AudienceCategoryStats {
	if o == nil || IsNil(o.HomeType) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.HomeType
}

// GetHomeTypeOk returns a tuple with the HomeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetHomeTypeOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.HomeType) {
		return nil, false
	}
	return o.HomeType, true
}

// HasHomeType returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasHomeType() bool {
	if o != nil && !IsNil(o.HomeType) {
		return true
	}

	return false
}

// SetHomeType gets a reference to the given AudienceCategoryStats and assigns it to the HomeType field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetHomeType(v AudienceCategoryStats) {
	o.HomeType = &v
}

// GetSavings returns the Savings field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetSavings() AudienceCategoryStats {
	if o == nil || IsNil(o.Savings) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.Savings
}

// GetSavingsOk returns a tuple with the Savings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetSavingsOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.Savings) {
		return nil, false
	}
	return o.Savings, true
}

// HasSavings returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasSavings() bool {
	if o != nil && !IsNil(o.Savings) {
		return true
	}

	return false
}

// SetSavings gets a reference to the given AudienceCategoryStats and assigns it to the Savings field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetSavings(v AudienceCategoryStats) {
	o.Savings = &v
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetLifecycle() AudienceCategoryStats {
	if o == nil || IsNil(o.Lifecycle) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetLifecycleOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.Lifecycle) {
		return nil, false
	}
	return o.Lifecycle, true
}

// HasLifecycle returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasLifecycle() bool {
	if o != nil && !IsNil(o.Lifecycle) {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given AudienceCategoryStats and assigns it to the Lifecycle field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetLifecycle(v AudienceCategoryStats) {
	o.Lifecycle = &v
}

// GetCars returns the Cars field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetCars() AudienceCategoryStats {
	if o == nil || IsNil(o.Cars) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.Cars
}

// GetCarsOk returns a tuple with the Cars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetCarsOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.Cars) {
		return nil, false
	}
	return o.Cars, true
}

// HasCars returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasCars() bool {
	if o != nil && !IsNil(o.Cars) {
		return true
	}

	return false
}

// SetCars gets a reference to the given AudienceCategoryStats and assigns it to the Cars field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetCars(v AudienceCategoryStats) {
	o.Cars = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetChildren() AudienceCategoryStats {
	if o == nil || IsNil(o.Children) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetChildrenOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given AudienceCategoryStats and assigns it to the Children field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetChildren(v AudienceCategoryStats) {
	o.Children = &v
}

// GetEducation returns the Education field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetEducation() AudienceCategoryStats {
	if o == nil || IsNil(o.Education) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.Education
}

// GetEducationOk returns a tuple with the Education field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetEducationOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.Education) {
		return nil, false
	}
	return o.Education, true
}

// HasEducation returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasEducation() bool {
	if o != nil && !IsNil(o.Education) {
		return true
	}

	return false
}

// SetEducation gets a reference to the given AudienceCategoryStats and assigns it to the Education field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetEducation(v AudienceCategoryStats) {
	o.Education = &v
}

// GetNeighbourhoodType returns the NeighbourhoodType field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetNeighbourhoodType() AudienceCategoryStats {
	if o == nil || IsNil(o.NeighbourhoodType) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.NeighbourhoodType
}

// GetNeighbourhoodTypeOk returns a tuple with the NeighbourhoodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetNeighbourhoodTypeOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.NeighbourhoodType) {
		return nil, false
	}
	return o.NeighbourhoodType, true
}

// HasNeighbourhoodType returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasNeighbourhoodType() bool {
	if o != nil && !IsNil(o.NeighbourhoodType) {
		return true
	}

	return false
}

// SetNeighbourhoodType gets a reference to the given AudienceCategoryStats and assigns it to the NeighbourhoodType field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetNeighbourhoodType(v AudienceCategoryStats) {
	o.NeighbourhoodType = &v
}

// GetIncome returns the Income field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetIncome() AudienceCategoryStats {
	if o == nil || IsNil(o.Income) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.Income
}

// GetIncomeOk returns a tuple with the Income field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetIncomeOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.Income) {
		return nil, false
	}
	return o.Income, true
}

// HasIncome returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasIncome() bool {
	if o != nil && !IsNil(o.Income) {
		return true
	}

	return false
}

// SetIncome gets a reference to the given AudienceCategoryStats and assigns it to the Income field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetIncome(v AudienceCategoryStats) {
	o.Income = &v
}

// GetHomeOwnership returns the HomeOwnership field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetHomeOwnership() AudienceCategoryStats {
	if o == nil || IsNil(o.HomeOwnership) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.HomeOwnership
}

// GetHomeOwnershipOk returns a tuple with the HomeOwnership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetHomeOwnershipOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.HomeOwnership) {
		return nil, false
	}
	return o.HomeOwnership, true
}

// HasHomeOwnership returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasHomeOwnership() bool {
	if o != nil && !IsNil(o.HomeOwnership) {
		return true
	}

	return false
}

// SetHomeOwnership gets a reference to the given AudienceCategoryStats and assigns it to the HomeOwnership field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetHomeOwnership(v AudienceCategoryStats) {
	o.HomeOwnership = &v
}

// GetBuildingAge returns the BuildingAge field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetBuildingAge() AudienceCategoryStats {
	if o == nil || IsNil(o.BuildingAge) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.BuildingAge
}

// GetBuildingAgeOk returns a tuple with the BuildingAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetBuildingAgeOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.BuildingAge) {
		return nil, false
	}
	return o.BuildingAge, true
}

// HasBuildingAge returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasBuildingAge() bool {
	if o != nil && !IsNil(o.BuildingAge) {
		return true
	}

	return false
}

// SetBuildingAge gets a reference to the given AudienceCategoryStats and assigns it to the BuildingAge field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetBuildingAge(v AudienceCategoryStats) {
	o.BuildingAge = &v
}

// GetLivingSpace returns the LivingSpace field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetLivingSpace() AudienceCategoryStats {
	if o == nil || IsNil(o.LivingSpace) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.LivingSpace
}

// GetLivingSpaceOk returns a tuple with the LivingSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetLivingSpaceOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.LivingSpace) {
		return nil, false
	}
	return o.LivingSpace, true
}

// HasLivingSpace returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasLivingSpace() bool {
	if o != nil && !IsNil(o.LivingSpace) {
		return true
	}

	return false
}

// SetLivingSpace gets a reference to the given AudienceCategoryStats and assigns it to the LivingSpace field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetLivingSpace(v AudienceCategoryStats) {
	o.LivingSpace = &v
}

// GetTechLevel returns the TechLevel field value if set, zero value otherwise.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetTechLevel() AudienceCategoryStats {
	if o == nil || IsNil(o.TechLevel) {
		var ret AudienceCategoryStats
		return ret
	}
	return *o.TechLevel
}

// GetTechLevelOk returns a tuple with the TechLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) GetTechLevelOk() (*AudienceCategoryStats, bool) {
	if o == nil || IsNil(o.TechLevel) {
		return nil, false
	}
	return o.TechLevel, true
}

// HasTechLevel returns a boolean if a field has been set.
func (o *PrivateAudienceStatsAllOfAudienceCategories) HasTechLevel() bool {
	if o != nil && !IsNil(o.TechLevel) {
		return true
	}

	return false
}

// SetTechLevel gets a reference to the given AudienceCategoryStats and assigns it to the TechLevel field.
func (o *PrivateAudienceStatsAllOfAudienceCategories) SetTechLevel(v AudienceCategoryStats) {
	o.TechLevel = &v
}

func (o PrivateAudienceStatsAllOfAudienceCategories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateAudienceStatsAllOfAudienceCategories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HomeType) {
		toSerialize["home_type"] = o.HomeType
	}
	if !IsNil(o.Savings) {
		toSerialize["savings"] = o.Savings
	}
	if !IsNil(o.Lifecycle) {
		toSerialize["lifecycle"] = o.Lifecycle
	}
	if !IsNil(o.Cars) {
		toSerialize["cars"] = o.Cars
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Education) {
		toSerialize["education"] = o.Education
	}
	if !IsNil(o.NeighbourhoodType) {
		toSerialize["neighbourhood_type"] = o.NeighbourhoodType
	}
	if !IsNil(o.Income) {
		toSerialize["income"] = o.Income
	}
	if !IsNil(o.HomeOwnership) {
		toSerialize["home_ownership"] = o.HomeOwnership
	}
	if !IsNil(o.BuildingAge) {
		toSerialize["building_age"] = o.BuildingAge
	}
	if !IsNil(o.LivingSpace) {
		toSerialize["living_space"] = o.LivingSpace
	}
	if !IsNil(o.TechLevel) {
		toSerialize["tech_level"] = o.TechLevel
	}
	return toSerialize, nil
}

type NullablePrivateAudienceStatsAllOfAudienceCategories struct {
	value *PrivateAudienceStatsAllOfAudienceCategories
	isSet bool
}

func (v NullablePrivateAudienceStatsAllOfAudienceCategories) Get() *PrivateAudienceStatsAllOfAudienceCategories {
	return v.value
}

func (v *NullablePrivateAudienceStatsAllOfAudienceCategories) Set(val *PrivateAudienceStatsAllOfAudienceCategories) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateAudienceStatsAllOfAudienceCategories) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateAudienceStatsAllOfAudienceCategories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateAudienceStatsAllOfAudienceCategories(val *PrivateAudienceStatsAllOfAudienceCategories) *NullablePrivateAudienceStatsAllOfAudienceCategories {
	return &NullablePrivateAudienceStatsAllOfAudienceCategories{value: val, isSet: true}
}

func (v NullablePrivateAudienceStatsAllOfAudienceCategories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateAudienceStatsAllOfAudienceCategories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


