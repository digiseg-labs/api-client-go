/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResourceSharingTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceSharingTokenRequest{}

// ResourceSharingTokenRequest struct for ResourceSharingTokenRequest
type ResourceSharingTokenRequest struct {
	// An optional ID to encode into the token to enable future identification of it
	Id *string `json:"id,omitempty"`
	ResourceUrls []string `json:"resource_urls,omitempty"`
	// The ID of the account to create the resource sharing token for. The account ID will be encoded into the token and ensure that e.g. subscription limitations and account settings are carried over to the interactions provided with the token. 
	AccountId *string `json:"account_id,omitempty"`
	// The duration of time (in seconds) the resource sharing token is granted for
	ExpiresIn *int32 `json:"expires_in,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceSharingTokenRequest ResourceSharingTokenRequest

// NewResourceSharingTokenRequest instantiates a new ResourceSharingTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceSharingTokenRequest() *ResourceSharingTokenRequest {
	this := ResourceSharingTokenRequest{}
	return &this
}

// NewResourceSharingTokenRequestWithDefaults instantiates a new ResourceSharingTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceSharingTokenRequestWithDefaults() *ResourceSharingTokenRequest {
	this := ResourceSharingTokenRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceSharingTokenRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSharingTokenRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceSharingTokenRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResourceSharingTokenRequest) SetId(v string) {
	o.Id = &v
}

// GetResourceUrls returns the ResourceUrls field value if set, zero value otherwise.
func (o *ResourceSharingTokenRequest) GetResourceUrls() []string {
	if o == nil || IsNil(o.ResourceUrls) {
		var ret []string
		return ret
	}
	return o.ResourceUrls
}

// GetResourceUrlsOk returns a tuple with the ResourceUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSharingTokenRequest) GetResourceUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceUrls) {
		return nil, false
	}
	return o.ResourceUrls, true
}

// HasResourceUrls returns a boolean if a field has been set.
func (o *ResourceSharingTokenRequest) HasResourceUrls() bool {
	if o != nil && !IsNil(o.ResourceUrls) {
		return true
	}

	return false
}

// SetResourceUrls gets a reference to the given []string and assigns it to the ResourceUrls field.
func (o *ResourceSharingTokenRequest) SetResourceUrls(v []string) {
	o.ResourceUrls = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ResourceSharingTokenRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSharingTokenRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ResourceSharingTokenRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ResourceSharingTokenRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *ResourceSharingTokenRequest) GetExpiresIn() int32 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSharingTokenRequest) GetExpiresInOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *ResourceSharingTokenRequest) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *ResourceSharingTokenRequest) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

func (o ResourceSharingTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceSharingTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ResourceUrls) {
		toSerialize["resource_urls"] = o.ResourceUrls
	}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceSharingTokenRequest) UnmarshalJSON(data []byte) (err error) {
	varResourceSharingTokenRequest := _ResourceSharingTokenRequest{}

	err = json.Unmarshal(data, &varResourceSharingTokenRequest)

	if err != nil {
		return err
	}

	*o = ResourceSharingTokenRequest(varResourceSharingTokenRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "resource_urls")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "expires_in")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceSharingTokenRequest struct {
	value *ResourceSharingTokenRequest
	isSet bool
}

func (v NullableResourceSharingTokenRequest) Get() *ResourceSharingTokenRequest {
	return v.value
}

func (v *NullableResourceSharingTokenRequest) Set(val *ResourceSharingTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceSharingTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceSharingTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceSharingTokenRequest(val *ResourceSharingTokenRequest) *NullableResourceSharingTokenRequest {
	return &NullableResourceSharingTokenRequest{value: val, isSet: true}
}

func (v NullableResourceSharingTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceSharingTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


