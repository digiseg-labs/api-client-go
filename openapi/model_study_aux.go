/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StudyAux type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StudyAux{}

// StudyAux struct for StudyAux
type StudyAux struct {
	EventLinks *MeasurementEventLinks `json:"event_links,omitempty"`
	// If present, an upper limit on the number of events that will be processed in this study.
	EventCap *int32 `json:"event_cap,omitempty"`
	// The URL to a banner image for the study. Note that the banner image is used only for Digiseg study reporting and presentation, it does NOT represent any delivered banner ad creatives or similar. 
	BannerImageUrl *string `json:"banner_image_url,omitempty"`
	IntegrationPlatform *MeasurementIntegrationPlatform `json:"integration_platform,omitempty"`
	// Determines if the study is an example study, used to demonstrate product capabilities
	IsExample *bool `json:"is_example,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StudyAux StudyAux

// NewStudyAux instantiates a new StudyAux object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStudyAux() *StudyAux {
	this := StudyAux{}
	return &this
}

// NewStudyAuxWithDefaults instantiates a new StudyAux object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStudyAuxWithDefaults() *StudyAux {
	this := StudyAux{}
	return &this
}

// GetEventLinks returns the EventLinks field value if set, zero value otherwise.
func (o *StudyAux) GetEventLinks() MeasurementEventLinks {
	if o == nil || IsNil(o.EventLinks) {
		var ret MeasurementEventLinks
		return ret
	}
	return *o.EventLinks
}

// GetEventLinksOk returns a tuple with the EventLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StudyAux) GetEventLinksOk() (*MeasurementEventLinks, bool) {
	if o == nil || IsNil(o.EventLinks) {
		return nil, false
	}
	return o.EventLinks, true
}

// HasEventLinks returns a boolean if a field has been set.
func (o *StudyAux) HasEventLinks() bool {
	if o != nil && !IsNil(o.EventLinks) {
		return true
	}

	return false
}

// SetEventLinks gets a reference to the given MeasurementEventLinks and assigns it to the EventLinks field.
func (o *StudyAux) SetEventLinks(v MeasurementEventLinks) {
	o.EventLinks = &v
}

// GetEventCap returns the EventCap field value if set, zero value otherwise.
func (o *StudyAux) GetEventCap() int32 {
	if o == nil || IsNil(o.EventCap) {
		var ret int32
		return ret
	}
	return *o.EventCap
}

// GetEventCapOk returns a tuple with the EventCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StudyAux) GetEventCapOk() (*int32, bool) {
	if o == nil || IsNil(o.EventCap) {
		return nil, false
	}
	return o.EventCap, true
}

// HasEventCap returns a boolean if a field has been set.
func (o *StudyAux) HasEventCap() bool {
	if o != nil && !IsNil(o.EventCap) {
		return true
	}

	return false
}

// SetEventCap gets a reference to the given int32 and assigns it to the EventCap field.
func (o *StudyAux) SetEventCap(v int32) {
	o.EventCap = &v
}

// GetBannerImageUrl returns the BannerImageUrl field value if set, zero value otherwise.
func (o *StudyAux) GetBannerImageUrl() string {
	if o == nil || IsNil(o.BannerImageUrl) {
		var ret string
		return ret
	}
	return *o.BannerImageUrl
}

// GetBannerImageUrlOk returns a tuple with the BannerImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StudyAux) GetBannerImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BannerImageUrl) {
		return nil, false
	}
	return o.BannerImageUrl, true
}

// HasBannerImageUrl returns a boolean if a field has been set.
func (o *StudyAux) HasBannerImageUrl() bool {
	if o != nil && !IsNil(o.BannerImageUrl) {
		return true
	}

	return false
}

// SetBannerImageUrl gets a reference to the given string and assigns it to the BannerImageUrl field.
func (o *StudyAux) SetBannerImageUrl(v string) {
	o.BannerImageUrl = &v
}

// GetIntegrationPlatform returns the IntegrationPlatform field value if set, zero value otherwise.
func (o *StudyAux) GetIntegrationPlatform() MeasurementIntegrationPlatform {
	if o == nil || IsNil(o.IntegrationPlatform) {
		var ret MeasurementIntegrationPlatform
		return ret
	}
	return *o.IntegrationPlatform
}

// GetIntegrationPlatformOk returns a tuple with the IntegrationPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StudyAux) GetIntegrationPlatformOk() (*MeasurementIntegrationPlatform, bool) {
	if o == nil || IsNil(o.IntegrationPlatform) {
		return nil, false
	}
	return o.IntegrationPlatform, true
}

// HasIntegrationPlatform returns a boolean if a field has been set.
func (o *StudyAux) HasIntegrationPlatform() bool {
	if o != nil && !IsNil(o.IntegrationPlatform) {
		return true
	}

	return false
}

// SetIntegrationPlatform gets a reference to the given MeasurementIntegrationPlatform and assigns it to the IntegrationPlatform field.
func (o *StudyAux) SetIntegrationPlatform(v MeasurementIntegrationPlatform) {
	o.IntegrationPlatform = &v
}

// GetIsExample returns the IsExample field value if set, zero value otherwise.
func (o *StudyAux) GetIsExample() bool {
	if o == nil || IsNil(o.IsExample) {
		var ret bool
		return ret
	}
	return *o.IsExample
}

// GetIsExampleOk returns a tuple with the IsExample field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StudyAux) GetIsExampleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExample) {
		return nil, false
	}
	return o.IsExample, true
}

// HasIsExample returns a boolean if a field has been set.
func (o *StudyAux) HasIsExample() bool {
	if o != nil && !IsNil(o.IsExample) {
		return true
	}

	return false
}

// SetIsExample gets a reference to the given bool and assigns it to the IsExample field.
func (o *StudyAux) SetIsExample(v bool) {
	o.IsExample = &v
}

func (o StudyAux) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StudyAux) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventLinks) {
		toSerialize["event_links"] = o.EventLinks
	}
	if !IsNil(o.EventCap) {
		toSerialize["event_cap"] = o.EventCap
	}
	if !IsNil(o.BannerImageUrl) {
		toSerialize["banner_image_url"] = o.BannerImageUrl
	}
	if !IsNil(o.IntegrationPlatform) {
		toSerialize["integration_platform"] = o.IntegrationPlatform
	}
	if !IsNil(o.IsExample) {
		toSerialize["is_example"] = o.IsExample
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StudyAux) UnmarshalJSON(data []byte) (err error) {
	varStudyAux := _StudyAux{}

	err = json.Unmarshal(data, &varStudyAux)

	if err != nil {
		return err
	}

	*o = StudyAux(varStudyAux)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "event_links")
		delete(additionalProperties, "event_cap")
		delete(additionalProperties, "banner_image_url")
		delete(additionalProperties, "integration_platform")
		delete(additionalProperties, "is_example")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStudyAux struct {
	value *StudyAux
	isSet bool
}

func (v NullableStudyAux) Get() *StudyAux {
	return v.value
}

func (v *NullableStudyAux) Set(val *StudyAux) {
	v.value = val
	v.isSet = true
}

func (v NullableStudyAux) IsSet() bool {
	return v.isSet
}

func (v *NullableStudyAux) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStudyAux(val *StudyAux) *NullableStudyAux {
	return &NullableStudyAux{value: val, isSet: true}
}

func (v NullableStudyAux) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStudyAux) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


