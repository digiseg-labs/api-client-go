/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  ## Developer SDKs  In addition to using these APIs directly through any HTTP client, we provide a set of API client SDKs for popular programming languages:  <div class=\"api-clients\">   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-python\">     <i class=\"api-client-sdk-logo devicon-python-plain\"></i>     <p>API client for Python</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-ts\">     <i class=\"api-client-sdk-logo devicon-typescript-plain\"></i>     <p>API client for TypeScript</p>   </a>   <a class=\"api-client-box\" href=\"https://github.com/digiseg-labs/api-client-go\">     <i class=\"api-client-sdk-logo devicon-go-original-wordmark\"></i>     <p>API client for Go</p>   </a> </div> <div class=\"api-clients-breaker\" /> 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the StudyCreationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StudyCreationData{}

// StudyCreationData struct for StudyCreationData
type StudyCreationData struct {
	EventSet MeasurementEventSet `json:"event_set"`
	// The ID of the measurement client that this study is for
	ClientId *string `json:"client_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StudyCreationData StudyCreationData

// NewStudyCreationData instantiates a new StudyCreationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStudyCreationData(eventSet MeasurementEventSet) *StudyCreationData {
	this := StudyCreationData{}
	this.EventSet = eventSet
	return &this
}

// NewStudyCreationDataWithDefaults instantiates a new StudyCreationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStudyCreationDataWithDefaults() *StudyCreationData {
	this := StudyCreationData{}
	return &this
}

// GetEventSet returns the EventSet field value
func (o *StudyCreationData) GetEventSet() MeasurementEventSet {
	if o == nil {
		var ret MeasurementEventSet
		return ret
	}

	return o.EventSet
}

// GetEventSetOk returns a tuple with the EventSet field value
// and a boolean to check if the value has been set.
func (o *StudyCreationData) GetEventSetOk() (*MeasurementEventSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventSet, true
}

// SetEventSet sets field value
func (o *StudyCreationData) SetEventSet(v MeasurementEventSet) {
	o.EventSet = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *StudyCreationData) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StudyCreationData) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *StudyCreationData) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *StudyCreationData) SetClientId(v string) {
	o.ClientId = &v
}

func (o StudyCreationData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StudyCreationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event_set"] = o.EventSet
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StudyCreationData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event_set",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStudyCreationData := _StudyCreationData{}

	err = json.Unmarshal(data, &varStudyCreationData)

	if err != nil {
		return err
	}

	*o = StudyCreationData(varStudyCreationData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "event_set")
		delete(additionalProperties, "client_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStudyCreationData struct {
	value *StudyCreationData
	isSet bool
}

func (v NullableStudyCreationData) Get() *StudyCreationData {
	return v.value
}

func (v *NullableStudyCreationData) Set(val *StudyCreationData) {
	v.value = val
	v.isSet = true
}

func (v NullableStudyCreationData) IsSet() bool {
	return v.isSet
}

func (v *NullableStudyCreationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStudyCreationData(val *StudyCreationData) *NullableStudyCreationData {
	return &NullableStudyCreationData{value: val, isSet: true}
}

func (v NullableStudyCreationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStudyCreationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


