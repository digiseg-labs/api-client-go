/*
Digiseg API

### Digiseg API documentation  # Introduction  This API let you harness the power of Digisegs powerful and tracking-free segmentation engine.  Audiences by Digiseg are available in 50+ countries, probablistically mapping neighborhood characteristics to the IP addresses observed on the internet - Household targeting & measurement for the post-cookie world.  For a catalog of Digisegs audiences, refer to the [Audience list](https://digiseg.io/audiences-list).  There is also an interactive [Audience builder](https://digiseg.io/cookieless-audience-builder/) which lets you discover the targeting reach and power of combining various household characteristics into composite audiences. 

API version: 1.0.0
Contact: support@digiseg.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListPaginationMetaPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPaginationMetaPage{}

// ListPaginationMetaPage struct for ListPaginationMetaPage
type ListPaginationMetaPage struct {
	// The total amount of elements in the list (the returned `data` can be paginated)
	Total *int32 `json:"total,omitempty"`
	FirstCursor *string `json:"first_cursor,omitempty"`
	LastCursor *string `json:"last_cursor,omitempty"`
}

// NewListPaginationMetaPage instantiates a new ListPaginationMetaPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPaginationMetaPage() *ListPaginationMetaPage {
	this := ListPaginationMetaPage{}
	return &this
}

// NewListPaginationMetaPageWithDefaults instantiates a new ListPaginationMetaPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPaginationMetaPageWithDefaults() *ListPaginationMetaPage {
	this := ListPaginationMetaPage{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ListPaginationMetaPage) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPaginationMetaPage) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ListPaginationMetaPage) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ListPaginationMetaPage) SetTotal(v int32) {
	o.Total = &v
}

// GetFirstCursor returns the FirstCursor field value if set, zero value otherwise.
func (o *ListPaginationMetaPage) GetFirstCursor() string {
	if o == nil || IsNil(o.FirstCursor) {
		var ret string
		return ret
	}
	return *o.FirstCursor
}

// GetFirstCursorOk returns a tuple with the FirstCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPaginationMetaPage) GetFirstCursorOk() (*string, bool) {
	if o == nil || IsNil(o.FirstCursor) {
		return nil, false
	}
	return o.FirstCursor, true
}

// HasFirstCursor returns a boolean if a field has been set.
func (o *ListPaginationMetaPage) HasFirstCursor() bool {
	if o != nil && !IsNil(o.FirstCursor) {
		return true
	}

	return false
}

// SetFirstCursor gets a reference to the given string and assigns it to the FirstCursor field.
func (o *ListPaginationMetaPage) SetFirstCursor(v string) {
	o.FirstCursor = &v
}

// GetLastCursor returns the LastCursor field value if set, zero value otherwise.
func (o *ListPaginationMetaPage) GetLastCursor() string {
	if o == nil || IsNil(o.LastCursor) {
		var ret string
		return ret
	}
	return *o.LastCursor
}

// GetLastCursorOk returns a tuple with the LastCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPaginationMetaPage) GetLastCursorOk() (*string, bool) {
	if o == nil || IsNil(o.LastCursor) {
		return nil, false
	}
	return o.LastCursor, true
}

// HasLastCursor returns a boolean if a field has been set.
func (o *ListPaginationMetaPage) HasLastCursor() bool {
	if o != nil && !IsNil(o.LastCursor) {
		return true
	}

	return false
}

// SetLastCursor gets a reference to the given string and assigns it to the LastCursor field.
func (o *ListPaginationMetaPage) SetLastCursor(v string) {
	o.LastCursor = &v
}

func (o ListPaginationMetaPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPaginationMetaPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.FirstCursor) {
		toSerialize["first_cursor"] = o.FirstCursor
	}
	if !IsNil(o.LastCursor) {
		toSerialize["last_cursor"] = o.LastCursor
	}
	return toSerialize, nil
}

type NullableListPaginationMetaPage struct {
	value *ListPaginationMetaPage
	isSet bool
}

func (v NullableListPaginationMetaPage) Get() *ListPaginationMetaPage {
	return v.value
}

func (v *NullableListPaginationMetaPage) Set(val *ListPaginationMetaPage) {
	v.value = val
	v.isSet = true
}

func (v NullableListPaginationMetaPage) IsSet() bool {
	return v.isSet
}

func (v *NullableListPaginationMetaPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPaginationMetaPage(val *ListPaginationMetaPage) *NullableListPaginationMetaPage {
	return &NullableListPaginationMetaPage{value: val, isSet: true}
}

func (v NullableListPaginationMetaPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPaginationMetaPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


